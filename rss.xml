<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="https://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2021-08-23T17:53:56+00:00</updated><id>https://www.yegor256.com/rss.xml</id><title type="html">Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><entry><title type="html">Logging in Unit Tests, a Bad Practice</title><link href="https://www.yegor256.com/2021/08/11/logging-in-unit-tests.html" rel="alternate" type="text/html" title="Logging in Unit Tests, a Bad Practice" /><published>2021-08-11T00:00:00+00:00</published><updated>2021-08-11T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/08/11/logging-in-unit-tests</id><content type="html" xml:base="https://www.yegor256.com/2021/08/11/logging-in-unit-tests.html">&lt;p&gt;Logging is an inevitable part of debugging. Well, at least in modern
high-level programming languages and architectures. It wasn’t thirty 
years ago, in Assembly, but it is now. Sometimes we trace variables, 
but rarely. More often we just print them to console. Moreover, we don’t
just print them using &lt;code class=&quot;highlighter-rouge&quot;&gt;println&lt;/code&gt; or whatever it is we have for console
printing; instead, we send messages to a 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_logging_framework&quot;&gt;logging framework&lt;/a&gt;, which deals with 
the console or any other logging destinations, like files. The beauty
of such frameworks is that we don’t need to remove logging after debugging
is finished—we just configure the framework to suppress all debug-level
messages in the production environment. Some logging may happen
inside unit tests. Do we also leave them there or maybe not?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Children of Men (2006) by Alfonso Cuarón&quot; src=&quot;/images/2021/08/children-of-men.jpg&quot; longdesc=&quot;#739264dd&quot; /&gt;&lt;figcaption id=&quot;739264dd&quot;&gt;Children of Men (2006) by Alfonso Cuarón&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Here is an example (it’s a simplification of a real unit test at
&lt;a href=&quot;https://github.com/polystat/polystat/blob/0.0.1/src/test/java/org/polystat/far/CalcTest.java&quot;&gt;CalcTest.java&lt;/a&gt;
from &lt;a href=&quot;https://www.polystat.org&quot;&gt;Polystat&lt;/a&gt;, a static analyzer we’re working on right now):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.jcabi.log.Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.jcabi.xml.XML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.hamcrest.MatcherAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.hamcrest.Matchers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buildsSimpleXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;This is the XML:\n%s&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;MatcherAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Matchers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;notNullValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is Java and I’m using &lt;a href=&quot;https://junit.org/junit5/&quot;&gt;JUnit5&lt;/a&gt;+&lt;a href=&quot;http://hamcrest.org/&quot;&gt;Hamcrest&lt;/a&gt; 
together with my own logging framework
&lt;a href=&quot;https://log.jcabi.com&quot;&gt;jcabi-log&lt;/a&gt;, which is a decorator of 
&lt;a href=&quot;http://www.slf4j.org/&quot;&gt;Slf4j&lt;/a&gt;, which uses &lt;a href=&quot;https://logging.apache.org/log4j/2.x/&quot;&gt;Log4j&lt;/a&gt; to print to 
the console.&lt;/p&gt;

&lt;p&gt;What is going on here? There is a class &lt;code class=&quot;highlighter-rouge&quot;&gt;Foo&lt;/code&gt; with a method &lt;code class=&quot;highlighter-rouge&quot;&gt;build()&lt;/code&gt;, which
makes an XML document (I’m using &lt;a href=&quot;https://xml.jcabi.com&quot;&gt;jcabi-xml&lt;/a&gt; library, which is a decorator of
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/org/w3c/dom/package-summary.html&quot;&gt;JDK DOM&lt;/a&gt;). 
Then, the unit test prints the contents of the XML document to
the console and makes a pretty silly assertion: the document is not NULL.
It is silly because if it were NULL, the logging statement 
would already fail at the &lt;code class=&quot;highlighter-rouge&quot;&gt;.toString()&lt;/code&gt; call.&lt;/p&gt;

&lt;p&gt;I’m the developer of this code, so I know what was going on: I was too lazy
to write a proper assertion, which would look into the XML document
and ensure that there were proper elements inside. I just printed it to the
console, &lt;em&gt;visually&lt;/em&gt; confirmed its validity and called it a day. 
If I’d had more time, this is how I would have written a much better unit test
(I made the &lt;a href=&quot;https://github.com/polystat/polystat/issues/10&quot;&gt;improvements&lt;/a&gt; in Polystat tests just now):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.jcabi.matchers.XhtmlMatchers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.hamcrest.MatcherAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FooTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buildsSimpleXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;MatcherAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;XhtmlMatchers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xhtml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()),&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;XhtmlMatchers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasXPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//foo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, the XML document is built and then tested for the presence of &lt;code class=&quot;highlighter-rouge&quot;&gt;//foo&lt;/code&gt; 
&lt;a href=&quot;https://en.wikipedia.org/wiki/XPath&quot;&gt;XPath&lt;/a&gt; inside it. 
The content of the document will be printed to the console
only in the case where the assertion fails. If the XML has the required
XPath, there will be no console output, which means no noise for future
developers.&lt;/p&gt;

&lt;p&gt;Moreover, now it’s a &lt;em&gt;single-statement&lt;/em&gt; test, which by itself is 
&lt;a href=&quot;/2017/05/17/single-statement-unit-tests.html&quot;&gt;good practice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Looking back on my experience of testing and logging, 
I believe that logging in unit tests is a bad idea. Sometimes
inevitable, because we are lazy or simply don’t have enough time, but still bad.
Logging helps us confirm visually the correctness of the output,
but it takes this knowledge away from the project. Those who will work with
the test later on won’t know what we’ve seen there. They will
see the output at the console, but will not understand whether it &lt;em&gt;still&lt;/em&gt; matches
my expectations at the time of writing.&lt;/p&gt;

&lt;p&gt;I would say that every logging line in a unit test is a message from its author:
“I know something about the data I see now, but I’m too lazy to tell you about it,
you just have to believe me that it looks good.”&lt;/p&gt;

&lt;p&gt;I suggest we don’t leave such messages in our code.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Do you print log messages from your unit tests?&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1421723724638789632?ref_src=twsrc%5Etfw&quot;&gt;August 1, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="java" /><summary type="html">Logging is an inevitable part of debugging. Well, at least in modern high-level programming languages and architectures. It wasn’t thirty years ago, in Assembly, but it is now. Sometimes we trace variables, but rarely. More often we just print them to console. Moreover, we don’t just print them using println or whatever it is we have for console printing; instead, we send messages to a logging framework, which deals with the console or any other logging destinations, like files. The beauty of such frameworks is that we don’t need to remove logging after debugging is finished—we just configure the framework to suppress all debug-level messages in the production environment. Some logging may happen inside unit tests. Do we also leave them there or maybe not?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/08/children-of-men.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/08/children-of-men.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Prestructors</title><link href="https://www.yegor256.com/2021/08/04/prestructors.html" rel="alternate" type="text/html" title="Prestructors" /><published>2021-08-04T00:00:00+00:00</published><updated>2021-08-04T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/08/04/prestructors</id><content type="html" xml:base="https://www.yegor256.com/2021/08/04/prestructors.html">&lt;p&gt;Making constructors pre-process the arguments before 
encapsulating them seems to be 
&lt;a href=&quot;/2015/05/07/ctors-must-be-code-free.html&quot;&gt;bad practice&lt;/a&gt;. 
However, very often it’s necessary to do exactly that: perform some manipulations
with the objects provided as arguments and only then assign
them to the attributes of the constructed object. For this purpose
I suggest using prestructors, which could be methods or stand-alone
objects.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Huge in France (2019) by Gad Elmaleh et al.&quot; src=&quot;/images/2021/08/huge-in-france.jpg&quot; longdesc=&quot;#957b98b5&quot; /&gt;&lt;figcaption id=&quot;957b98b5&quot;&gt;Huge in France (2019) by Gad Elmaleh et al.&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Say, this is your code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unmodifiableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The only constructor expects a list of titles, which is being
encapsulated as &lt;code class=&quot;highlighter-rouge&quot;&gt;this.titles&lt;/code&gt; for some future use. It’s also protected against
any accidental modifications, through the JDK decorator at
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#unmodifiableList-java.util.List-&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unmodifiableList&lt;/code&gt;&lt;/a&gt;.
So far, so good. Now, we want to make our class a bit smarter 
and let it accept not only the &lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt; but an array of strings:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unmodifiableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What’s wrong with this code? Those of you who have read my earlier 
&lt;a href=&quot;/tag/oop.html&quot;&gt;blog posts about OOP&lt;/a&gt; most definitely know the answer. First, 
there are two primary constructors, which is another 
&lt;a href=&quot;/2015/05/28/one-primary-constructor.html&quot;&gt;bad practice&lt;/a&gt;. 
Second, there is code in the second constructor, which is also a 
&lt;a href=&quot;/2015/05/07/ctors-must-be-code-free.html&quot;&gt;bad idea&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is how I usually refactor this code, to solve both mentioned problems:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unmodifiableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I call this new static method &lt;code class=&quot;highlighter-rouge&quot;&gt;toList()&lt;/code&gt; a &lt;em&gt;prestructor&lt;/em&gt;: it is used
only at the moment of object construction and only from the
secondary constructor.&lt;/p&gt;

&lt;p&gt;An even better way to design it would be to make a new class &lt;code class=&quot;highlighter-rouge&quot;&gt;ToList&lt;/code&gt;,
which would do exactly the same, but in a more declarative and lazy way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unmodifiableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// All required methods of the List interface&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://www.javadoc.io/static/org.cactoos/cactoos/0.50/org/cactoos/list/ListOf.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ListOf&lt;/code&gt;&lt;/a&gt;
from &lt;a href=&quot;https://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt; is a perfect example 
of such a prestructor.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="java" /><summary type="html">Making constructors pre-process the arguments before encapsulating them seems to be bad practice. However, very often it’s necessary to do exactly that: perform some manipulations with the objects provided as arguments and only then assign them to the attributes of the constructed object. For this purpose I suggest using prestructors, which could be methods or stand-alone objects.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/08/huge-in-france.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/08/huge-in-france.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">A Few Tips for Recruiters</title><link href="https://www.yegor256.com/2021/06/01/tips-for-recruiters.html" rel="alternate" type="text/html" title="A Few Tips for Recruiters" /><published>2021-06-01T00:00:00+00:00</published><updated>2021-06-01T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/06/01/tips-for-recruiters</id><content type="html" xml:base="https://www.yegor256.com/2021/06/01/tips-for-recruiters.html">&lt;p&gt;Recruiters, you know what we programmers think about you, don’t you? 
Read &lt;a href=&quot;/2017/02/21/say-no-to-google-recruiters.html&quot;&gt;this&lt;/a&gt;
and &lt;a href=&quot;/2015/09/29/mayonnaise.html&quot;&gt;this&lt;/a&gt;, 
to get the full picture. You are still here because we still
don’t have good tools and we still enjoy being enslaved. One day
this will be over and you will stop exploiting our drawbacks,
will lose your “Senior Recruiter” jobs, and start doing something 
useful and meaningful. However, until this day comes, here is some
advice, to help you be a &lt;del&gt;less annoying&lt;/del&gt; better 
head hunter.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Fifth Element (1997) by Luc Besson&quot; src=&quot;/images/2021/06/the-fifth-element.jpg&quot; longdesc=&quot;#009e7c42&quot; /&gt;&lt;figcaption id=&quot;009e7c42&quot;&gt;The Fifth Element (1997) by Luc Besson&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Recruitment is very much like dating. And you, like it or not,
are a &lt;em&gt;match maker&lt;/em&gt;. Just like those marriage brokers organize
dates and help people fall in love, you help us break up with
the company we’re married to and fall in love with a new one.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=dlPk1AE2aQk&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/dlPk1AE2aQk/mqdefault.jpg&quot; alt=&quot;YouTube video #dlPk1AE2aQk&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M170: recruiters may do a better job if listen to us programmers;
        8 June 2021.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;The best date happens when people research each other beforehand.
You too, should come prepared.
When I get an email from a recruiter that
starts with a description of the job, I most likely just delete it.
Instead, to catch our attention, the letter should start with
an explanation of why you decided to reach out: 
Maybe you already know something about me? 
Maybe you read my code on GitHub? 
Maybe someone told you about me? 
Maybe you know what language I’m coding with? 
When you are interested in me, I will be much more interested in you,
and the company you represent, and the job you are trying to match me with.&lt;/p&gt;

&lt;h2 id=&quot;its-not-about-you&quot;&gt;It’s Not About You&lt;/h2&gt;

&lt;p&gt;It’s important to remember that you are my match maker, but not my date. 
I’m not interested in a date with you. I want to have a date with people who I will work for.
In most cases, you are a temporary person, who will disappear once I’m
hired. That’s why you will do yourself a big favor if you position yourself
the right way. Compare these two:&lt;/p&gt;

&lt;table class=&quot;right-wrong&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Jeff&lt;/th&gt;
      &lt;th&gt;Amy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Hello, I’ve got a database of 5,000 single ladies. I can help you find your soul mate!&lt;/td&gt;
      &lt;td&gt;Hey, I know Silva, she seems to be a perfect match for you, how about I introduce you two?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Jeff is trying to sell himself. He has the database! He knows the ladies!
I should talk to him! He is my new friend!… No, not really, this is not
what I want. I don’t want you, Jeff. Sorry. I’m not interested in knowing
or dating you. Delete.&lt;/p&gt;

&lt;p&gt;Amy, on the other hand, puts Silva in front. This is who I want to know: Silva!
Amy is just a temporary &lt;del&gt;middleman&lt;/del&gt; middlewoman. She is not even trying
to sell herself, even though, I’m sure, she also has a database of ladies, and so on.
Technically speaking, she is no different than Jeff, but she presents herself right: 
“I’m here just to introduce you to Silva, that’s it!” Amy, I like you, I reply!&lt;/p&gt;

&lt;p&gt;How about these two:&lt;/p&gt;

&lt;table class=&quot;right-wrong&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Jeff&lt;/th&gt;
      &lt;th&gt;Amy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Hi, we’re looking for a Java developer to join our new project for online payments, can you send your updated CV?&lt;/td&gt;
      &lt;td&gt;Hey, I showed your profile to our Java tech lead, he is very interested in talking to you, may I introduce you?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Which message do you think has a higher chance of being answered? I bet Jeff’s
email will be replied to only by those who don’t care much where they work. 
For them, seeing a new job opportunity in their Inbox is enough to click “Reply”. 
But ask yourself: does your company need those people?&lt;/p&gt;

&lt;h2 id=&quot;do-you-understand-the-market&quot;&gt;Do You Understand the Market?&lt;/h2&gt;

&lt;p&gt;Dating, just like head hunting, is about finding the right people.
First finding, and then reaching. It’s not a problem to just approach
a Java developer and schedule an interview. Most probably you, as a recruiter,
are not paid for each interview you arrange. You are paid for “a placement”
you make—when the developer is actually hired. We will be hired only
when there is a good match. So, your first task is to find those who 
potentially are a good match. You have to research the market and create
a &lt;em&gt;map of talents&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I would start with a list of key people on the market,
who are the most visible and the best, whatever that means. If your hiring
focus is small enough (this is how it should be), you will identify
just a few dozen key people. Then, starting from them, you dig deeper
and find out where they work, who works in their teams, where
they worked before, and so on. Check the conferences and workshops
where people present their ideas and achievements. Check their GitHub
accounts and see who else is committing to their projects. Do whatever
it takes, but make the map. Maybe even pay a private detective to collect
the data you can’t find in the Internet: who do they drink beer with, where
do they spend their vacations, who do they sleep with, etc. 
I’m kidding here, but you get the idea: you need to know the market!&lt;/p&gt;

&lt;p&gt;Then, once you know your target market, the best way would be to make 
&lt;em&gt;it approach you&lt;/em&gt;. Think about this: 
the best people are hardly reading job boards, 
they don’t post their CVs anywhere, 
don’t make their LinkedIn pages “open for hiring offers,” 
and usually don’t reply to recruiters (for various reasons).
Simply put, they have better things to do than talk to you.
It’s hard to approach them. Sometimes even impossible.&lt;/p&gt;

&lt;p&gt;But you can make them come to you, if you do something that will be
interesting for them. For example, if you organize a competition for new
open source projects with a prize fund of $1M. It’s very likely that
the best people will come to you to compete for this money. There you will
have a chance to talk to them. You don’t have a million dollars to give away
just to hire the best people? Sad… Maybe you can organize a workshop
where people meet to discuss Java and invite those who you want to 
approach? There are many options. Just give them something they are
interested in and they will want to know you.&lt;/p&gt;

&lt;h2 id=&quot;formal-emails-get-deleted&quot;&gt;Formal Emails Get Deleted&lt;/h2&gt;

&lt;p&gt;If you don’t have a million dollars and you don’t have time to
make a good conference for them, you have to do cold calls. Well, more like
cold emails and cold LinkedIn messages. I suggest you sound
&lt;em&gt;short&lt;/em&gt; and &lt;em&gt;informal&lt;/em&gt;. Compare these two:&lt;/p&gt;

&lt;table class=&quot;right-wrong&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Jeff&lt;/th&gt;
      &lt;th&gt;Amy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Dear Sarah,&lt;br /&gt;&lt;br /&gt;My name is Jeff, I’m a recruiter in ACME Inc. We have a new interesting project that needs senior Java developers. The requirements for this position can be found in the attached document.&lt;br /&gt;&lt;br /&gt;Please, send me your updated CV if you are interested.&lt;br /&gt;&lt;br /&gt;Sincerely Yours,&lt;br /&gt;Jeffrey Lebowski&lt;br /&gt;ACME Inc.&lt;br /&gt;Palo Alto, CA&lt;/td&gt;
      &lt;td&gt;Sarah, we’ve never met before but I showed your GitHub to our Head of Dev and she asked me to email you. Her team is making a new payment platform and they lack expertise in big data. How about you two talk?&lt;br /&gt;&lt;br /&gt;BR,&lt;br /&gt;Amy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Jeff’s message is just wrong, on so many levels: it explicitly says that Jeff is
a recruiter (nobody likes recruiters!), it doesn’t say anything about why
Jeff is approaching Sarah, and it’s too formal and official. To me the letter
seems to be template-based, while only the name of the recipient is
replaced (which is not always the case—I’m getting many emails that
start with &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello, %NAME%&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The message from Amy is much better: there is nothing in it that tells me
that Amy is a recruiter! Maybe she is a programmer from the team? Maybe she
is a CEO of the company? I don’t know. And I don’t want to imagine her
being a recruiter. I imagine her being a member of the team, who
is really interested in my stuff on GitHub. She is someone who studied
my work and got interested. She is already my friend. That’s why I reply.&lt;/p&gt;

&lt;h2 id=&quot;cut-corners-for-me&quot;&gt;Cut Corners for Me&lt;/h2&gt;

&lt;p&gt;The biggest disadvantage of Jeff’s email and the advantage of Amy’s is
in the way they present the hiring process to me, the candidate. Jeff
is sending me requirements and right from the start makes it look very long
and official. I immediately imagine a series of interviews, a bunch of
forms to fill up, a month-long journey full of stress. Do I want to 
start that if my current job is more or less OK? No, I don’t. On the other
hand, Amy, right from the first message, suggested connecting me with the
hiring manager, who is already interested in me. Maybe there will be
a full official process of hiring. Most likely! But I already have the
key person on my side: the Head of Dev. The rest will just be formalities.&lt;/p&gt;

&lt;p&gt;Try to put yourself in my shoes. I don’t know your team, I don’t know
the project, I’m scared of change, and I’m not sure I should do it.
It’s easier for me to stay where I am. Also remember that for most people
changing jobs is very similar to betrayal: they quit the team, which
relies on them. You are the person who turns them into traitors. Try to 
make this journey of stress and treachery look simpler for them:&lt;/p&gt;

&lt;table class=&quot;right-wrong&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Jeff&lt;/th&gt;
      &lt;th&gt;Amy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob,&lt;br /&gt;&lt;br /&gt;Send me your updated CV and we will take it from there.&lt;br /&gt;&lt;br /&gt;Sincerely,&lt;br /&gt;Jeff&lt;/td&gt;
      &lt;td&gt;Bob,&lt;br /&gt;&lt;br /&gt;Let me take a look at your CV. Here is how we usually do this: first, you have an interview with the Head of Dev; then, our chief architect talks to you; finally, our HR guys will have a quick call with you; and in about a week we give you an offer. The entire process usually takes up to a month. How does it sound for you? Ready to start a trip? :)&lt;br /&gt;&lt;br /&gt;BR,&lt;br /&gt;Amy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I believe it’s obvious that Amy is doing a much better job of helping
Bob understand what he has to be prepared for. We are scared of things
we don’t understand or don’t know. You don’t want your candidates to be
scared of you. You want them to feel comfortable.&lt;/p&gt;

&lt;p&gt;The best way to attract us candidates is to show that you are ready
to simplify the hiring process especially for us. Well, for me only. Not for everybody.
For example:&lt;/p&gt;

&lt;table class=&quot;right-wrong&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Jeff&lt;/th&gt;
      &lt;th&gt;Amy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob,&lt;br /&gt;&lt;br /&gt;Send me your updated CV and I’ll get the ball rolling. There will be two online interviews and then we will invite you to the office for the final one. Before we start, I kindly ask you to sign the attached form about personal data disclosure. It’s just a formality.&lt;br /&gt;&lt;br /&gt;Yours,&lt;br /&gt;Jeff&lt;/td&gt;
      &lt;td&gt;Bob,&lt;br /&gt;&lt;br /&gt;I need your CV and then I think I can optimize our hiring process a bit: instead of three interviews there will be just two. How does that sound?&lt;br /&gt;&lt;br /&gt;BR,&lt;br /&gt;Amy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Smells like a sales trick? It is.&lt;/p&gt;

&lt;h2 id=&quot;dont-loose-the-intrigue&quot;&gt;Don’t Loose the Intrigue&lt;/h2&gt;

&lt;p&gt;The best companies, I believe, try to find a job position for a person, instead
of finding a person for a position. In other words, they invite
the best people and then let them decide what’s the best
application of their skills and expertise. That’s why the less specific
you are about your “requirements,” the better. Just “we have problems
with big data” is more than enough for a job description. The rest
of it you will explain later, on the first interview. You don’t tell
your requirements to someone you just caught sight of in a bar, do you?
The same here. Remember, recruiting is dating—you have to keep the intrigue up.&lt;/p&gt;

&lt;p&gt;Instead of saying what you need and sending the job description, briefly
explain the problems your team is facing:&lt;/p&gt;

&lt;table class=&quot;right-wrong&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Jeff&lt;/th&gt;
      &lt;th&gt;Amy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob,&lt;br /&gt;&lt;br /&gt;We are looking for a Java developer who knows Spring Framework, MySQL, and XML. You need to have at least five years of hands-on coding experience. You need to be familiar with the payment processing domain.&lt;br /&gt;&lt;br /&gt;Yours,&lt;br /&gt;Jeff&lt;/td&gt;
      &lt;td&gt;Bob,&lt;br /&gt;&lt;br /&gt;We are making a payment processing app and use Spring, MySQL, and XML. Our team lacks expertise in this new domain. We need help, both in form of advice and daily coding.&lt;br /&gt;&lt;br /&gt;BR,&lt;br /&gt;Amy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Jeff is placing his requirements on top, which hardly sounds attractive. Just like
in dating, such an arrogant attitude is not helpful at all. Instead, Amy is
talking about problems she and her team are facing. It’s up to Bob to decide
whether there is a fit or not.&lt;/p&gt;

&lt;p&gt;I would suggest making your job descriptions as undemanding as possible.
Your goal is to attract the best candidate, not to find those who 
are ready to put up with whatever you write in the job description. Write about problems
and issues you expect your candidates to solve. Don’t focus too much on
the expectations you have for them. Of cause you have those expectations,
but putting them right on the table at the first date is a silly idea.&lt;/p&gt;

&lt;p&gt;That’s all. Happy recruiting!&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;You will reply to a cold email from a recruiter if...&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1419250019333550080?ref_src=twsrc%5Etfw&quot;&gt;July 25, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="career" /><summary type="html">Recruiters, you know what we programmers think about you, don’t you? Read this and this, to get the full picture. You are still here because we still don’t have good tools and we still enjoy being enslaved. One day this will be over and you will stop exploiting our drawbacks, will lose your “Senior Recruiter” jobs, and start doing something useful and meaningful. However, until this day comes, here is some advice, to help you be a less annoying better head hunter.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/06/the-fifth-element.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/06/the-fifth-element.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How We Organized the First ICCQ</title><link href="https://www.yegor256.com/2021/04/14/how-we-organized-iccq.html" rel="alternate" type="text/html" title="How We Organized the First ICCQ" /><published>2021-04-14T00:00:00+00:00</published><updated>2021-04-14T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/04/14/how-we-organized-iccq</id><content type="html" xml:base="https://www.yegor256.com/2021/04/14/how-we-organized-iccq.html">&lt;p&gt;First, let me clarify what kind of conference we are talking about. 
There are two types:
&lt;a href=&quot;https://en.wikipedia.org/wiki/Professional_conference&quot;&gt;professional&lt;/a&gt;
and
&lt;a href=&quot;https://en.wikipedia.org/wiki/Academic_conference&quot;&gt;academic&lt;/a&gt;.
The difference is &lt;a href=&quot;https://redmonk.com/kfitzpatrick/2019/01/29/tech-industry-events-vs-academic-conferences/&quot;&gt;huge&lt;/a&gt;.
My understanding is that professional conferences are for &lt;em&gt;practitioners&lt;/em&gt;, 
while academic ones are for &lt;em&gt;researchers&lt;/em&gt;.
ICCQ, which we organized this year, was an academic conference.
I haven’t had any expertise in organizing such things, and had to go through it all for the first time.
Here is a more or less detailed description of the journey.
Feel free to learn from it and make a better conference yourself.
We will try to make a better one next year, &lt;a href=&quot;https://www.iccq.ru/2022.html&quot;&gt;ICCQ 2022&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;GLOW, Season 1 (2017) by Liz Flahive and Carly Mensch&quot; src=&quot;/images/2021/04/glow.jpg&quot; longdesc=&quot;#842e29ce&quot; /&gt;&lt;figcaption id=&quot;842e29ce&quot;&gt;GLOW, Season 1 (2017) by Liz Flahive and Carly Mensch&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Idea&lt;/strong&gt;&lt;br /&gt;
As I said in &lt;a href=&quot;https://www.youtube.com/watch?v=65baOBHeVMI&quot;&gt;my opening speech&lt;/a&gt;, 
the purpose of the new event was to 
help the Russian computer science research community better connect with their worldwide
colleagues. Besides having a good intention I also knew where to get a supportive and reliable sponsor.
The rest was just a matter of implementation.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=65baOBHeVMI&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/65baOBHeVMI/mqdefault.jpg&quot; alt=&quot;YouTube video #65baOBHeVMI&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;Yegor Bugayenko: Opening;
        30 March 2021.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;br /&gt;
There were many options to chose from, but it seemed
that the de-facto standard was a few letters, all-caps, like
&lt;a href=&quot;https://conf.researchr.org/series/splash&quot;&gt;SPLASH&lt;/a&gt;, 
&lt;a href=&quot;http://www.icse-conferences.org/&quot;&gt;ICSE&lt;/a&gt;, 
&lt;a href=&quot;https://pldi21.sigplan.org/&quot;&gt;PLDI&lt;/a&gt;, 
&lt;a href=&quot;https://www.hillside.net/plop/2020/&quot;&gt;PLOP&lt;/a&gt;, 
&lt;a href=&quot;https://www.guide2research.com/topconf/&quot;&gt;etc.&lt;/a&gt; 
There are expections like &lt;a href=&quot;https://2021.eurosys.org/&quot;&gt;EuroSys&lt;/a&gt;
or &lt;a href=&quot;https://www.ieee-security.org/TC/EuroSP2021/&quot;&gt;EuroS&amp;amp;P&lt;/a&gt; but
this naming convention is much less popular.
We picked ICCQ, which was not yet actively used in Google and 
&lt;a href=&quot;https://www.iccq.ru&quot;&gt;the domain&lt;/a&gt;
with the &lt;code class=&quot;highlighter-rouge&quot;&gt;.ru&lt;/code&gt; extension was available. Initially, we aimed for &lt;code class=&quot;highlighter-rouge&quot;&gt;.org&lt;/code&gt;,
but since the event was supposed to &lt;em&gt;always&lt;/em&gt; be Russia-based, the &lt;code class=&quot;highlighter-rouge&quot;&gt;.ru&lt;/code&gt;
seemed to be a perfect choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Subject&lt;/strong&gt;&lt;br /&gt;
Many conferences aim at many topics, maybe in order to 
attract more papers. We decided to behave in the opposite manner:
we picked a single topic of &lt;em&gt;code quality&lt;/em&gt; and decided to reject all papers, 
which would not be relevant to it.
We didn’t even publish the list of topics, like many other
events do. We just said that we are about code quality and 
how to increase it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Organizers&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.iccq.ru/2021.html#organizers&quot;&gt;Organizers&lt;/a&gt; were the people who I needed most of all.
They were not supposed to write papers or make speeches, but without
them I would not be able to make the conference. Not all of them
stayed with us for a whole year, some of them joined and quit, some
moved to the Progam Committee (PC) later. But I’m very thankful to 
&lt;a href=&quot;https://www.linkedin.com/in/sebelov/&quot;&gt;Sergey Belov&lt;/a&gt;,
&lt;a href=&quot;https://scholar.google.ru/citations?user=sZlMj_wAAAAJ&quot;&gt;Sergey Prokhorov&lt;/a&gt;,
and 
&lt;a href=&quot;https://www.linkedin.com/in/jeff-zhu-36ab702/&quot;&gt;Jeff Zhu&lt;/a&gt;—they helped a lot!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dates&lt;/strong&gt;&lt;br /&gt;
We picked a date for the event about eight months ahead of us
and very soon realized that it was a mistake: too close.
It should have been &lt;em&gt;at least&lt;/em&gt; one year ahead of us. We had to re-schedule.
We also set three important dates: 
1) “submission deadline”—four months before the event, 
2) “author notification”—two months after the submission,
3) “camera-ready copies”—one month after author notification.
This timeline seems doable, but pretty tight. Next year we’ll give
our PC more time for reviewing: two months is definitely not enough
for a large event.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;br /&gt;
We made it on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; with &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;:
the source for our website is &lt;a href=&quot;https://github.com/yegor256/iccq.github.io&quot;&gt;here&lt;/a&gt;.
We knew that most conferences use some hosted site builders, like
&lt;a href=&quot;https://conf.researchr.org/&quot;&gt;conf.researchr.org&lt;/a&gt;, but we decided to swim against the
current and build the site the way we believed was right. No surprise,
we’ve got many complaints about that from people who we were trying to 
invite into our team, as partners or co-organizers. They were all starting
the discussion with “You need to do your website right if you want
your conference to be a success.” Nevertheless,
the original design of the website survived. By the way, some of the content
we copied with some modifications from the 
&lt;a href=&quot;https://conf.researchr.org/series/splash&quot;&gt;SPLASH&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Host&lt;/strong&gt;&lt;br /&gt;
We were lucky to have a very famous Russian University on our side
right from the start: &lt;a href=&quot;https://www.hse.ru/&quot;&gt;HSE&lt;/a&gt;. We knew people from there
and they were not against hosting the event and putting their name on our website.
My biggest thanks go to 
&lt;a href=&quot;https://scholar.google.com/citations?user=68uxw-AAAAAJ&amp;amp;hl=en&quot;&gt;Sergey Zykov&lt;/a&gt;, 
&lt;a href=&quot;https://www.hse.ru/en/staff/avdoshin&quot;&gt;Sergey Avdoshin&lt;/a&gt;, 
and 
&lt;a href=&quot;https://www.hse.ru/en/staff/arjantsev&quot;&gt;Ivan Arzhantsev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Venue&lt;/strong&gt;&lt;br /&gt;
HSE was also not against hosting the event physically, on their premises.
The event was not going to be big (up to 100 people attending).
We agreed with HSE that they would give us a big classroom on Saturday. 
They didn’t mind.
However, later, due to the COVID-19 epidemic situation, we decided to make
the event fully online. Moving to online didn’t cause any problems for 
us, it seems. Moreover, we &lt;a href=&quot;https://twitter.com/iccq_ru/status/1381107697693696000&quot;&gt;decided&lt;/a&gt;
that the next event, ICCQ 2022, will also be online, no matter what
the situation will be with the virus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Partners&lt;/strong&gt;&lt;br /&gt;
We figured that in addition to HSE it would be good to have a few other sponsors,
mostly to make us look more serious and reputable (as much as it’s possible
for a young conference). We had good contacts with a few Russian
education organizations and they all agreed to join: 
&lt;a href=&quot;https://mipt.ru/english/&quot;&gt;MIPT&lt;/a&gt;, 
&lt;a href=&quot;https://www.msu.ru/&quot;&gt;MSU&lt;/a&gt;, and 
&lt;a href=&quot;https://www.ispras.ru/en/&quot;&gt;ISP RAS&lt;/a&gt;. 
We contacted industry companies, and they also agreed:
&lt;a href=&quot;https://sbercloud.ru/&quot;&gt;SberCloud&lt;/a&gt;,
&lt;a href=&quot;https://yandex.com/company/&quot;&gt;Yandex&lt;/a&gt;,
and
&lt;a href=&quot;https://www.kaspersky.com/&quot;&gt;Kaspersky&lt;/a&gt;.
And we also contacted two of the biggest not-for-profit Russian media organizations:
&lt;a href=&quot;https://russoft.org/en/&quot;&gt;RUSSOFT&lt;/a&gt;
and
&lt;a href=&quot;https://2021.secrus.org/?lang=en&quot;&gt;SECR&lt;/a&gt;.
They also agreed.
Of course, it was much harder than it sounds. Some organizations didn’t even reply
to us, some of them rejected our invitations. It was a long process that took about two months
of negotiations. We even created &lt;a href=&quot;https://www.iccq.ru/partnership.html&quot;&gt;this web page&lt;/a&gt; 
to explain to them why we wanted them to join us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PC&lt;/strong&gt;&lt;br /&gt;
This was one of the most challenging parts: how to get together a Program Committee
of people who would review the papers and decide which of them deserve to be
published. First, we invited a few people who we knew personally. Then we decided to try and keep
the PC as diverse as possible in terms of country of origin. We didn’t want to 
have only people who were living in Russia. We wanted to build a truly international
PC and also a truly professional one, whatever that means. 
Because of this plan, the only option for us was cold calling—we didn’t
know so many people from different places. 
We sent about 400 invitation emails to people who had participated in similar conferences worldwide.
As you can see on the website: &lt;a href=&quot;https://www.iccq.ru/2021.html#pc&quot;&gt;30 of them&lt;/a&gt; 
agreed to join us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IEEE&lt;/strong&gt;&lt;br /&gt;
This was the biggest challenge: to get a 
&lt;a href=&quot;https://www.computer.org/conferences/organize-a-conference/sponsorship-options&quot;&gt;technical sponsorship&lt;/a&gt; 
from IEEE.
Our friends from IEEE Russia Section C Chapter helped us
(using &lt;a href=&quot;https://www.ieee.org/conferences/organizers/conf-app.html&quot;&gt;this form&lt;/a&gt;), and
&lt;a href=&quot;https://conferences.ieee.org/conferences_events/conferences/conferencedetails/51190&quot;&gt;we got it&lt;/a&gt;.
If you want to know more details about this step, &lt;a href=&quot;https://t.me/yegor256&quot;&gt;tg me&lt;/a&gt;, 
I will try to explain.
It took about three weeks, and they accepted our request.
They gave us their own “Record Number” and ISBN for the Proceedings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keynote&lt;/strong&gt;&lt;br /&gt;
We decided that a good conference must have a good keynote speaker—it is someone
who doesn’t write a paper and doesn’t go through a normal review process.
It must be someone known by the community, in order to make the conference
even more interesting for attendees. We decided to invite 
&lt;a href=&quot;https://cs.au.dk/~amoeller/&quot;&gt;Anders Møller&lt;/a&gt;. We personally
knew him from &lt;a href=&quot;https://cs.au.dk/~amoeller/spa/spa.pdf&quot;&gt;his book&lt;/a&gt; recently published online.
We invited him and he agreed! &lt;a href=&quot;https://www.youtube.com/watch?v=oDdrzXkInnA&quot;&gt;His speech&lt;/a&gt; 
was definitely &lt;del&gt;one of&lt;/del&gt; the best at the conference.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;br /&gt;
We decided to be present on just one social network, since it is the most 
popular among tech people and the easiest to maintain:
&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=iccq_ru&quot;&gt;@iccq_ru&lt;/a&gt;. We
tried to post what was going on with the preparation of the event, almost
every week. Some of our authors and PC members followed us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Registration&lt;/strong&gt;&lt;br /&gt;
We initially thought that the event would be on-site, in the classroom at HSE. That’s why
we created a &lt;a href=&quot;https://www.meetup.com/iccq-ru/events/273816665/&quot;&gt;Meetup&lt;/a&gt; page and
collected over 170 registrations. Unfortunately, due to COVID-19, we 
&lt;a href=&quot;https://twitter.com/iccq_ru/status/1358281073625563145&quot;&gt;had to make&lt;/a&gt;
the conference fully online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steering&lt;/strong&gt;&lt;br /&gt;
We didn’t know what exactly this was for, but we saw other events doing this.
we formed a Steering Committee of two people from our two most important partners:
&lt;a href=&quot;https://www.huaweicloud.com/intl/en-us/news/building-a-smart-future-with-full-stack-innovation-for-the-cloud.html&quot;&gt;Zhang Yuxin&lt;/a&gt;, 
the CTO of Huawei Cloud and 
&lt;a href=&quot;https://www.sberbank.ru/en/press_center/all/article?newsID=ef3e1c1b-fc7f-4eb5-9d36-db23e2ed42fc&amp;amp;blockID=1539&amp;amp;regionID=77&amp;amp;lang=en&amp;amp;type=NEWS&quot;&gt;Yevgeny Kolbin&lt;/a&gt;, 
the CEO of SberCloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EasyChair&lt;/strong&gt;&lt;br /&gt;
There has to be some website to collect papers from authors. We decided to use
&lt;a href=&quot;https://www.easychair.org&quot;&gt;EasyChair&lt;/a&gt;,
since it’s pretty popular and not as expensive as 
&lt;a href=&quot;https://academia.stackexchange.com/questions/2557/conference-management-software-preferably-open-source-with-custom-fields&quot;&gt;some others&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CFP&lt;/strong&gt;&lt;br /&gt;
When everything was ready, there was one remaining question (the biggest one!): how to 
collect the papers from authors. We had to find a way to promote the conference so that
researchers decided to submit their work results to us. Aside from using our 
own existing Twitter/Facebook/Telegram channels, there were two options: 
call-for-papers (CFP) distribution, and paid ads. 
We made &lt;a href=&quot;https://latexonline.cc/compile?git=https%3A%2F%2Fgithub.com%2Fyegor256%2Ficcq.github.io&amp;amp;target=cfp%2F2021%2Fcfp.tex&amp;amp;command=pdflatex&amp;amp;trackId=1617526368363&quot;&gt;PDF&lt;/a&gt; and 
&lt;a href=&quot;https://raw.githubusercontent.com/yegor256/iccq.github.io/master/cfp/2021/cfp.txt&quot;&gt;TXT&lt;/a&gt; versions 
of it and then posted to a few places: 
&lt;a href=&quot;http://www.wikicfp.com/cfp/servlet/event.showcfp?eventid=112792&quot;&gt;WikiCFP&lt;/a&gt;,
&lt;a href=&quot;https://www.call4paper.com/detail/event/PGNZHDXH27553174&quot;&gt;call4paper&lt;/a&gt;,
&lt;a href=&quot;https://allconferencecfpalerts.com/cfp/view.php?eno=22113&quot;&gt;AllConferenceCfpAlerts&lt;/a&gt;,
&lt;a href=&quot;https://listserv.acm.org/scripts/wa-acmlpx.exe?A2=ind2009&amp;amp;L=SEWORLD&amp;amp;P=R5608&quot;&gt;SEWORLD&lt;/a&gt;,
&lt;a href=&quot;http://lists.seas.upenn.edu/pipermail/types-announce/2020/009182.html&quot;&gt;types-announce&lt;/a&gt;,
and
&lt;a href=&quot;https://research.cs.wisc.edu/dbworld/messages/2020-09/1600852058.html&quot;&gt;DBWORLD&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ads&lt;/strong&gt;&lt;br /&gt;
We were lucky enough to have a decent budget for paid ads. We placed
our banners into 
&lt;a href=&quot;https://cacm.acm.org/&quot;&gt;Communications of the ACM&lt;/a&gt;
and 
&lt;a href=&quot;https://ieeexplore.ieee.org/document/9187479&quot;&gt;IEEE Computer&lt;/a&gt;.
We also ran some paid ads on Twitter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Waiting&lt;/strong&gt;&lt;br /&gt;
We were waiting for a few months with almost no result. Some papers
were coming but their quality was obviously pretty low. We were
very nervous, to say the least. We didn’t have any backup plan.
If there were no good papers, I was prepared to call it all off
and admit failure (and accept the monetary losses).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extension&lt;/strong&gt;&lt;br /&gt;
When the deadline arrived, it was obvious that we hadn’t managed to
collect enough papers. We 
&lt;a href=&quot;https://twitter.com/iccq_ru/status/1335476843491766272&quot;&gt;decided&lt;/a&gt; 
to give our authors another two weeks:
the deadline was extended to December 18th.
It was worth it! A few very good papers arrived last and we 
&lt;a href=&quot;https://twitter.com/iccq_ru/status/1340562074884333569&quot;&gt;phew-ed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Invited Talk&lt;/strong&gt;&lt;br /&gt;
To make the conference even stronger, we decided to invite someone
who we knew and respected. Just like we did with the Keynote talk, 
but this time with a full paper to publish too.
We invited &lt;a href=&quot;https://www.sri.inf.ethz.ch/people/veselin&quot;&gt;Veselin Raychev&lt;/a&gt;, 
CTO of &lt;a href=&quot;https://snyk.io/&quot;&gt;Snyk&lt;/a&gt;. He wrote 
a &lt;a href=&quot;https://ieeexplore.ieee.org/document/9392977&quot;&gt;survey paper&lt;/a&gt; 
for us and we promised him that it would be fast-track reviewed.
Without such a promise he would probably not have submitted it to us, since
we are too young and small. But since we sort of guaranteed the publication, he agreed.
This is how, I believe, invited talks work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desk Reject&lt;/strong&gt;&lt;br /&gt;
We &lt;a href=&quot;https://twitter.com/iccq_ru/status/1343967427105841152&quot;&gt;decided&lt;/a&gt; 
to reject six papers before even sending them to the PC
for review. The most popular reason was: out of scope. Some papers
were about something completely irrelevant. One paper was even auto-generated,
along with some very funny typos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bidding&lt;/strong&gt;&lt;br /&gt;
We missed this step, because I didn’t know about it. I would actually
skip it again, in the next conference, but most events do a bidding process,
as I’ve been told. They ask all PC members to go through the list of
all submissions and pick those they want to review. Mostly they will
probably pay attention to the subject, maybe to the quality of paper. In the end,
the distribution of papers among PC members is not randomized.
I don’t like this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reviews&lt;/strong&gt;&lt;br /&gt;
I went to EasyChair dashboard and clicked “assign papers to reviewers
automatically” and the system did it for me. We’ve had 17 papers and
30 reviewers. I configured EasyChair to assign at least three reviewers
for each paper. Do the math: most reviewers got two papers, while some of them
just one. However, only about ten reviewers provided their reviews more or
less instantly. Others were not giving us anything and about ten of them
were not even answering my email reminders. We had just seven weeks between
the submission deadline (remember, we extended it by two weeks) and the
day of the final decision. We were not sure that we would be able 
to collect all necessary reviews and that’s why we 
&lt;a href=&quot;https://twitter.com/iccq_ru/status/1355741062430654466&quot;&gt;asked&lt;/a&gt; most active reviewers
to review more than just two papers. Surprisingly, most of them agreed to help
us. The bottom line: we managed to collect at least three reviews per
paper, while some papers got five reviews. Because most reviewers performed
their duties on time. Only three reviewers never provided us anything,
without any explanation. 10%. Is this how it should be?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acceptance&lt;/strong&gt;&lt;br /&gt;
This was a very tough moment: all papers were ranked and we had to pick some number
of them for the final publication (and reject all the others). 
The question was: how many out of a total of 17?
We were thinking: Having a conference with a small number of published articles is probably not a good
indicator of success. On the other hand, publishing something that
was explicitly rejected by reviewers would be at least unfair to other
authors, and to the reviewers. We had a very intense discussion and decided
to accept just six papers. Why six? Because the average rank of each of them
was positive. All papers with negative ranks were rejected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Copyright Transfer&lt;/strong&gt;&lt;br /&gt;
In order to publish our papers in IEEE Xplore, which is very important for
all authors, we had to transfer the ownership of all texts to IEEE: this is 
the requirement of IEEE. We built a small &lt;a href=&quot;https://www.iccq.ru/ecf.html?id=1&quot;&gt;online form&lt;/a&gt; 
for that and asked all accepted authors to fill it in
(the source for the HTML form is 
&lt;a href=&quot;https://raw.githubusercontent.com/yegor256/iccq.github.io/master/pages/ecf.md&quot;&gt;here&lt;/a&gt;). They did.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;YouTube&lt;/strong&gt;&lt;br /&gt;
I created a new &lt;a href=&quot;https://www.youtube.com/channel/UC_W-pjp6HWJGjK2sayFrnag&quot;&gt;YouTube channel&lt;/a&gt;, 
&lt;a href=&quot;https://support.google.com/youtube/answer/171664?hl=en&quot;&gt;verified&lt;/a&gt; it,
and &lt;a href=&quot;https://www.youtube.com/watch?v=Qf6InatV2h4&quot;&gt;scheduled&lt;/a&gt; a new live stream.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Agenda&lt;/strong&gt;&lt;br /&gt;
We put all talks on the timeline and published the conference agenda.
Then I created Google Calendar events for all sessions and invited
all speakers to their events. I also scheduled a Zoom meeting
for the day of the event and shared the link via the Google Calendar
events.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Welcome Notes&lt;/strong&gt;&lt;br /&gt;
We asked our Steering Committee Chair and Program Committee Chair 
to write short one-page welcome notes. They did
(&lt;a href=&quot;https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;amp;arnumber=9392940&quot;&gt;here&lt;/a&gt; 
and 
&lt;a href=&quot;https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;amp;arnumber=9392979&quot;&gt;here&lt;/a&gt;). 
I also wrote mine, on behalf of the Organizers: 
&lt;a href=&quot;https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;amp;arnumber=9392943&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final PDFs&lt;/strong&gt;&lt;br /&gt;
We asked all accepted authors to send us so-called “camera-ready copies,”
which were basically their original papers, but formatted exactly 
according to our requirements. Lucky for us, all authors were using
LaTeX, so we just gave them a few configuration lines for the source
and all the papers look very similar, formatting-wise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Proceedings&lt;/strong&gt;&lt;br /&gt;
Then, we had to design the book, binding together all welcome notes
and papers. I did it myself this time and you can see the sources 
&lt;a href=&quot;https://github.com/yegor256/iccq.github.io/tree/master/proceedings/2021&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Xplore&lt;/strong&gt;&lt;br /&gt;
Next we packaged the entire ZIP archive and 
&lt;a href=&quot;https://mft.ieee.org/conferences_events/ConfPubFileUploadUI/&quot;&gt;uploaded&lt;/a&gt;
it to IEEE. We didn’t get any response back. We just crossed our fingers
and started waiting. You can see how the package was rendered in 
LaTeX, &lt;a href=&quot;https://github.com/yegor256/iccq.github.io/tree/master/proceedings/2021&quot;&gt;here&lt;/a&gt;. I designed
a collection of scripts (bash + Ruby), which generate all PDFs and
the required 
&lt;a href=&quot;https://ieeemce.org/planning-basics/ieee-conference-publications/submitting-proceedings-ieee-xplore/&quot;&gt;package-list&lt;/a&gt; 
file for IEEE.&lt;/p&gt;

&lt;figure class=&quot;badge&quot;&gt;&lt;img src=&quot;https://www.iccq.ru/images/2021/proceedings.png&quot; style=&quot;width:200px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Prints&lt;/strong&gt;&lt;br /&gt;
We found a printing company here in Moscow and ordered them to print
us 100 copies of the proceedings, 
in &lt;a href=&quot;https://en.wikipedia.org/wiki/Paper_size&quot;&gt;B5 format&lt;/a&gt; 
(&lt;a href=&quot;https://en.wikipedia.org/wiki/Grammage&quot;&gt;100g/m&lt;sup&gt;2&lt;/sup&gt; paper&lt;/a&gt;, 
matte cover). We paid around $10 per copy
and it took about a week to print them all. By the way, we were explicitly told by
IEEE that we are not allowed to sell our Proceedings at all or even 
give them away for free, unless it’s only for PC members, authors,
and people closely related to the organization of the event. That’s
why we printed such a limited number of copies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zoom&lt;/strong&gt;&lt;br /&gt;
On the day of the event, we started our planned Zoom meeting and
connected it to the YouTube live stream, 
&lt;a href=&quot;https://support.zoom.us/hc/en-us/articles/360028478292-Live-streaming-meetings-or-webinars-on-YouTube&quot;&gt;here is how&lt;/a&gt;. 
I clicked “Record” and in six hours there was a 2Gb video file with all presentations.
I also asked all speakers to click “Record” on their side too
and then send me the files Zoom created, in order to have the highest
quality of the video/audio possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Publishing&lt;/strong&gt;&lt;br /&gt;
I asked a friend of mine to edit the large video file, cutting it into 11
pieces: three short welcome speeches, one 45-minute keynote, one invited talk,
and six half-hour sessions. Then I published 
&lt;a href=&quot;https://www.youtube.com/playlist?list=PLsFvzjUuF8yr-2nCkuw_4lRrBv9mReznb&quot;&gt;all 11 files&lt;/a&gt; 
to YouTube. 
I also had to create their front images and some text descriptions.&lt;/p&gt;

&lt;figure class=&quot;badge&quot;&gt;&lt;img src=&quot;/images/2021/04/iccq-box.png&quot; style=&quot;width:250px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Gifts&lt;/strong&gt;&lt;br /&gt;
We packaged our Proceedings in custom-made boxes together with
small chocolate bars, stickers, and a tourist guide book about Moscow.
We sent them to each author, each PC member, and each partner (about 60 boxes). 
What’s left will be used during the year as promotional materials
to advertise our future events and invite new PC members and authors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Published&lt;/strong&gt;&lt;br /&gt;
We got an email from IEEE notifying us that all papers were
published in IEEE Xplore, &lt;a href=&quot;https://ieeexplore.ieee.org/xpl/conhome/9392909/proceeding&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mission complete!&lt;/p&gt;

&lt;p&gt;P.S. If you decide to organize your own event, don’t hesitate
to let me know, maybe I will be able to help you somehow.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="science" /><summary type="html">First, let me clarify what kind of conference we are talking about. There are two types: professional and academic. The difference is huge. My understanding is that professional conferences are for practitioners, while academic ones are for researchers. ICCQ, which we organized this year, was an academic conference. I haven’t had any expertise in organizing such things, and had to go through it all for the first time. Here is a more or less detailed description of the journey. Feel free to learn from it and make a better conference yourself. We will try to make a better one next year, ICCQ 2022.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/04/glow.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/04/glow.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Imposters to Win!</title><link href="https://www.yegor256.com/2021/03/03/imposters-to-win.html" rel="alternate" type="text/html" title="Imposters to Win!" /><published>2021-03-03T00:00:00+00:00</published><updated>2021-03-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/03/03/imposters-to-win</id><content type="html" xml:base="https://www.yegor256.com/2021/03/03/imposters-to-win.html">&lt;p&gt;The time of objectivity is fading out. 
&lt;a href=&quot;/2018/01/09/micro-budgeting.html&quot;&gt;Meritocracy&lt;/a&gt; is now a rude word.
&lt;a href=&quot;/2020/06/23/individual-performance-metrics.html&quot;&gt;Metrics&lt;/a&gt; 
in management will soon be considered as harassment.
Productivity is &lt;a href=&quot;/shift-m/2020/44.html&quot;&gt;already&lt;/a&gt; a false objective.
It’s time to start taking advantage of this era of nonsense.
The era of imposters is coming!
Don’t miss the opportunity to become a great one.
Here is a quick summary of key techniques to make you highly successful in any argument
you may have in your 
&lt;a href=&quot;/2020/12/22/self-managing-orgs.html&quot;&gt;flat democratic organizations of the future&lt;/a&gt;
without any skills, knowledge, education, or real achievements.
Just pure love and emotions.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Kominsky Method (2018-) by Chuck Lorre&quot; src=&quot;/images/2021/03/the-kominsky-method.jpg&quot; longdesc=&quot;#89fd0ee4&quot; /&gt;&lt;figcaption id=&quot;89fd0ee4&quot;&gt;The Kominsky Method (2018-) by Chuck Lorre&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;“Trust Me!”&lt;/strong&gt;
Don’t even try to prove anything by numbers.
This is an outdated technique.
They will only treat you like a weird person, at best.
Rationality is not a sign of professionalism nowadays.
Instead, you should hit them with a straight “trust me” and expect no answer back.
How can they reply to that anyway?
Can they really say that they don’t trust you?
Such toxic behavior no serious organization would tolerate!
We are supposed to trust each other since we are in the same team.
And not just in the same team!
We have to trust everybody in the world—this is what good human beings do!
Thus, no numbers, no facts, no proofs—just a pure and simple “trust me” and you will be the king of any argument.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=ulrMXmIcC4w&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/ulrMXmIcC4w/mqdefault.jpg&quot; alt=&quot;YouTube video #ulrMXmIcC4w&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M167: Sometimes you have to be an imposter, either you like it or not;
        20 April 2021.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;&lt;strong&gt;“I Know What I’m Doing!”&lt;/strong&gt;
Do they still think that you are not convincing enough with your “Trust Me”?
That won’t help them.
Tell them that you worked five years in Oracle and also four years in Intel.
This automatically means that you are right.
Can they argue back with “We don’t care where you worked before”?
That’s too harsh, they won’t do it.
They must respect their colleagues!
Especially those who worked in Oracle and Intel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Do You Think I’m Stupid?!”&lt;/strong&gt;
If they continue arguing, ask this question, looking them right in the eye.
What do they answer?
They will apologize.
The smartest of them will beg for forgiveness and then run away from the meeting room.
This question doesn’t have a right answer.
No matter what they say, you win.
If they start with “No”, your point is proven.
If they start with “Yes”… well they won’t start with “Yes”.
They are good and kind people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“I Will Quit If You Keep Talking Like This!”&lt;/strong&gt;
This is your last line.
After it they won’t have anything in their hands.
They will have to stop right there.
And they will be afraid to get into a fight with you ever again.
Your position will be solid for many months ahead
Especially in a big company, where retention rate is the most important indicator of success.
If you quit because of an argument—your opponent will lose a lot of karma points.
“I will quit” is the most powerful weapon in your arsenal.
However, use it carefully, only after you massage them with the other three tactics.&lt;/p&gt;

&lt;p&gt;Your ultimate goal in your career as a great imposter should be
the situation where nobody argues with you. They must be
scared of verifying your results, questioning your conclusions,
validating your points, and even asking you difficult questions.
They must know that by doing so they will immediately become
“toxic and negative people”—your team doesn’t appreciate such
behavior.&lt;/p&gt;

&lt;p&gt;They must understand that real experts are very fragile and can easily
be offended. They must learn the lesson: 
doubting the opinion of an expert is simply rude.
The best they can do with you, an expert, is to tell you how
great you are and how much they respect your contribution. Anything
aside from that you must treat as an offense and react immediately.&lt;/p&gt;

&lt;p&gt;This is how you tame them.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="sarcasm" /><summary type="html">The time of objectivity is fading out. Meritocracy is now a rude word. Metrics in management will soon be considered as harassment. Productivity is already a false objective. It’s time to start taking advantage of this era of nonsense. The era of imposters is coming! Don’t miss the opportunity to become a great one. Here is a quick summary of key techniques to make you highly successful in any argument you may have in your flat democratic organizations of the future without any skills, knowledge, education, or real achievements. Just pure love and emotions.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/03/the-kominsky-method.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/03/the-kominsky-method.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Dataization</title><link href="https://www.yegor256.com/2021/02/10/dataization.html" rel="alternate" type="text/html" title="Dataization" /><published>2021-02-10T00:00:00+00:00</published><updated>2021-02-10T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/02/10/dataization</id><content type="html" xml:base="https://www.yegor256.com/2021/02/10/dataization.html">&lt;p&gt;There are three things in EOLANG (and the 𝜑-calculus which we
based it on): data, atoms, and objects. There is a dataization
function, which puts all three together in order to make an EO
program alive. Here is how it works together with Java,
for example.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Space Force (2020) by Steve Carell and Greg Daniels&quot; src=&quot;/images/2021/02/space-force.jpg&quot; longdesc=&quot;#6c25ba32&quot; /&gt;&lt;figcaption id=&quot;6c25ba32&quot;&gt;Space Force (2020) by Steve Carell and Greg Daniels&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let’s say we are making an online shop where items are
being shipped to different countries and we must calculate
shipment costs based on the customer’s location. We create
an &lt;a href=&quot;/2020/12/01/abstract-objects.html&quot;&gt;abstract object&lt;/a&gt;
that represents shipment costs:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[customer] &amp;gt; cost-of-shipment
  if. &amp;gt; @
    customer.country.eq &quot;US&quot;
    9.99
    24.99&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, let’s say we have an abstract object &lt;code class=&quot;highlighter-rouge&quot;&gt;customer-in-mysql&lt;/code&gt;,
which represents the customer’s information in the MySQL database. To
make a specific customer &lt;code class=&quot;highlighter-rouge&quot;&gt;jeff&lt;/code&gt; we make a copy of &lt;code class=&quot;highlighter-rouge&quot;&gt;customer-in-mysql&lt;/code&gt;,
specifying the ID of the customer as &lt;code class=&quot;highlighter-rouge&quot;&gt;42&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;customer-in-mysql 42 &amp;gt; jeff&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The closed object &lt;code class=&quot;highlighter-rouge&quot;&gt;jeff&lt;/code&gt; is the customer we are looking for.
We assume that it has the &lt;code class=&quot;highlighter-rouge&quot;&gt;country&lt;/code&gt; child object, which is needed by
the &lt;code class=&quot;highlighter-rouge&quot;&gt;cost-of-shipment&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, we make a copy of the &lt;code class=&quot;highlighter-rouge&quot;&gt;cost-of-shipment&lt;/code&gt; and then
add it to the product price in order to calculate how
much a customer has to pay:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cost-of-shipment jeff &amp;gt; x

x.add product.price &amp;gt; total&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, the &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is a new object, a copy of &lt;code class=&quot;highlighter-rouge&quot;&gt;cost-of-shipment&lt;/code&gt;. Then,
we take the child abstract object &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; from it and make a copy,
giving &lt;code class=&quot;highlighter-rouge&quot;&gt;product.price&lt;/code&gt; object to it as an attribute. We name the created copy
as &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt;. Then, we print the total price:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;stdout &amp;gt; app
  sprintf
    &quot;Your total is %f&quot; total&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All these manipulations don’t make the number print yet. They
are all object declarations. We’ve declared one abstract object
&lt;code class=&quot;highlighter-rouge&quot;&gt;cost-of-shipment&lt;/code&gt; and a few closed objects: &lt;code class=&quot;highlighter-rouge&quot;&gt;jeff&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; and
&lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now the most interesting part, which we call &lt;em&gt;dataization&lt;/em&gt;. It’s a process
of turning an object into data. The data is something that doesn’t have
any child objects and is the simplest element of the computing platform,
where EOLANG software is being compiled. You may think that in the example
above &lt;code class=&quot;highlighter-rouge&quot;&gt;42&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;US&quot;&lt;/code&gt; are data. They are not. They are also objects
and we can write this, for example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;42.add 5 &amp;gt; z

&quot;US&quot;.length &amp;gt; len&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The data behind these objects is not visible for us at the level of
EOLANG program. The data is inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;42&lt;/code&gt; object. Only the runtime
of the specific platform can dig it out through the dataization
mechanism. If you compile the EOLANG code to Java, you will get
a class &lt;code class=&quot;highlighter-rouge&quot;&gt;EOapp&lt;/code&gt; (derived from the &lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt; object), which can be dataized
like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;import org.eolang.phi.Data;
EOapp app = new EOapp();
Boolean data = new Dataized(app).take(Boolean.class);&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The method &lt;code class=&quot;highlighter-rouge&quot;&gt;take()&lt;/code&gt; will take the object &lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt; and will try to ask it
to turn itself as data. The object &lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt; will redirect this request
to the object &lt;code class=&quot;highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;, which will ask the object &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; the same thing:
what data do you have? The object &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; is the object &lt;code class=&quot;highlighter-rouge&quot;&gt;x.add&lt;/code&gt;.
If we look at what &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is, we’ll see that it’s a copy of our own
abstract object &lt;code class=&quot;highlighter-rouge&quot;&gt;cost-of-shipment&lt;/code&gt;, which doesn’t have the child object &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt;!
However, it does have a child object &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;, which is a “catch-all” object:
the request to get &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; will land there.&lt;/p&gt;

&lt;p&gt;The object bound to the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; is the copy of &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if. &amp;gt; @
  customer.country.eq &quot;US&quot;
  9.99
  24.99&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It will take the &lt;code class=&quot;highlighter-rouge&quot;&gt;customer.country.eq&lt;/code&gt;, dataize it in order to get
boolean data, and then, depending on this data, return either &lt;code class=&quot;highlighter-rouge&quot;&gt;9.99&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;24.99&lt;/code&gt;.
Either one of them has the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt;, which will be used to
construct a new object, with an argument &lt;code class=&quot;highlighter-rouge&quot;&gt;product.price&lt;/code&gt;. The result
will be used by the &lt;code class=&quot;highlighter-rouge&quot;&gt;Dataized&lt;/code&gt; Java class in order to continue the process
of dataization. Finally, the sum of two numbers will be dataized to a
Java floating-point number.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=QaKIw1Bh3Oc&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/QaKIw1Bh3Oc/mqdefault.jpg&quot; alt=&quot;YouTube video #QaKIw1Bh3Oc&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;EOLANG: Basics;
        28 January 2021.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;The dataization of &lt;code class=&quot;highlighter-rouge&quot;&gt;customer.country.eq&lt;/code&gt; is happening inside
the runtime and is not visible at the level of EOLANG. The object
&lt;code class=&quot;highlighter-rouge&quot;&gt;eq&lt;/code&gt; is called an &lt;em&gt;atom&lt;/em&gt;, since it’s an atomic element of the language—it
has to be implemented in Java, not in EOLANG. There are other atoms
in the example above: &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;length&lt;/code&gt;.
They all are implemented in Java.&lt;/p&gt;

&lt;p&gt;Thus, we construct objects first, either through &lt;em&gt;abstraction&lt;/em&gt; (declaring new
abstract objects) or through &lt;em&gt;application&lt;/em&gt; (making copies of abstract
objects). Next, we dataize one of the objects and the entire composition
of objects starts to “live,” trying to turn itself into data.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="eolang" /><summary type="html">There are three things in EOLANG (and the 𝜑-calculus which we based it on): data, atoms, and objects. There is a dataization function, which puts all three together in order to make an EO program alive. Here is how it works together with Java, for example.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/02/space-force.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/02/space-force.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Greed-Based Planning</title><link href="https://www.yegor256.com/2021/02/02/greed-based-planning.html" rel="alternate" type="text/html" title="Greed-Based Planning" /><published>2021-02-02T00:00:00+00:00</published><updated>2021-02-02T00:00:00+00:00</updated><id>https://www.yegor256.com/2021/02/02/greed-based-planning</id><content type="html" xml:base="https://www.yegor256.com/2021/02/02/greed-based-planning.html">&lt;p&gt;You have an objective, a budget, and a team. You are
a manager and you want the project to be done. You get your team together
in a &lt;a href=&quot;/2015/07/13/meetings-are-legalized-robbery.html&quot;&gt;meeting room&lt;/a&gt;
to discuss the &lt;em&gt;plan&lt;/em&gt;. You tell them what needs to
be done and ask them how fast they can do it. Then, you do the motivational dance
and &lt;del&gt;beg&lt;/del&gt; ask them to commit. They nod and go back
to their cubicles. Of course, after a few
months of “hard work” all the milestones are missed and you get back to the planning
meeting. And, yes, you pay their salaries
&lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;anyway&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Undercover (2019-) by Netflix&quot; src=&quot;/images/2021/02/undercover.jpg&quot; longdesc=&quot;#37fc4133&quot; /&gt;&lt;figcaption id=&quot;37fc4133&quot;&gt;Undercover (2019-) by Netflix&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This top-down management formula (boss says, everybody nods) was inherited
from the times and industries where staff was easily replaceable
and vitally dependent on the employer’s will.
Call it the time of slavery, if you will.
The basic principle was: “If you don’t do what I say, you suffer.”&lt;/p&gt;

&lt;p&gt;Those times are over. Well, not everywhere, but in software development—for sure.
The suffering part is gone and the formula has evolved to:
“If you don’t do what I say, I feel sad.”
You simply can’t make them &lt;a href=&quot;/2016/01/05/how-to-punish-employees.html&quot;&gt;suffer&lt;/a&gt; anymore.
The only instrument that is left in your hands is
&lt;a href=&quot;/2019/09/03/injection-of-guilt.html&quot;&gt;guilt&lt;/a&gt;.
However, it doesn’t work well with professionals.
&lt;a href=&quot;/2016/09/27/command-control-innovate.html&quot;&gt;&lt;del&gt;Unfortunately&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=vaFPNdNaOAY&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/vaFPNdNaOAY/mqdefault.jpg&quot; alt=&quot;YouTube video #vaFPNdNaOAY&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M160: Traditional top-down planning doesn&amp;#39;t work, try better alternative;
        1 February 2021.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;And because of that the traditional idea of planning doesn’t work either.
No matter how you plan, you can’t get an honest commitment from the
team, that’s why your plans will always be wishes instead of plans.&lt;/p&gt;

&lt;p&gt;I suggest a better formula: “If you do what I say, you benefit.”
Here is how it works: you identify expected deliverables, their quality acceptance criteria,
put reward tags on each one (money, points, promotion,
free vacation, or maybe cookies), and ask your programmers:
“How much do you want to earn?”&lt;/p&gt;

&lt;p&gt;They will do their own planning, having in mind their own time resources,
putting together all the sophisticated motivational pieces, and then make
their decisions: “I’m going to do these 12 tasks and earn $5,000.”
Then, using this information you create the plan and calculate the
timeline of the project. They tell you what they &lt;em&gt;want&lt;/em&gt; to earn
and you &lt;em&gt;know&lt;/em&gt; what results you will get.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;You identify the points of reward and observe the intentions of the team to earn them.
&lt;/aside&gt;

&lt;p&gt;Thus, instead of making plans and making the team deliver according
to them, you identify the points of reward and observe the
intentions of the team to earn them. Your plan will be the derivative
of people’s &lt;del&gt;greed&lt;/del&gt; ambition.&lt;/p&gt;

&lt;p&gt;Of course, this may be easier said than done: Spoiled and lazy
programmers, who are in the overwhelming majority, most likely
will refuse to work for awards. My advice is not to convince
them too much. Just offer the awards on top of the salary they are
getting already. Rewards don’t need to be large. What’s important is
the shift in the decision making process. The decision to complete
the work has to be made by the programmer, not you. The decision
has to be based on their own selfish reasons.&lt;/p&gt;

&lt;p&gt;What’s left for you is just to put their decisions into one
document and see when the project will be completed and how
many bonuses you have to prepare to pay at the end.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">You have an objective, a budget, and a team. You are a manager and you want the project to be done. You get your team together in a meeting room to discuss the plan. You tell them what needs to be done and ask them how fast they can do it. Then, you do the motivational dance and beg ask them to commit. They nod and go back to their cubicles. Of course, after a few months of “hard work” all the milestones are missed and you get back to the planning meeting. And, yes, you pay their salaries anyway.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2021/02/undercover.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2021/02/undercover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Put a Number on Your Boss’s Emotions</title><link href="https://www.yegor256.com/2020/12/29/metric-for-emotions.html" rel="alternate" type="text/html" title="Put a Number on Your Boss’s Emotions" /><published>2020-12-29T00:00:00+00:00</published><updated>2020-12-29T00:00:00+00:00</updated><id>https://www.yegor256.com/2020/12/29/metric-for-emotions</id><content type="html" xml:base="https://www.yegor256.com/2020/12/29/metric-for-emotions.html">&lt;p&gt;You got into a company that believes in
&lt;a href=&quot;/2015/10/13/competition-without-rules.html&quot;&gt;democratic&lt;/a&gt;
values, doesn’t &lt;a href=&quot;/2020/06/23/individual-performance-metrics.html&quot;&gt;measure&lt;/a&gt;
performance, doesn’t judge, doesn’t
&lt;a href=&quot;/2016/09/27/command-control-innovate.html&quot;&gt;control&lt;/a&gt;, doesn’t force, and
doesn’t blame; however, at the end of the year they tell you that
your performance was not as high as expected. Why?
“Just work better, my friend, we count on you!”
Bad luck, you are in a teal &lt;a href=&quot;/2020/12/22/self-managing-orgs.html&quot;&gt;self-managing organization&lt;/a&gt;. 
They’ve already
killed the management, but still didn’t dare to kill the managers.
They don’t know how to measure, but still have people who are
supposed to do it regularly, in order to distribute monetary rewards.
What do you do before you quit? Here is a survival recipe.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Bonnie and Clyde (1967) by Arthur Penn&quot; src=&quot;/images/2020/12/bonnie-and-clyde.jpg&quot; longdesc=&quot;#b097e026&quot; /&gt;&lt;figcaption id=&quot;b097e026&quot;&gt;Bonnie and Clyde (1967) by Arthur Penn&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Here are the symptoms of a disease known as
“&lt;a href=&quot;https://en.wikipedia.org/wiki/Workers'_self-management&quot;&gt;self-managing&lt;/a&gt;”
organizations (also known as teal orgs, or no-management orgs, or
&lt;a href=&quot;https://en.wikipedia.org/wiki/Management_style#Democratic&quot;&gt;democratic&lt;/a&gt;
management, or humane management, or just love and peace):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You do have managers. They decide when you get a salary raise,
when you are promoted, when fired, when moved to a new project,
and so on. They do exist.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They tell you that they are &lt;em&gt;not&lt;/em&gt; managers, but partners,
co-founders, friends, or even family members.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They meet you time to time for face-to-face talks
to focus you on big objectives and inject some
&lt;a href=&quot;/2019/09/03/injection-of-guilt.html&quot;&gt;guilt&lt;/a&gt;:
“We must focus on our customers, or our business value, on strategic
growth! We must make a big impact! We count on your great results
this year!”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They don’t give you any numeric evaluation of your performance
during the course of the entire year.
Unfortunately, there are simply no metrics, mostly because it’s a very bad idea
to put a number on a person! When and if you try to suggest some metrics,
everybody laughs and says that “It’s very difficult to measure
the performance of creative people! &lt;del&gt;Go back to your cage!&lt;/del&gt;”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When the time comes, they make their monetary decisions based on their personal
emotional and irrational judgment of yourself and your results.
You just get a smaller bonus by the end of the year than Jeff, your
less experienced but more vocal and friendly co-worker.
Why? Just because. Take it or leave it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you get brave enough and ask them why your bonus is smaller
than Jeff’s, they ask you “How do you know??”
and start investigating. Then, when they
calm down, you get a long lecture, mentioning some year-old
facts about you not attending the office on that Saturday
“you definitely remember” when everybody was fixing the production
server previously broken by Jeff.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, you quit.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hold on, don’t quit. In almost all other organizations you will
meet the same idiots, but with different names. They are not evil people,
they are just incompetent. They never studied project management, they
don’t have any professional education, they only read books like
&lt;a href=&quot;https://amzn.to/3mgxt7k&quot;&gt;Reinventing Organizations&lt;/a&gt; and listen
to lectures on leadership and multiculturalism. They are not managers.
Forgive them.&lt;/p&gt;

&lt;p&gt;But the question remains, how to behave in order to get the biggest
bonus by the end of the year. I would even say that a more important question
is how to not get yourself hugely frustrated when your bonus is smaller
than Jeff’s, who was obviously less productive, according to your personal
judgment. This actually is the key problem: jealousy. If you see
that someone, who you don’t respect due to his/her bad results and lack
of skills, is appreciated more than yourself by your boss —
you get jealous and quit.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;When they can’t objectively evaluate your performance, they judge you irrationally and emotionally.
&lt;/aside&gt;

&lt;p&gt;Teal &lt;a href=&quot;/2017/06/06/gluten-free-management.html&quot;&gt;gluten-free&lt;/a&gt;
managers can’t objectively evaluate your performance.
They will always judge you irrationally and emotionally. They simply
don’t collect any data during the year (because it’s a bad idea,
&lt;a href=&quot;/2020/06/23/individual-performance-metrics.html&quot;&gt;remember&lt;/a&gt;!)
and the only thing they have in front of them when it’s time to make
a decision—is their feelings about yourself!&lt;/p&gt;

&lt;p&gt;I think that it’s still possible to survive in this
&lt;a href=&quot;/2020/01/07/embrace-the-chaos.html&quot;&gt;mess&lt;/a&gt; though. We just
have to understand how their minds work.
Is it possible to continue doing what we are doing, while
giving these managers something they can use as performance data at the
end of the year? I believe, we have one good metric, they subconsciously
rely on, which we can more or less easily increase:&lt;/p&gt;

&lt;p&gt;“The &lt;em&gt;amount of messages&lt;/em&gt; you get from your boss per day.”&lt;/p&gt;

&lt;p&gt;If you want to be the best in the team, no matter what are your
factual results, boost this metric. It’s simple. Just stay in touch
with the bosses: send them updates, ask questions, share news, go
to lunch with them, rat on your colleagues, spread rumors, etc.
No matter what you do, the goal is: increase the number of messages
they send you back. If it’s growing, you are getting closer to them,
they pay attention to you, they start feeling that you are important,
they will appraise you positively when the time comes. If the number
decreases, you are getting out of their circle—it’s dangerous.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=TmAJPeM4UlE&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/TmAJPeM4UlE/mqdefault.jpg&quot; alt=&quot;YouTube video #TmAJPeM4UlE&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M153: How managers in self-managing orgs judge your performance?;
        21 December 2020.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;This metric will help you understand your position in the team before
the end of the year, when it would be too late. Just see how often the boss
is texting Jeff and you will know where you stand. No matter
what Jeff is working on, what the quality of his code is, what the
value of his contribution is—these things are less important than the
traffic of messages your mutual boss is sending to him.&lt;/p&gt;

&lt;p&gt;Am I being too sarcastic? Not really. This is the new reality
the proponents of self-managing teams are pushing us towards:
Objectivity and honesty is being replaced with adulation and grovelling.
Take it or leave it.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;How do you know that your boss appreciates your work more than others?&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1355972734614974464?ref_src=twsrc%5Etfw&quot;&gt;January 31, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><category term="sarcasm" /><summary type="html">You got into a company that believes in democratic values, doesn’t measure performance, doesn’t judge, doesn’t control, doesn’t force, and doesn’t blame; however, at the end of the year they tell you that your performance was not as high as expected. Why? “Just work better, my friend, we count on you!” Bad luck, you are in a teal self-managing organization. They’ve already killed the management, but still didn’t dare to kill the managers. They don’t know how to measure, but still have people who are supposed to do it regularly, in order to distribute monetary rewards. What do you do before you quit? Here is a survival recipe.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2020/12/bonnie-and-clyde.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2020/12/bonnie-and-clyde.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Self-Managing vs. Manager-Free Organizations</title><link href="https://www.yegor256.com/2020/12/22/self-managing-orgs.html" rel="alternate" type="text/html" title="Self-Managing vs. Manager-Free Organizations" /><published>2020-12-22T00:00:00+00:00</published><updated>2020-12-22T00:00:00+00:00</updated><id>https://www.yegor256.com/2020/12/22/self-managing-orgs</id><content type="html" xml:base="https://www.yegor256.com/2020/12/22/self-managing-orgs.html">&lt;p&gt;We are in trouble. On the one hand, most managers are weak and incompetent.
Their mistakes destroy our &lt;a href=&quot;/2017/09/19/what-motivates-me.html&quot;&gt;motivation&lt;/a&gt;,
decrease productivity, and lead to business failures.
As a result, many of us believe that managers are evil.
On the other hand, there is a new idea that self-managing organizations are
the future. Its proponents are trying to convince us that chaos is
better than management mistakes. They want us to believe that subordination,
hierarchy, &lt;a href=&quot;/2016/09/27/command-control-innovate.html&quot;&gt;control&lt;/a&gt;,
and order are new bad words to be prohibited in a respectful society.
We must stop them!&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Loro (2018) by Paolo Sorrentino&quot; src=&quot;/images/2020/12/loro.jpg&quot; longdesc=&quot;#21fff271&quot; /&gt;&lt;figcaption id=&quot;21fff271&quot;&gt;Loro (2018) by Paolo Sorrentino&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Self-managing organization are, as some researchers
&lt;a href=&quot;https://www.sciencedirect.com/science/article/abs/pii/S0191308517300059&quot;&gt;believe&lt;/a&gt;,
post-bureaucratic, humanistic, democratic, and even
&lt;a href=&quot;/2016/02/18/holacracy-autocracy.html&quot;&gt;holacratic&lt;/a&gt;.
&lt;a href=&quot;https://frankmartela.com/about-the-author/&quot;&gt;Frank Martela&lt;/a&gt;
&lt;a href=&quot;https://jorgdesign.springeropen.com/articles/10.1186/s41469-019-0062-9&quot;&gt;says&lt;/a&gt;
that self-management is “an &lt;em&gt;ideal&lt;/em&gt; type of organizational form.”
The idea is trendy, especially after the publication
of &lt;a href=&quot;https://amzn.to/3mgxt7k&quot;&gt;Reinventing Organizations&lt;/a&gt; by Frederic Laloux.
However, “calling it a novel phenomenon is utter nonsense,”
&lt;a href=&quot;https://corporate-rebels.com/reinventing-the-wheel/&quot;&gt;according&lt;/a&gt; to
&lt;a href=&quot;https://twitter.com/joost_minnaar&quot;&gt;Joost Minnaar&lt;/a&gt;—the idea has been known for decades.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=WZlIb5oxDBQ&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/WZlIb5oxDBQ/mqdefault.jpg&quot; alt=&quot;YouTube video #WZlIb5oxDBQ&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M152: There is no management without personal responsibility;
        14 December 2020.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;My first question is: what exactly was wrong with
bureaucratic, un-humanistic, and non-democratic management?
&lt;a href=&quot;https://en.wikipedia.org/wiki/James_R._Barker&quot;&gt;James R. Barker&lt;/a&gt;
made it clear &lt;a href=&quot;https://www.jstor.org/stable/pdf/2393374.pdf&quot;&gt;a long time ago&lt;/a&gt;:
“workers in a self-managing team will experience day-to-day work life in vastly
different ways than workers in a traditional management system. Instead
of being told what to do by a supervisor, self-managing workers must
gather and synthesize information, act on it, and take collective
responsibility for those actions.”&lt;/p&gt;

&lt;p&gt;Sounds &lt;a href=&quot;https://medium.com/culturati/2f23c298c79b&quot;&gt;very attractive&lt;/a&gt;.
Nobody tells us what to do anymore! We just look around,
gather information, synthesize more information, and “act!” (whatever that means).
Of course, we must not forget that money somehow arrives in our bank accounts
every two weeks—this component of the old un-humanistic bureaucratic management model
we don’t want to get rid of, I believe. Right, Mr. Barker?&lt;/p&gt;

&lt;p&gt;Seriously, who in a self-managing organization makes these decisions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An employee asks for a raise&lt;/li&gt;
  &lt;li&gt;An employee gets lazy and must be fired&lt;/li&gt;
  &lt;li&gt;An employee needs a budget for a new project&lt;/li&gt;
  &lt;li&gt;A project must be terminated&lt;/li&gt;
  &lt;li&gt;A new employee needs to be hired&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simply put, who resolves monetary and performance appraisal conflicts, and how?
All together by “raising their thumb”
as &lt;a href=&quot;https://medium.com/percolab-droplets/generative-decision-making-process-cf0b131c5ac4&quot;&gt;Generative Decision Making&lt;/a&gt; suggests?
Thumb-raising will work for low-caliber questions like which
kind of coffee we should order for the office next week or what the
best color is for our new t-shirts. However, more important strategic decisions
may only be made by those who are ready to pay for mistakes: managers.&lt;/p&gt;

&lt;p&gt;In a traditional hierarchical organization, everybody has a manager, who
is responsible for answering these questions. This is what managers are for:
to concentrate authority and responsibility. This is what levels of management
are for: to decompose larger authority and responsibility into
smaller pieces, delegating them to lower-level personnel. I believe, I don’t need
to explain this essential wisdom: it’s the fundamentals of management.
Right, &lt;a href=&quot;https://en.wikipedia.org/wiki/Peter_Drucker&quot;&gt;Mr. Drucker&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;However, despite the feeling that self-management adepts are not practitioners but
liberal propagandists (trying to declare freedom to everybody without giving
any practically possible scenarios),
there is one idea I do share with them: managers are evil.
Pay attention: managers, not management! There is a big difference.&lt;/p&gt;

&lt;p&gt;Let’s get back to the problem definition once again: We don’t like being
told what to do. However, is this really the problem or is there something deeper
that we are missing? Let’s see, what are the most popular issues with management that people
complain about (I got them from
&lt;a href=&quot;https://www.inc.com/marcel-schwantes/8-mistakes-managers-make-according-to-their-employees.html&quot;&gt;Inc&lt;/a&gt;
and
&lt;a href=&quot;https://www.monster.co.uk/advertise-a-job/hr-resources/workforce-management-and-planning/management-skills/what-are-the-most-common-management-mistakes/&quot;&gt;Monster&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They micromanage&lt;/li&gt;
  &lt;li&gt;They don’t listen&lt;/li&gt;
  &lt;li&gt;They don’t value us&lt;/li&gt;
  &lt;li&gt;They don’t provide feedback&lt;/li&gt;
  &lt;li&gt;They don’t motivate&lt;/li&gt;
  &lt;li&gt;They don’t set goals&lt;/li&gt;
  &lt;li&gt;They don’t delegate&lt;/li&gt;
  &lt;li&gt;They don’t explain&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The list may be much longer, but I think that the root cause of all of them
is the same: managers make &lt;em&gt;appraisal mistakes&lt;/em&gt;. As all other people, managers
can’t always be objective. Instead, they are very biased and subjective. We say that they
don’t listen. This is our perception. They do listen, but they don’t
appraise us right, based on the information we deliver. They do listen, but they
don’t call us genius. What do we say? They don’t listen! They don’t motivate, we say, but
in reality they just don’t give us what we think we deserve. They don’t value us?
The same story: we just feel unappreciated. We feel they micromanage? They just
don’t appreciate the results we deliver without micromanagement, we stop
delivering anything, and they resort to micromanagement.
The root cause always is the same: appraisal mistakes.&lt;/p&gt;

&lt;p&gt;What can we do to fix this?
We should take the appraisal job away from managers! This is how we solve the problem.
People must not decide whose performance is better, because they can’t do it
right and this leads to all the other problems. If managers stop appraising us,
they will turn into leaders, mentors, teachers, experts, gurus, decision makers,
and everybody else, who we don’t hate. We hate &lt;em&gt;appraisers&lt;/em&gt;, because they make
mistakes about our performance and kill our motivation. We won’t hate them
at all, if there is a &lt;em&gt;system&lt;/em&gt;, which is based on
&lt;a href=&quot;/2020/06/23/individual-performance-metrics.html&quot;&gt;&lt;em&gt;metrics&lt;/em&gt;&lt;/a&gt;,
which judge our results.&lt;/p&gt;

&lt;p&gt;What self-managing adepts are offering is to destroy the entire management
system and replace it with chaos (or something very close to it).
They seem to not understand where the real problem is. They just don’t like
“being told what to do” and to fix this they suggest getting rid
of what our civilization has been building for thousands of years:
responsibility delegation through subordination (aka “management”).
They meet incompetent management that doesn’t appreciate them enough and
start crying and blaming everybody with the word “manager” in their job titles.
In other words, to cure the tumor they want to kill the patient.&lt;/p&gt;

&lt;p&gt;Let me reiterate: The evolution of management is needed! We are not happy
with what we have now: most managers are incompetent. However, the solution is not
self-managing but manager-less organizations. We need objective metrics,
automated &lt;a href=&quot;/2018/03/21/zerocracy-announcement.html&quot;&gt;tools&lt;/a&gt; (maybe with AI) to replace
&lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;managers&lt;/a&gt;
as our appraisers.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">We are in trouble. On the one hand, most managers are weak and incompetent. Their mistakes destroy our motivation, decrease productivity, and lead to business failures. As a result, many of us believe that managers are evil. On the other hand, there is a new idea that self-managing organizations are the future. Its proponents are trying to convince us that chaos is better than management mistakes. They want us to believe that subordination, hierarchy, control, and order are new bad words to be prohibited in a respectful society. We must stop them!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2020/12/loro.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2020/12/loro.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Abstract Objects</title><link href="https://www.yegor256.com/2020/12/01/abstract-objects.html" rel="alternate" type="text/html" title="Abstract Objects" /><published>2020-12-01T00:00:00+00:00</published><updated>2020-12-01T00:00:00+00:00</updated><id>https://www.yegor256.com/2020/12/01/abstract-objects</id><content type="html" xml:base="https://www.yegor256.com/2020/12/01/abstract-objects.html">&lt;p&gt;How do you create objects in your object-oriented language?
Let’s take something classic, like C++, Java, or C#. First you define
a class, and then you make an instance of it. The first step is known
as &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstraction_%28computer_science%29&quot;&gt;abstraction&lt;/a&gt;,
and the second one as
&lt;a href=&quot;https://en.wikipedia.org/wiki/Instance_%28computer_science%29#Object_oriented_programming&quot;&gt;instantiation&lt;/a&gt;.
A similar pair of operations
exist in functional programming: declaring a function is
abstraction,
while calling it with specific arguments is
&lt;a href=&quot;https://en.wikipedia.org/wiki/Apply&quot;&gt;application&lt;/a&gt;.
The &lt;a href=&quot;/2016/09/20/oop-without-classes.html&quot;&gt;question is&lt;/a&gt;:
why does OOP need classes &lt;em&gt;and&lt;/em&gt; objects,
while FP survives with just functions?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Irishman (2019) by Martin Scorsese&quot; src=&quot;/images/2020/12/the-irishman.jpg&quot; longdesc=&quot;#79e00810&quot; /&gt;&lt;figcaption id=&quot;79e00810&quot;&gt;The Irishman (2019) by Martin Scorsese&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This is an &lt;em&gt;abstract&lt;/em&gt; object in &lt;a href=&quot;https://www.eolang.org&quot;&gt;EO&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[id db] &amp;gt; book
  db.query &amp;gt; title
    &quot;SELECT title FROM book WHERE id=?&quot;
    id&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The name of the object is &lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt;. It has three
&lt;a href=&quot;/2020/11/24/objects-without-methods.html&quot;&gt;attributes&lt;/a&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;.
The first two are “free”: they are not bound to any objects yet. The third
one &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; is bound already to a copy of the object &lt;code class=&quot;highlighter-rouge&quot;&gt;db.query&lt;/code&gt;. The object
&lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt; is abstract because it has some free attributes—it’s not specific
enough to refer to a specific entity in the real world.&lt;/p&gt;

&lt;p&gt;The construct &lt;code class=&quot;highlighter-rouge&quot;&gt;db.query&lt;/code&gt; takes an abstract object &lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt; from the object
bound to the attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; and makes a copy of it, specifying two
arguments: the SQL string and the &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;. The process of copying an abstract
object is called “application,” since it’s very similar to applying
arguments to a function in FP.&lt;/p&gt;

&lt;p&gt;The right way to use an abstract &lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt; is to make a copy of it, specifying
the arguments:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;book 42 mysql &amp;gt; b&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, &lt;code class=&quot;highlighter-rouge&quot;&gt;42&lt;/code&gt; is the &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; is the &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; is
a new object—a copy of the &lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt;. In 𝜑-calculus, which is foundational
to the EO programming language, this would be written as the following
formula:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;b ↤ book(42, mysql)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In order to get the &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; and name it &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;, we just do:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;b.title &amp;gt; t&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can also put it all together in one line:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(book 42 mysql).title &amp;gt; t&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s possible to apply some arguments to an abstract object leaving
other attributes still free. For example, this would make
another abstract object, still requiring the &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; to be specified
in order to become a &lt;em&gt;closed&lt;/em&gt; object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;book mysql:db &amp;gt; x&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The suffix &lt;code class=&quot;highlighter-rouge&quot;&gt;:db&lt;/code&gt; helps the compiler understand which free
attribute should be bound to the object &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt;.
Later, &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; can be copied again and a closed object &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; will be created:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;x 42 &amp;gt; b&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Even though the syntax of EO makes it possible to say &lt;code class=&quot;highlighter-rouge&quot;&gt;book.title&lt;/code&gt;,
it will lead to a compile-time error: It’s prohibited to touch
free attributes of an abstract object or attributes that depend
on other free attributes. However, let’s say we add a new attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; to the
&lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt;, in order to print it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; to the console we would do the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[id db] &amp;gt; book
  stdout &amp;gt; print
    sprintf
      &quot;The book ID is %d&quot;
      id
  db.query &amp;gt; title
    &quot;SELECT title FROM book WHERE id=?&quot;
    id&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; doesn’t need the &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; attribute to be bound, since it
doesn’t use it. It’s possible to copy the &lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt; with just &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; and
then call &lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt; (assuming it’s happening in an EO interactive console):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ book 42:id &amp;gt; x
x
$ x.print
The book ID is 42&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;By the way, do you know any other languages with abstract objects or
is EO the first one to introduce this design?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="eolang" /><summary type="html">How do you create objects in your object-oriented language? Let’s take something classic, like C++, Java, or C#. First you define a class, and then you make an instance of it. The first step is known as abstraction, and the second one as instantiation. A similar pair of operations exist in functional programming: declaring a function is abstraction, while calling it with specific arguments is application. The question is: why does OOP need classes and objects, while FP survives with just functions?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2020/12/the-irishman.jpg" /><media:content medium="image" url="https://www.yegor256.com/images/2020/12/the-irishman.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>