<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="https://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2019-11-05T19:01:59+00:00</updated><id>https://www.yegor256.com/rss.xml</id><title type="html">Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><entry><title type="html">Software Quality Award, 2020</title><link href="https://www.yegor256.com/2019/11/03/award-2020.html" rel="alternate" type="text/html" title="Software Quality Award, 2020" /><published>2019-11-03T00:00:00+00:00</published><updated>2019-11-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/11/03/award-2020</id><content type="html" xml:base="https://www.yegor256.com/2019/11/03/award-2020.html">&lt;figure class=&quot;badge&quot;&gt;&lt;img src=&quot;/images/andreea/quality-award.svg&quot; style=&quot;width:300px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;This is the &lt;em&gt;sixth&lt;/em&gt; year of the
&lt;a href=&quot;/award.html&quot;&gt;Software Quality Award&lt;/a&gt;. The maximum prize
is still the same—&lt;strong&gt;$4,096&lt;/strong&gt;.
The rules are still the same. Read on.
Previous years are here:
&lt;a href=&quot;/2015/04/16/award.html&quot;&gt;2015&lt;/a&gt;,
&lt;a href=&quot;/2015/10/17/award-2016.html&quot;&gt;2016&lt;/a&gt;,
&lt;a href=&quot;/2016/10/23/award-2017.html&quot;&gt;2017&lt;/a&gt;,
&lt;a href=&quot;/2017/10/24/award-2018.html&quot;&gt;2018&lt;/a&gt;,
&lt;a href=&quot;/2018/09/30/award-2019.html&quot;&gt;2019&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here is &lt;a href=&quot;https://docs.google.com/forms/d/1d7-zopzlhDFkVEhxOOYFePCmRbycLGM9O9NFWVDhMaU&quot;&gt;&lt;strong&gt;the form&lt;/strong&gt;&lt;/a&gt;
to fill out.&lt;/p&gt;

&lt;p&gt;Important! Starting this years rewards are given as donations
to a Zerocracy project. This means, that you will have to have
a project in Zerocracy, where you will get the money. You will then
be able to get that money for yourself via micro-tasks.&lt;/p&gt;

&lt;p&gt;Rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;One person can submit only one project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Submissions are accepted until September 1, 2020.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will check the commit history to make sure you’re the main contributor to the project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I reserve the right to reject any submission without explanation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All submissions will be published on this page (including rejected ones).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Results will be announced October 15, 2020 on this page and by email (or maybe a bit later).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The best project will receive $4,096
(I may split this amount among a few projects and may give away a smaller amount!).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Final decisions will be made by me and are not negotiable
(although I may invite other people to help me make the right decision).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Winners that received any cash prizes in previous years can’t submit again.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=Z70PMGaxGhY&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/Z70PMGaxGhY/mqdefault.jpg&quot; alt=&quot;YouTube video #Z70PMGaxGhY&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;How to win $4096 in the next year Quality Award? (webinar #29);
        1 November 2017.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;Each project must be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Open source (in GitHub).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At least 4,096 lines of code (&lt;a href=&quot;https://www.npmjs.com/package/cloc&quot;&gt;&lt;code&gt;cloc&lt;/code&gt;&lt;/a&gt; without any arguments)
&lt;em&gt;and&lt;/em&gt; at least 16,384 &lt;a href=&quot;/2014/11/14/hits-of-code.html&quot;&gt;hits-of-code&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At least one year old (the age of the first commit).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Object-oriented (that’s the only thing I understand).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best project is selected using this &lt;a href=&quot;/2015/06/08/deadly-sins-software-project.html&quot;&gt;criteria&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What doesn’t matter:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Popularity. Even if nobody is using your
product, it is still eligible for this award. I don’t care about
popularity; quality is the key.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Programming language. I believe that any language, used correctly,
can be applied to design a high-quality product.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Buzz and trends. Even if your project is yet another parser of command
line arguments, it’s still eligible for the award. I don’t care about
your marketing position; quality is all.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the way, if you want to sponsor this award and increase the bonus,
&lt;a href=&quot;mailto:me@yegor256.com&quot;&gt;email me&lt;/a&gt;.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="award" /><summary type="html">This is the sixth year of the Software Quality Award. The maximum prize is still the same—$4,096. The rules are still the same. Read on. Previous years are here: 2015, 2016, 2017, 2018, 2019.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/andreea/quality-award.png" /></entry><entry><title type="html">SQL as a Service</title><link href="https://www.yegor256.com/2019/10/29/sql-as-a-service.html" rel="alternate" type="text/html" title="SQL as a Service" /><published>2019-10-29T00:00:00+00:00</published><updated>2019-10-29T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/10/29/sql-as-a-service</id><content type="html" xml:base="https://www.yegor256.com/2019/10/29/sql-as-a-service.html">&lt;p&gt;I’ve been thinking about this since 2007, somewhere around the time
&lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;S3&lt;/a&gt;
was &lt;a href=&quot;https://en.wikipedia.org/wiki/Amazon_Web_Services&quot;&gt;launched&lt;/a&gt; by Amazon.
I even tried to implement it a few times, but failed right after the
design phase. I’ve heard about a startup, which tried to do it too,
but also &lt;a href=&quot;https://en.wikipedia.org/wiki/Xeround&quot;&gt;failed&lt;/a&gt;. I’m still not sure
whether it’s possible to do, but it could definitely become a best seller in
the market of cloud data management. Wait, you may say, what about
Google Cloud SQL, AWS RDS, Microsoft Azure, Heroku PostgreSQL,
and &lt;a href=&quot;https://en.wikipedia.org/wiki/Cloud_database&quot;&gt;many others&lt;/a&gt;?
They are not even close to what I mean.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;La Dolce Vita (1960) by Federico Fellini&quot; src=&quot;/images/2019/10/la-dolce-vita.jpg&quot; longdesc=&quot;#97793a6e&quot; /&gt;&lt;figcaption id=&quot;97793a6e&quot;&gt;La Dolce Vita (1960) by Federico Fellini&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let me give you an analogy. Say you want to store a piece of binary data in the cloud. I have two
solutions for you. The first one is a hosted server
with &lt;a href=&quot;https://en.wikipedia.org/wiki/File_Transfer_Protocol&quot;&gt;FTP&lt;/a&gt;. You pay
me $5 per month, I give you FTP access to the server, which has a disk of 100Gb. You
can upload your files there and download back. Works just fine.
And I have a second option, which is &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;AWS S3&lt;/a&gt;.
You can also upload and download
your data, but via their &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html&quot;&gt;API&lt;/a&gt;.
And you &lt;a href=&quot;https://aws.amazon.com/s3/pricing/&quot;&gt;pay&lt;/a&gt; for each API request,
each byte hosted, and each byte transferred, instead of a monthly fee.
Which one would you chose?&lt;/p&gt;

&lt;p&gt;Obviously, you would go with S3. Why? What is the fundamental difference
between these two? The key difference is in their &lt;a href=&quot;https://en.wikipedia.org/wiki/Service-level_agreement&quot;&gt;SLAs&lt;/a&gt;:
The first one with an FTP is a &lt;em&gt;server&lt;/em&gt;, the second one is a &lt;em&gt;service&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An FTP server provider guarantees you the availability of computational resources (CPU, disk, bandwidth, etc.),
while S3 guarantees you the availability of the data. If the disk on the
FTP server crashes it will be replaced in a timely manner, but the
data will be lost. If the disk gets full, you will be able to order
an additional server, but it’s your responsibility not to forget. If the
disk space is not used, you still pay $5 per month. And so on.&lt;/p&gt;

&lt;p&gt;AWS S3 was such a breakthrough in the market, more than ten years ago, precisely
because of this difference. They added a new &lt;em&gt;service layer&lt;/em&gt; on top of the good
old &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_hosting_service&quot;&gt;web hosting&lt;/a&gt;
we were all used to. The idea remained the same—it’s still data
in the cloud, which we upload and download—but the SLA was different. We didn’t
need to worry anymore about disk overflow, paying too much for unused space,
regular backups, SSH terminals, and many more things. They just gave us a simple API and
a promise that the data was there and was safe.&lt;/p&gt;

&lt;p&gt;It’s 2019 now and we still don’t have the same for relational data. No matter
which provider you choose, all they do is give you a machine (or a cluster)
with MySQL or PostgreSQL installed (or their own version of them) and
charge you per hour of uptime. They still give you the “good old FTP” without
an additional service layer on top of it.&lt;/p&gt;

&lt;p&gt;This is what I would expect a &lt;em&gt;true&lt;/em&gt; relational-data-in-the-cloud SLA to sound like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Auto-scale&lt;/strong&gt;.
Don’t make us worry about the amount of resources required to host
the data. Just charge more for larger data sets and make sure
our requests come back in a predictable amount of time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pay-per-data&lt;/strong&gt;.
Make us pay for each SQL request, each byte stored, and
each byte transferred. How many servers and disks are required to host
it all—that must not be of our concern.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Restricted SQL&lt;/strong&gt;.
The majority of commands in
&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/sql-syntax.html&quot;&gt;MySQL&lt;/a&gt; or
&lt;a href=&quot;https://www.postgresql.org/docs/12/sql.html&quot;&gt;PostgreSQL&lt;/a&gt; dialects are
not required by the majority of projects. Just give us
&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; and call it a day.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Indexes&lt;/strong&gt;.
Create them automatically, using the statistics of the SQL queries
we are making.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Schema Versioning&lt;/strong&gt;.
Make it possible to update the schema via something similar to
&lt;a href=&quot;https://www.liquibase.org/&quot;&gt;Liquibase&lt;/a&gt;: we create a new &lt;code&gt;ALTER TABLE&lt;/code&gt; or &lt;code&gt;CREATE TABLE&lt;/code&gt; script
and it gets applied to the existing database.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Snapshots and Rollbacks&lt;/strong&gt;.
Make it possible to make a snapshot of the data, apply a new schema
version, and then rollback to one of the previously made snapshots if something
is wrong.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Is it really so hard to implement?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="pets" /><summary type="html">I’ve been thinking about this since 2007, somewhere around the time S3 was launched by Amazon. I even tried to implement it a few times, but failed right after the design phase. I’ve heard about a startup, which tried to do it too, but also failed. I’m still not sure whether it’s possible to do, but it could definitely become a best seller in the market of cloud data management. Wait, you may say, what about Google Cloud SQL, AWS RDS, Microsoft Azure, Heroku PostgreSQL, and many others? They are not even close to what I mean.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/10/la-dolce-vita.jpg" /></entry><entry><title type="html">Date/Time Printing Can Be Elegant Too</title><link href="https://www.yegor256.com/2019/09/27/parsing-and-printing.html" rel="alternate" type="text/html" title="Date/Time Printing Can Be Elegant Too" /><published>2019-09-27T00:00:00+00:00</published><updated>2019-09-27T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/27/parsing-and-printing</id><content type="html" xml:base="https://www.yegor256.com/2019/09/27/parsing-and-printing.html">&lt;p&gt;I owe my &lt;a href=&quot;https://stackoverflow.com/users/187141/yegor256&quot;&gt;pretty high&lt;/a&gt;
StackOverflow reputation to &lt;a href=&quot;https://stackoverflow.com/questions/3914404&quot;&gt;this question&lt;/a&gt;
in particular, which I asked a few years ago: How do you print an
&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; date in Java?
It managed to collect a lot of upvotes since then and 20+ answers, including
&lt;a href=&quot;https://stackoverflow.com/a/14274358/187141&quot;&gt;my own one&lt;/a&gt;. Seriously,
why didn’t Java, such a rich ecosystem, have a built-in out-of-the-box &lt;em&gt;simple&lt;/em&gt;
solution for this primitive task? I believe this is because the designers
of the Java SDK were 1) smart enough not to create a &lt;code&gt;print()&lt;/code&gt; method right in the
class &lt;code&gt;Date&lt;/code&gt;, and 2) not smart enough to give us an extendable set of classes
and interfaces to parse and print dates in an elegant way.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Fargo, Season 2 (2014) by Noah Hawley&quot; src=&quot;/images/2019/09/fargo-2.jpg&quot; longdesc=&quot;#5f920637&quot; /&gt;&lt;figcaption id=&quot;5f920637&quot;&gt;Fargo, Season 2 (2014) by Noah Hawley&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;There are basically three ways to split the responsibility
of parsing and printing in JDK (to my knowledge):&lt;/p&gt;

&lt;h2 id=&quot;dto--utility-class&quot;&gt;DTO + Utility Class&lt;/h2&gt;

&lt;p&gt;The first one is when &lt;em&gt;something&lt;/em&gt; is responsible for printing and parsing
while the object is just a data holder.
There is a class &lt;code&gt;SimpleDateFormat&lt;/code&gt;, which
has to be configured first, with the right time zone and the formatting pattern.
Then it has to be used to print:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm&amp;#39;Z&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTC&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To parse it back, there is the method &lt;code&gt;parse()&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2007-12-03T10:15Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s a classic combination of a
&lt;a href=&quot;/2016/07/06/data-transfer-object.html&quot;&gt;DTO&lt;/a&gt;
and a
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;utility class&lt;/a&gt;.
The DTO is the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;
object and the utility class is the &lt;code&gt;SimpleDateFormat&lt;/code&gt;. The date-object
&lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;exposes&lt;/a&gt;
all required data attributes through a number of
&lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters&lt;/a&gt; and the utility
class prints the date. The date-object has no influence on this process.
It’s not actually an object, but merely a data container.
This is not object-oriented programming at all.&lt;/p&gt;

&lt;h2 id=&quot;the-object&quot;&gt;The Object&lt;/h2&gt;

&lt;p&gt;Java 8 introduced the class &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;
with the method &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;,
which returns time in
&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO-8601&lt;/a&gt; format:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Instant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To parse it back there is a static method
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;
in the same class &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instant&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Instant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2007-12-03T10:15:30Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This approach looks more object-oriented, but
the problem here is that it’s impossible to modify the printing
pattern in any way (for example, remove the milliseconds or
change the format entirely). Moreover, the method &lt;code&gt;parse()&lt;/code&gt; is
&lt;a href=&quot;/2017/11/14/static-factory-methods.html&quot;&gt;static&lt;/a&gt;,
which means that there can be no polymorphism—we can’t change the
logic of parsing either. We also can’t change the printing logic,
since &lt;code&gt;Instant&lt;/code&gt; is a final class, not an interface.&lt;/p&gt;

&lt;p&gt;This design sounds OK if all we need is ISO 8601 date/time strings.
The moment we decide to extend it in some way, we are in trouble.&lt;/p&gt;

&lt;h2 id=&quot;the-ugly-mix&quot;&gt;The Ugly Mix&lt;/h2&gt;

&lt;p&gt;There is also
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;
in &lt;a href=&quot;/2017/11/07/five-new-java-features.html&quot;&gt;Java 8&lt;/a&gt;,
which introduces the third way of dealing with date/time objects.
To print a date to a &lt;code&gt;String&lt;/code&gt; we make an instance of the “formatter” and
pass it to the time-object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZoneId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTC&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTimeFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss&amp;#39;Z&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To parse back, we have to send the &lt;code&gt;formatter&lt;/code&gt; to the static method
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;
together with the text to parse:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;2007-12-03T10:15:30Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;How do they communicate, &lt;code&gt;LocalDateTime&lt;/code&gt; and &lt;code&gt;DateTimeFormatter&lt;/code&gt;?
The time-object is a
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/TemporalAccessor.html&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;,
with a method &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/TemporalAccessor.html#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;
allowing anyone to extract whatever is inside. In other words, again, a
&lt;a href=&quot;/2016/07/06/data-transfer-object.html&quot;&gt;DTO&lt;/a&gt;.
The formatter is still a
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;utility class&lt;/a&gt; (not even an interface),
which expects the DTO to arrive, extracts what’s inside, and prints.&lt;/p&gt;

&lt;p&gt;How do they parse? The method
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;
reads the template, and builds and returns another
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/TemporalAccessor.html&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;
DTO.&lt;/p&gt;

&lt;p&gt;What about encapsulation? “Not this time,” JDK designers say.&lt;/p&gt;

&lt;h2 id=&quot;the-right-way&quot;&gt;The Right Way&lt;/h2&gt;

&lt;p&gt;Here is how I would design it instead. First, I would make a generic
immutable &lt;code&gt;Template&lt;/code&gt; with this interface:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It would be used like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm&amp;#39;Z&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2007&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ss&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// returns &amp;quot;2007-12-03T10:15Z&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This template internally decides how to print the data coming in,
depending on the encapsulated pattern. Here is how the &lt;code&gt;Date&lt;/code&gt; would be
able to print itself:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ss&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is how parsing would work
(it’s a &lt;a href=&quot;/2015/05/07/ctors-must-be-code-free.html&quot;&gt;bad idea&lt;/a&gt;
in general to put code into the constructor, but for this experiment it’s OK):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hours&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;minutes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ss&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s say we want to print time as “13-е января 2019 года” (it’s in Russian).
How we would do this? We don’t create a new &lt;code&gt;Template&lt;/code&gt;, we
&lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;decorate&lt;/a&gt; the
existing one, a few times. First, we make an instance of what we have:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd-е MMMM yyyy-го года&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This one will print something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;12-е MMMM 2019-го года&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code&gt;Date&lt;/code&gt; doesn’t send the value of &lt;code&gt;MMMM&lt;/code&gt; into it, that’s why it doesn’t
replace the text correctly. We have to decorate it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RussianTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;RussianTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;января&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;февраля&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// etc...&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MMMM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, to get a Russian date from a &lt;code&gt;Date&lt;/code&gt; object we do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RussianTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd-е MMMM yyyy-го года&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s say we want to print the date in a different time zone. We create another
decorator, which intercepts the call with the &lt;code&gt;&quot;HH&quot;&lt;/code&gt; and deducts (or adds)
the time difference:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TimezoneTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimezoneTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This code will print Moscow (UTC+3) time in Russian:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimezoneTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RussianTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd-е MMMM yyyy-го года&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can decorate as much as we need, making the &lt;code&gt;Template&lt;/code&gt; as powerful
as it needs to be. The elegance of this approach is that the class
&lt;code&gt;Date&lt;/code&gt; is completely decoupled from the &lt;code&gt;Template&lt;/code&gt;, which makes them
both replaceable and polymorphic.&lt;/p&gt;

&lt;p&gt;Maybe someone will be interested in creating an open source
date and time printing and parsing library for Java with these
principles in mind?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="java" /><summary type="html">I owe my pretty high StackOverflow reputation to this question in particular, which I asked a few years ago: How do you print an ISO 8601 date in Java? It managed to collect a lot of upvotes since then and 20+ answers, including my own one. Seriously, why didn’t Java, such a rich ecosystem, have a built-in out-of-the-box simple solution for this primitive task? I believe this is because the designers of the Java SDK were 1) smart enough not to create a print() method right in the class Date, and 2) not smart enough to give us an extendable set of classes and interfaces to parse and print dates in an elegant way.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/fargo-2.jpg" /></entry><entry><title type="html">Be Unhappy to Be Happy</title><link href="https://www.yegor256.com/2019/09/17/be-unhappy-to-be-happy.html" rel="alternate" type="text/html" title="Be Unhappy to Be Happy" /><published>2019-09-17T00:00:00+00:00</published><updated>2019-09-17T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/17/be-unhappy-to-be-happy</id><content type="html" xml:base="https://www.yegor256.com/2019/09/17/be-unhappy-to-be-happy.html">&lt;p&gt;At the very end of one of my &lt;a href=&quot;https://www.youtube.com/watch?v=m5mPtC7LYiY&quot;&gt;recent meetups&lt;/a&gt; I was asked a question:
“Are you a happy person?” I mumbled something about being happy from time to time,
but later gave this question more thought. Am I happy? Not really. Well,
sometimes. What makes me happy? And why are &lt;a href=&quot;https://www.livescience.com/61525-why-are-people-unhappy.html&quot;&gt;so many of us&lt;/a&gt;
unhappy so often?
It seems that there is an answer, and a recipe for happiness.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Yip Man (2008) by Wilson Yip&quot; src=&quot;/images/2019/09/yip-man.jpg&quot; longdesc=&quot;#41b216d4&quot; /&gt;&lt;figcaption id=&quot;41b216d4&quot;&gt;Yip Man (2008) by Wilson Yip&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“A well-paid job, house, car, family are the ultimate possessions
of anyone’s life. But &lt;em&gt;despite&lt;/em&gt; having everything why is the happiness missing?”
Debika Chakraborty asks &lt;a href=&quot;https://www.lifealth.com/mind-body-and-soul/happiness/why-despite-having-everything-we-are-not-happy-dc/27095/&quot;&gt;here&lt;/a&gt;.
I think that happiness is missing not despite us having everything, but &lt;em&gt;thanks&lt;/em&gt; to that.&lt;/p&gt;

&lt;p&gt;Happiness, according to &lt;a href=&quot;https://en.wikiquote.org/wiki/The_Antichrist&quot;&gt;Nietzsche&lt;/a&gt;,
is “the feeling that power increases — that a resistance is overcome.”
Therefore, in order to be happy, we must have some issues to deal with. It’s not enough to possess those
cars, houses and well-paid jobs. We need to overcome the obstacles first.
Happiness is simply impossible without a struggle being won.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;To be happy, we constantly need a new problem to solve, a trouble to get rid of, or an enemy to destroy.
&lt;/aside&gt;

&lt;p&gt;To be happy, we constantly need a new problem to solve, a trouble to get rid of, or an enemy
to destroy, if you wish. What kind of enemy it might be—depends.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Aristotle&quot;&gt;Aristotle&lt;/a&gt;,
for example, &lt;a href=&quot;https://www.wsj.com/articles/aristotles-pursuit-of-happiness-11548950094&quot;&gt;according to&lt;/a&gt;
Edith Hall, believed that “happiness comes from a &lt;em&gt;continuous&lt;/em&gt; effort
to become the best possible version of yourself,” which is
the war with yourself, “the worst enemy you can meet,” as
&lt;a href=&quot;https://www.goodreads.com/quotes/331586-but-the-worst-enemy-you-can-meet-will-always-be&quot;&gt;Zarathustra&lt;/a&gt; once said.
On top of that, there are, of course, other foes all around us, including poverty, lack of skills,
health issues, annoying colleagues, or
&lt;a href=&quot;/2018/08/14/seventy-percent.html&quot;&gt;cheating partners&lt;/a&gt;.
To be happy we need some of these things.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bertrand_Russell&quot;&gt;Bertrand Russell&lt;/a&gt;, in his book
&lt;em&gt;The Conquest of Happiness&lt;/em&gt;, &lt;a href=&quot;https://en.wikiquote.org/wiki/The_Conquest_of_Happiness&quot;&gt;suggested&lt;/a&gt;
that “to be without some of the things you want is an indispensable part of happiness.”
However, the modern world, and especially the tech part of it, &lt;em&gt;gives&lt;/em&gt; us almost
anything and everything we may wish for, including the cars, houses, healthy
food, information, electric scooters, safety, lifetime employment and retirement plans.
We’ve got nothing to &lt;em&gt;worry&lt;/em&gt; about and … we are unhappy because of that.&lt;/p&gt;

&lt;p&gt;The key word here is “worry” not “give.” Happiness doesn’t really depend on
how rich or poor we are, as studies &lt;a href=&quot;http://content.time.com/time/magazine/article/0,9171,2019628,00.html&quot;&gt;confirm&lt;/a&gt;
(well, above a certain level). Instead, it depends on how &lt;em&gt;easily&lt;/em&gt; we get what we want.
The more we &lt;em&gt;worry&lt;/em&gt; and the less life &lt;em&gt;gives&lt;/em&gt; us for free, the more happy we are …
provided we achieve what we want.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ernest_Hemingway&quot;&gt;Ernest Hemingway&lt;/a&gt; in
&lt;em&gt;The Garden of Eden&lt;/em&gt;
&lt;a href=&quot;https://www.goodreads.com/quotes/2981-happiness-in-intelligent-people-is-the-rarest-thing-i-know&quot;&gt;said&lt;/a&gt;
that “happiness in intelligent people is the rarest thing I know.”
This is because most “intelligent” people nowadays possess all those things
mentioned above and don’t need to struggle much in order to get them.
The smarter we are, the easier it is for us &lt;em&gt;to achieve&lt;/em&gt;: find a well-paid job
and buy a new iPhone.&lt;/p&gt;

&lt;p&gt;We &lt;del&gt;intelligent&lt;/del&gt; tech people, don’t struggle enough.&lt;/p&gt;

&lt;p&gt;Life doesn’t challenge us as much as we need. We don’t even need to have special talents
these days to be decently paid: You read &lt;a href=&quot;https://amzn.to/2O1MBIg&quot;&gt;&lt;em&gt;JavaScript in 24 Hours&lt;/em&gt;&lt;/a&gt; and a new iPhone
is yours. The market is &lt;a href=&quot;https://fullscale.io/the-talent-shortage-of-software-developers-in-2019/&quot;&gt;in deficit&lt;/a&gt;
now and the demand is &lt;a href=&quot;https://www.techrepublic.com/article/cio-jury-83-of-cios-struggle-to-find-tech-talent/&quot;&gt;much higher&lt;/a&gt;
than the supply of coding hands. Moreover, most managers are
&lt;a href=&quot;/2017/08/01/how-to-manage-a-manager.html&quot;&gt;incapable&lt;/a&gt; of
demanding above-average performance from us. This may look like a perfect life,
but in a long run we may end up with problems
larger than unhappiness or depression—read what happened to the poor mice in the
&lt;a href=&quot;https://curiosity.com/topics/universe-25-began-as-a-mice-paradise-but-ended-as-a-nightmare-curiosity/&quot;&gt;Universe 25&lt;/a&gt;
experiment.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Tech people don’t struggle enough, life doesn’t challenge us as much as we need.
&lt;/aside&gt;

&lt;p&gt;What is the solution?
Listen to what &lt;a href=&quot;https://en.wikipedia.org/wiki/Francis_T._McAndrew&quot;&gt;Frank T. McAndrew&lt;/a&gt;
&lt;a href=&quot;https://www.theguardian.com/commentisfree/2016/aug/17/psychology-happiness-contentment-humans-aspire-goals-accomplish-evolution&quot;&gt;says&lt;/a&gt;:
“Dissatisfaction with the present and dreams of the future are what keep us motivated,”
meaning that happiness comes to those who
1) are permanently dissatisfied with current results and
2) act to achieve more.&lt;/p&gt;

&lt;p&gt;Ergo, the recipe of happiness is: resent, overcome, repeat.&lt;/p&gt;

&lt;p&gt;But what to resent? Well this may be
your laziness, your fears, your absence of Oracle certification, your
low StackOverflow &lt;a href=&quot;/2017/02/14/stackoverflow-is-your-tool.html&quot;&gt;reputation&lt;/a&gt;,
or no paychecks from the Apple Store (do you have
your own revenue-generating app there?)&lt;/p&gt;

&lt;p&gt;Once the obstacle is overcome, repeat.&lt;/p&gt;

&lt;p&gt;Stay unhappy. To be happy.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What makes you happy? &lt;a href=&quot;https://twitter.com/hashtag/happiness?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#happiness&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1173239049697529859?ref_src=twsrc%5Etfw&quot;&gt;September 15, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="mood" /><category term="psychology" /><summary type="html">At the very end of one of my recent meetups I was asked a question: “Are you a happy person?” I mumbled something about being happy from time to time, but later gave this question more thought. Am I happy? Not really. Well, sometimes. What makes me happy? And why are so many of us unhappy so often? It seems that there is an answer, and a recipe for happiness.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/yip-man.jpg" /></entry><entry><title type="html">How to Motivate Kids to Code</title><link href="https://www.yegor256.com/2019/09/10/how-to-motivate-kids-to-code.html" rel="alternate" type="text/html" title="How to Motivate Kids to Code" /><published>2019-09-10T00:00:00+00:00</published><updated>2019-09-10T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/10/how-to-motivate-kids-to-code</id><content type="html" xml:base="https://www.yegor256.com/2019/09/10/how-to-motivate-kids-to-code.html">&lt;p&gt;I got an email a few days ago. “I’m not a programmer. I’m a mom of two
kids: 9 and 14. They both seem to be interested in computers, but they
mostly play games. What would you recommend I do to help them make
a career in tech?” I’m not an expert in parenting, but I’m getting similar
requests rather often. It’s great to see that &lt;em&gt;some&lt;/em&gt; people realize
the difference between playing GTA and Java coding. It’s very sad to see
that they don’t know how to motivate their kids. I don’t know either,
but I can try to make a guess.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Hackers (1995) by Iain Softley&quot; src=&quot;/images/2019/09/hackers.jpg&quot; longdesc=&quot;#e5752167&quot; /&gt;&lt;figcaption id=&quot;e5752167&quot;&gt;Hackers (1995) by Iain Softley&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I can’t speak for everyone, but for me studying for the sake of “learning
new things” is not fun at all. I don’t enjoy the process of becoming smarter.
I enjoy &lt;em&gt;building&lt;/em&gt; things. If I need to learn something new in order to make
new things happen, I will do it and I will enjoy learning, because it leads
to practical results: new things.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Studying for the sake of learning new things is not fun at all.
&lt;/aside&gt;

&lt;p&gt;For example, &lt;a href=&quot;https://kotlinlang.org/&quot;&gt;Kotlin&lt;/a&gt; has been on the market for a few years already. It’s
a new programming language. I do realize that it may eventually replace
Java and so I need to learn it. But I can’t imagine myself reading documentation
and studying it for days. It’s super boring. Because it leads nowhere.
Well, it leads to me knowing how to code in Kotlin, but what’s the point if
I can code in Java already? In order to learn Kotlin I need a new project, which
I will then write in Kotlin. I will learn the language while &lt;em&gt;using&lt;/em&gt; it.&lt;/p&gt;

&lt;p&gt;My point is that in order to motivate myself to learn Kotlin you need to give me a
goal, which I will achieve &lt;em&gt;after&lt;/em&gt; I’ve learned Kotlin while &lt;em&gt;using&lt;/em&gt; this new knowledge to get there.
Maybe, and most probably, your kids may need something similar: a &lt;em&gt;tangible&lt;/em&gt;
motivator. Something they will see in front of them, which will make them
happy when they get there, after they learn those boring Java and Kotlin languages.
What could such a prize look like for a nine-year-old?&lt;/p&gt;

&lt;p&gt;Well, how about one of these (maybe not all of them apply to all ages,
but you get the idea):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make an iPhone mobile game and publish it on the Apple Store?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you create a blog for me?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make an online shop to sell my homemade cookies?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make an app to help me track my gym exercise results?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you win $1,000 in the next hackathon?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you get an Oracle Java certificate?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you find a security breach in your school’s website?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make a robot which cleans the floor?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Actually, that’s exactly how I learned everything I know about computers.
I started programming when I was around 10 years old. I’ve always had a task in front of me and it was
always something interesting to do for myself and the people around me.
In other words, I’ve always had my eyes on the prize.
The majority of my projects are not alive anymore, especially the ones
I created when I was a kid and a student (and I feel so sad about that).
However, the outcome is obvious: I’m in the tech industry now and I can code in Java.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Your job, as their parents, is to help them identify the right goals—this is where kids usually fail.
&lt;/aside&gt;

&lt;p&gt;So don’t expect your kids to enjoy studying. Expect them to be interested
in &lt;em&gt;building&lt;/em&gt; things and making &lt;del&gt;money&lt;/del&gt; profit. Your job, as their parents, is
to help them &lt;em&gt;identify&lt;/em&gt; the right goals—this is where kids usually fail because they
don’t have enough experience to judge what’s more achievable and which are the largest risks.
I remember trying to create a robot which was supposed to speak like a human.
I was 13 years old. Obviously, I needed help at that time: someone had to tell
me that this goal was not really achievable and doing something
simpler and more practical would be a better application of my efforts.&lt;/p&gt;

&lt;p&gt;Don’t &lt;a href=&quot;/2015/09/22/micromanagement.html&quot;&gt;micromanage&lt;/a&gt;
your kids by telling them what to learn, how many hours a day to study,
which schools to attend, and which books to read. Instead, do what good
managers do with their employees: set objectives and make sure everybody knows what
the rewards and punishment are.&lt;/p&gt;

&lt;p&gt;Something similar is what your kids need from you. Measure their progress and help
them find adequately complex and interesting goals. On top of that, make sure
they understand what the benefits will be when the goals are achieved and … well,
you have to find a way to punish them for failures. Don’t punish them
for being stupid or lazy. The only thing that deserves punishment is
breaking the promise to achieve the results.&lt;/p&gt;

&lt;p&gt;A promise made to themselves, of course.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Your boss says you have to learn and use a new framework, you answer: &lt;a href=&quot;https://twitter.com/hashtag/motivation?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#motivation&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1183280977935773696?ref_src=twsrc%5Etfw&quot;&gt;October 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="career" /><summary type="html">I got an email a few days ago. “I’m not a programmer. I’m a mom of two kids: 9 and 14. They both seem to be interested in computers, but they mostly play games. What would you recommend I do to help them make a career in tech?” I’m not an expert in parenting, but I’m getting similar requests rather often. It’s great to see that some people realize the difference between playing GTA and Java coding. It’s very sad to see that they don’t know how to motivate their kids. I don’t know either, but I can try to make a guess.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/hackers.jpg" /></entry><entry><title type="html">Daily Stand-up Injection of Guilt</title><link href="https://www.yegor256.com/2019/09/03/injection-of-guilt.html" rel="alternate" type="text/html" title="Daily Stand-up Injection of Guilt" /><published>2019-09-03T00:00:00+00:00</published><updated>2019-09-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/03/injection-of-guilt</id><content type="html" xml:base="https://www.yegor256.com/2019/09/03/injection-of-guilt.html">&lt;p&gt;A few years ago I wrote a &lt;a href=&quot;/2015/01/08/morning-standup-meetings.html&quot;&gt;blog post&lt;/a&gt;
about the daily stand-up meetings many software
teams are doing regularly. Since then, the article has been getting comments
from both sides. Readers either
1) &lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-4586377932&quot;&gt;strongly agree&lt;/a&gt;
with me or
2) &lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-2021779372&quot;&gt;accuse me&lt;/a&gt;
of having no idea what morning stand-ups are for.&lt;/p&gt;

&lt;p&gt;My point was: only weak managers need such meetings to coordinate
the team, while strong ones use more formal instruments to
organize the flow of information. However, as
&lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-3516161968&quot;&gt;someone noted&lt;/a&gt;,
morning meetings are not supposed to be used by managers to coordinate anyone,
but “to discuss progress, impediments and to plan.”
I’m not buying it.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Barfuss (2005) by Til Schweiger&quot; src=&quot;/images/2019/09/barfuss.jpg&quot; longdesc=&quot;#1be2c198&quot; /&gt;&lt;figcaption id=&quot;1be2c198&quot;&gt;Barfuss (2005) by Til Schweiger&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let’s put the manager aside, since many of you
&lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-2021783252&quot;&gt;believe&lt;/a&gt;
that “it’s a team that delivers a product,” not a manager. Even though I’m not buying this either,
let’s imagine a team that doesn’t need a
&lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;manager&lt;/a&gt; and can perfectly
coordinate the work on its own. Even in this case I still ask the same question:
why do we need to stand up and talk face-to-face in order “to discuss progress
and impediments”? Why can’t we do this in writing, in a chat,
by email, or even via a phone call? Well,
&lt;a href=&quot;/2016/08/23/communication-maturity.html&quot;&gt;ideally&lt;/a&gt;
we should use tickets,
&lt;a href=&quot;/2014/10/07/stop-chatting-start-coding.html&quot;&gt;of course&lt;/a&gt;.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Why can’t we do this in writing, in a chat, by email, or even via a phone call?
&lt;/aside&gt;

&lt;p&gt;Why do “planning for the next day” and “discussing progress” need to be done
personally in a standing-up circle instead of digitally? Why can’t we update
each other about progress via an email letter, a status board,
or an Excel spreadsheet? Why can’t planning be done in a software tool, which
the market is full of? What’s wrong with registering impediments as tickets,
prioritizing, assigning, and resolving them one by one?&lt;/p&gt;

&lt;p&gt;Nothing. All of this can and should be done online. That’s what computers
were invented for. Everybody realizes that. However, Agile adepts
&lt;a href=&quot;https://www.mountaingoatsoftware.com/agile/scrum/meetings/daily-scrum&quot;&gt;strongly&lt;/a&gt;
believe in face-to-face meetings, including this daily scrum ceremony. Why?&lt;/p&gt;

&lt;p&gt;As I said in
&lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt;, my recently published book,
the only reasonable explanation I have is that
the group needs this ritual in order to stay &lt;em&gt;united&lt;/em&gt;. And I meant the group
with a weak and incompetent &lt;del&gt;manager&lt;/del&gt; management.&lt;/p&gt;

&lt;p&gt;A strong and professional management keeps the group together and makes it achieve
the goal through 1) &lt;em&gt;explicitly-defined&lt;/em&gt; personal objectives
and 2) &lt;em&gt;non-ambiguous&lt;/em&gt; motivational instruments. Simply put,
at every moment of time everybody knows exactly what they have to do in order to get
&lt;del&gt;money&lt;/del&gt; what they are there for.&lt;/p&gt;

&lt;p&gt;However, &lt;em&gt;most&lt;/em&gt; software groups don’t have such great management, for many
reasons. Thanks to how Agile has been diminishing project management for
years, replacing it with leadership and “team work,” many of the potentially good
managers have lost their motivation to work as such. Needless to say, talent
among managers is as rare as it is among programmers, dentists, or interior designers.
Moreover, great management does not tolerate mediocrity and makes mistakes visible, which, of course,
the majority is always against—it will do everything possible to sabotage this.
In most software teams an attempt to manage effectively, defining objectives
explicitly and motivating by results, will most likely lead to a dismissal
of such a courageous manager.&lt;/p&gt;

&lt;p&gt;As a result, most programmers neither have personal objectives nor motivational instruments:
they stay in the office &lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;from nine till five&lt;/a&gt;
and get a raise every few years only by switching company. And they have
supervisors, mentors, coaches, leaders, you name it, … instead of managers.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Programmers, lined up every morning and forced to explain themselves, inevitably feel guilty.
&lt;/aside&gt;

&lt;p&gt;Thus, how is it possible to keep the group together and make sure programmers
at least pretend to be working, if they have no personal responsibilities,
their motivation is close to zero, and they can’t be discharged because the
cost of recruiting new ones is extremely high? Moreover, new ones will behave exactly
the same, simply because this is the most effective behavior for them, when the management
is weak (or absent). What instrument can be employed to &lt;em&gt;make&lt;/em&gt; them work?&lt;/p&gt;

&lt;p&gt;Guilt.&lt;/p&gt;

&lt;p&gt;This emotion is one of a few fundamental ones. Most people feel it after
harming someone and will try to avoid it. Programmers, lined up every morning
and forced to explain themselves, inevitably feel guilty: for mistakes,
for impediments, for lack of progress, for their dress, for their accent,
for many other things. It doesn’t matter what they feel guilty for; what is
important is to &lt;em&gt;regularly&lt;/em&gt; make them feel ashamed of letting other people down,
even if they don’t. The emotion kicks in when the group is listening and
an individual is speaking, even if there is no real harm done to the group by the
speaking individual. &lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt; quotes a number
of academic papers confirming that, but there is no need to have a PhD
in psychology in order to understand how vulnerable and scary the position
of someone speaking in front of a group can be (I can confirm that too as a
&lt;a href=&quot;/talks.html&quot;&gt;regular&lt;/a&gt; public speaker). Guilt kicks in and the programmer
feels that his or her actions may cause or have already caused problems to others.
The programmer gets back to the computer and starts working hard, without
any objectives or motivation. Except to not let &lt;del&gt;mommy&lt;/del&gt; others down!&lt;/p&gt;

&lt;p&gt;To the contrary, a strong and competent management employs formal reward-and-punishment mechanisms
in order to align the personal objectives of each team member with the business
goals the team is trying to achieve. Here are a few examples of such a mechanism
(rewards and punishment mixed together):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each successful deployment you get $120&lt;/li&gt;
  &lt;li&gt;When this unit test is fixed you get $200&lt;/li&gt;
  &lt;li&gt;Every time the server is down for 5+ minutes you lose $500&lt;/li&gt;
  &lt;li&gt;You &lt;a href=&quot;/2016/03/01/how-we-interview-programmers.html&quot;&gt;interview&lt;/a&gt; a new Java programmer and get $100&lt;/li&gt;
  &lt;li&gt;You get $75 for each critical bug you can find&lt;/li&gt;
  &lt;li&gt;If you don’t fix this ticket in 3 days, you won’t be paid for it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to put such an obvious and explicit motivational system in place
the management has to be pretty smart and strong. Moreover, it will require a lot
of work to do and may lead to serious problems with the team, since, as was
mentioned above, the mediocre majority will try to sabotage it.&lt;/p&gt;

&lt;p&gt;Meetings, especially morning stand-ups, are a “perfect” substitute, because
they make it possible to humiliate programmers regularly, triggering their
innate guilt emotion, which sends these or similar signals to their brains:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t stop working, you will disappoint &lt;del&gt;your mom&lt;/del&gt; the team!&lt;/li&gt;
  &lt;li&gt;Don’t open Facebook, it upsets everybody!&lt;/li&gt;
  &lt;li&gt;Work on this ticket, we rely on you!&lt;/li&gt;
  &lt;li&gt;Deploy it faster, don’t let us down!&lt;/li&gt;
  &lt;li&gt;Be a good boy/girl, don’t keep us waiting!&lt;/li&gt;
  &lt;li&gt;If you don’t fix it now, you will be ashamed tomorrow morning!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every morning stand-up meeting is a refreshment of guilt every programmer
needs in order to stay “motivated” and “engaged.” This is the real
reason why they are “more effective” than digital and formal
flows of information.&lt;/p&gt;

&lt;p&gt;Maybe some time in the future we will find a way to deliver guilt
in a small pill that every programmer will have to swallow in the morning.
Until such a pill is invented, keep doing morning stand-ups.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Who needs regular status meetings? &lt;a href=&quot;https://twitter.com/hashtag/codeahead?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#codeahead&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1170661449854803968?ref_src=twsrc%5Etfw&quot;&gt;September 8, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><category term="agile" /><summary type="html">A few years ago I wrote a blog post about the daily stand-up meetings many software teams are doing regularly. Since then, the article has been getting comments from both sides. Readers either 1) strongly agree with me or 2) accuse me of having no idea what morning stand-ups are for. My point was: only weak managers need such meetings to coordinate the team, while strong ones use more formal instruments to organize the flow of information. However, as someone noted, morning meetings are not supposed to be used by managers to coordinate anyone, but “to discuss progress, impediments and to plan.” I’m not buying it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/barfuss.jpg" /></entry><entry><title type="html">The Joy of Programming</title><link href="https://www.yegor256.com/2019/07/30/joy-of-programming.html" rel="alternate" type="text/html" title="The Joy of Programming" /><published>2019-07-30T00:00:00+00:00</published><updated>2019-07-30T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/07/30/joy-of-programming</id><content type="html" xml:base="https://www.yegor256.com/2019/07/30/joy-of-programming.html">&lt;p&gt;Yesterday I was working with a slide deck for one of my future talks about
Java and object-oriented programming and got stuck at finding convincing
arguments for the &lt;em&gt;transparency of logic&lt;/em&gt;. I was going to say that it is
important for programmers to be able to understand how everything they do
works, even if they don’t see it or never want to see it. But then I realized
that maybe not everybody thinks that way. Maybe some programmers prefer
to stay in the dark about the majority of things,
as long as the code in front of them “just works.” Hence this blog post,
to ask you which side you are on.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Boardwalk Empire (2010–2014) by Terence Winter&quot; src=&quot;/images/2019/07/boardwalk-empire.jpg&quot; longdesc=&quot;#9be5155f&quot; /&gt;&lt;figcaption id=&quot;9be5155f&quot;&gt;Boardwalk Empire (2010–2014) by Terence Winter&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Many years ago I was at a job interview as a candidate. They were looking for
a web architect and I was talking to their CTO. He asked me to explain what
happens behind the scenes when we enter a new URL in a web browser and hit “Enter”.
I drew him a small diagram with a domain registrar, a few DNS servers,
a load balancer, a few HTTP servers, a few databases, and a few IP relays in the
middle. I believe he was impressed by the answer (even though they didn’t hire me back then)
and told me that the majority of web developers didn’t understand
most of this picture. According to him, they only knew how HTTP servers worked,
caring very little about the rest. Most of them didn’t even know what HTTP was,
as long as the PHP code did what it was intended to.&lt;/p&gt;

&lt;p&gt;I remembered that interview, and started asking similar questions to people I was interviewing
later, being a CTO of my own company and an architect on a few other projects.
His conclusions were confirmed. Indeed, most programmers don’t understand how, for example,
DNS works nor what it’s for. Moreover, they feel just fine without this information.
Does it mean they are bad programmers?&lt;/p&gt;

&lt;p&gt;Let me tell you another story, which just happened to me a few days ago. I was
solving a pretty complex technical problem, trying to integrate software
I hadn’t had a chance to use before with another piece of software I also hadn’t
seen before. It took three full days of work. Now I’m looking back at this
short journey and realizing that I went through a few particular phases, which are always
the same for me when I start working with something new:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Enthusiasm&lt;/strong&gt;.
Here I start quickly, usually from a Quick Start one-pager of the
new library I’m going to use. I skim through the documentation, ignore
the majority of it, since it doesn’t make any sense, and quickly
copy-paste what they recommend. It all seems easy and I’m expecting
the code to work in a few minutes. And usually it does.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Guessing&lt;/strong&gt;.
I start making changes to the simple code I just copy-pasted and I make
some assumptions about the logic behind it. I don’t know how the products
I’m using are designed, but I need to rely on something. So, I rely
on what I can &lt;em&gt;guess&lt;/em&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Frustration&lt;/strong&gt;.
Obviously, most of my assumptions are wrong. I start googling
and stackoverflowing. The answers I get (if I get any) are not helping
much, since the big picture is still missing and the best I can do
is patch my code to make it work, according to the pieces of advice
I’m getting from random sources. But I keep staying in the dark
and the overall design concept is still not clear. And I’m still hoping
to solve it all without reading the full Developers Manual manuscript.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Depression&lt;/strong&gt;.
Very soon I realize that I’m just a monkey trying to start an aircraft.
Maybe it will fly and maybe I will even manage to land it. But I’m still
a monkey and it’s very depressing. I have no joy in doing this. I hate
myself for being stupid. I hate those library creators for making it
so not obvious to use. And I hate my job.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I believe these four phases are very common for all of us software engineers.
However, what happens afterwards distinguishes good programmers from bad ones. To be
honest, I belong to both categories, depending on the situation. What
do I do when I’m being a bad programmer? I make it all work and call it a day, still
with no idea what is going on inside nor why exactly it works this way
and doesn’t work the way I tried before. My depression doesn’t go anywhere.
It only escalates. I still hate myself, but my software works. I move
on to the next problem, waiting for the weekend to come.&lt;/p&gt;

&lt;p&gt;What do I do when I’m a good programmer? I dive deeper into the problem,
learn the software I use, download its source code, read its documentation,
until I &lt;em&gt;understand&lt;/em&gt; what’s going on. Then, I get back to my part of the code,
fix it with a full understanding, and call it a day. I sometimes even
write a blog post about it, like
this one for &lt;a href=&quot;/2019/04/17/nutch-from-java.html&quot;&gt;Nutch&lt;/a&gt;,
this one about &lt;a href=&quot;/2014/07/20/liquibase-in-maven.html&quot;&gt;Liquibase&lt;/a&gt;,
or this one about &lt;a href=&quot;/2014/06/21/casperjs-with-maven.html&quot;&gt;CasperJS&lt;/a&gt;.
My depression completely goes away. I don’t hate myself anymore, don’t hate
my job, and don’t hate the developers of those “stupid” libraries. I even
help their projects with my blog posts.&lt;/p&gt;

&lt;p&gt;How do I decide which way to choose: to behave like a bad programmer
or like a good one? You may think it depends on the time/budget I have
for the job at hand, but you would be wrong. It totally depends on my
&lt;em&gt;readiness&lt;/em&gt; to live in depression.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;I don’t want to be a monkey flying an aircraft. I want to be a pilot.
&lt;/aside&gt;

&lt;p&gt;Some time ago I told myself that I won’t do it anymore. I don’t want to be
a &lt;em&gt;monkey&lt;/em&gt; flying an aircraft. I want to be a &lt;em&gt;pilot&lt;/em&gt;. Of course, the learning
curve will be longer, but the result is … joy. I do enjoy my work when I clearly
and transparently see the logic of every line of code I write. I know exactly
why I write them, what they do, and what will happen if I change them. I don’t
know all the details, of course, I know where to click in order to find those
details. This is what makes my work fun for me: the transparency of my
coding logic.&lt;/p&gt;

&lt;p&gt;I truly enjoy being in charge of everything my code does. I love to feel that it
does exactly what I want it to do. You may say I’m a control freak—maybe so.
But this is where I’ve been getting most of the fun, over the last 30 years of coding:
seeing computers do what I want. If some libraries try to take this away from me, putting
me in the passenger’s seat, I will do everything I can to get back in the
driving seat. I want to know what’s going on and I want this to happen according
to my will. I want to enjoy my work.&lt;/p&gt;

&lt;p&gt;Now, back to my conference talk. I’m going to show this piece of code in one of my slides
(this is how &lt;a href=&quot;https://spring.io/&quot;&gt;Spring Framework&lt;/a&gt; is supposed to be used):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then I will ask a question: Do you know who is making an instance of the &lt;code&gt;HelloController&lt;/code&gt;
class and how that instance is being used? Who is calling its methods, why
and when? Moreover, do you know how to modify that behavior? My point
at the conference will be that a good framework must make it easier for
its users to understand its &lt;em&gt;internals&lt;/em&gt;. Because good programmers do want
to know what’s inside. Bad programmers, on the other hand, are OK with
being aircraft-flying monkeys.&lt;/p&gt;

&lt;p&gt;What about you?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="mood" /><summary type="html">Yesterday I was working with a slide deck for one of my future talks about Java and object-oriented programming and got stuck at finding convincing arguments for the transparency of logic. I was going to say that it is important for programmers to be able to understand how everything they do works, even if they don’t see it or never want to see it. But then I realized that maybe not everybody thinks that way. Maybe some programmers prefer to stay in the dark about the majority of things, as long as the code in front of them “just works.” Hence this blog post, to ask you which side you are on.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/07/boardwalk-empire.jpg" /></entry><entry><title type="html">Inversive Management</title><link href="https://www.yegor256.com/2019/07/10/inversive-management.html" rel="alternate" type="text/html" title="Inversive Management" /><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/07/10/inversive-management</id><content type="html" xml:base="https://www.yegor256.com/2019/07/10/inversive-management.html">&lt;p&gt;If you are a &lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;manager&lt;/a&gt;
in a software team, your job
is to make your people get things done. This is obvious. The question though is
how exactly you make it happen. How do you make them do what &lt;em&gt;you&lt;/em&gt; want, according
to &lt;em&gt;your&lt;/em&gt; plans, achieving &lt;em&gt;your&lt;/em&gt; objectives, to &lt;em&gt;your&lt;/em&gt; quality standards,
and within the borders of &lt;em&gt;your&lt;/em&gt; requirements and expectations? Some of you
may say that these are &lt;em&gt;our&lt;/em&gt; objectives, &lt;em&gt;our&lt;/em&gt; mutual plans, &lt;em&gt;our&lt;/em&gt; quality
standards, and &lt;em&gt;our&lt;/em&gt; requirements. This may be true, but initially they are still only yours.
How do you make them theirs? There are two ways: a traditional one and an &lt;em&gt;inversive&lt;/em&gt;
one.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Gambler (2014) by Rupert Wyatt&quot; src=&quot;/images/2019/07/the-gambler.jpg&quot; longdesc=&quot;#dfa9af9a&quot; /&gt;&lt;figcaption id=&quot;dfa9af9a&quot;&gt;The Gambler (2014) by Rupert Wyatt&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Here is how it works, over and over again. First you hire them, and all of them are experts.
Well, most of them. At least this is what their resumes say. Then you sit together and define a plan.
It looks doable and you &lt;a href=&quot;/2019/05/28/trust-or-not.html&quot;&gt;trust&lt;/a&gt; them.
They start working and soon enough you realize that some of them
are lagging behind the promises made in the plan. You start &lt;del&gt;begging&lt;/del&gt; asking them
to correct, to improve, to be more effective, to be more responsive,
to commit, and to stay focused. You may even hire an Agile coach to train them.
They improve, but not for long.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Bad managers, together with Peter Drucker, believe that management is art.
&lt;/aside&gt;

&lt;p&gt;You have “to stay on top of things” and never miss anything, if you want the project to succeed.
You have to &lt;em&gt;care&lt;/em&gt;. You have to be in the office all the time.
You know, from your experience, that without your permanent attention
people don’t do what they are supposed to do. Eventually you start believing,
together with &lt;a href=&quot;https://en.wikipedia.org/wiki/Peter_Drucker&quot;&gt;Peter Drucker&lt;/a&gt;,
that “management is art” since you never know exactly how you have to
&lt;a href=&quot;/2016/01/05/how-to-punish-employees.html&quot;&gt;support&lt;/a&gt; each of them,
because every person is a Universe and must be taken care of, individually.&lt;/p&gt;

&lt;p&gt;This is traditional management and it’s all about &lt;em&gt;you&lt;/em&gt;.
You have to &lt;em&gt;care&lt;/em&gt;, you have to &lt;em&gt;worry&lt;/em&gt;, you have to &lt;em&gt;be there&lt;/em&gt; to make
things happen, and you have to &lt;em&gt;chase&lt;/em&gt; them. You &lt;em&gt;need&lt;/em&gt; their results
and they may provide them… if they feel like it. If you don’t
&lt;em&gt;collect&lt;/em&gt; the results, you most probably won’t get anything, or very little.&lt;/p&gt;

&lt;p&gt;There is, however, a better alternative, which looks
like &lt;em&gt;inversive management&lt;/em&gt; to me. Here is a practical example. I hired
a researcher a few days ago. She was supposed to find and build me a list
of the most influential Twitter accounts of tech journalists. Here is how
she suggested I structure our contract: “You pay me $5 per hour.”
This would be traditional management. She works and I
chase her, asking how is it going, is it a good quality list, is it big
enough, are there any problems with finding the right people, and so on.
I would have to worry about this small project.&lt;/p&gt;

&lt;p&gt;Here is what I suggested instead: “I pay you $40 when the list is complete.”
Now she has to chase me, to deliver the list to me and to collect the payment.
She has to convince me that the list is good, long enough, and of
good quality. She has to worry about the deadline, about the requirements,
and about all the other problems related to the work. They’re all her troubles.&lt;/p&gt;

&lt;p&gt;I made her chase me.&lt;/p&gt;

&lt;p&gt;This, I believe, is the cure for all management problems:
&lt;strong&gt;make them chase you&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;How do you do that? Just like I did—you turn yourself into a &lt;em&gt;buyer&lt;/em&gt;
making them be &lt;em&gt;sellers&lt;/em&gt; of their results. You’ve got the resources (money), which
you are ready to release if your people provide you what you need. Obviously,
you don’t need them &lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;&lt;em&gt;to work&lt;/em&gt;&lt;/a&gt;,
you need their &lt;em&gt;results&lt;/em&gt;, such as a list of emails, a new
feature, a bug fix, a new document, or maybe a new UI mock-up.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;This is the cure for all management problems: make them chase you.
&lt;/aside&gt;

&lt;p&gt;You, as a pragmatic and smart project manager, define what the project
needs from its participants, you put a &lt;em&gt;price tag&lt;/em&gt; on each need, and let programmers
worry about how they deliver, how they solve their own problems, and
how to convince you that their results are good enough to be paid for.&lt;/p&gt;

&lt;p&gt;Of course, it’s easy to put a price tag on a simple gig, like building
a list of Twitter accounts. It’s much
more difficult to do the same for a complex task, like writing source
code or administering a database. However, if you don’t do it,
you will be &lt;a href=&quot;/2017/08/01/how-to-manage-a-manager.html&quot;&gt;managed&lt;/a&gt;
by your programmers, not the other way around. You will
have to constantly chase them and literally beg for results. They will
be relaxed, you will be worried. They will get paid, you will be
&lt;a href=&quot;/2019/06/19/how-much-they-suffer.html&quot;&gt;punished&lt;/a&gt;
for their mistakes.&lt;/p&gt;

&lt;p&gt;I suggest you &lt;em&gt;invert&lt;/em&gt; the situation and let &lt;em&gt;them&lt;/em&gt; worry.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="testing" /><summary type="html">If you are a manager in a software team, your job is to make your people get things done. This is obvious. The question though is how exactly you make it happen. How do you make them do what you want, according to your plans, achieving your objectives, to your quality standards, and within the borders of your requirements and expectations? Some of you may say that these are our objectives, our mutual plans, our quality standards, and our requirements. This may be true, but initially they are still only yours. How do you make them theirs? There are two ways: a traditional one and an inversive one.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/07/the-gambler.jpg" /></entry><entry><title type="html">TDD Misbeliefs</title><link href="https://www.yegor256.com/2019/07/02/tdd-misbeliefs.html" rel="alternate" type="text/html" title="TDD Misbeliefs" /><published>2019-07-02T00:00:00+00:00</published><updated>2019-07-02T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/07/02/tdd-misbeliefs</id><content type="html" xml:base="https://www.yegor256.com/2019/07/02/tdd-misbeliefs.html">&lt;p&gt;While I was working with a
&lt;a href=&quot;/2017/03/24/tdd-that-works.html&quot;&gt;previous article&lt;/a&gt; about
Test-Driven Development (TDD)
I read many blog posts and a few books on the subject and found
out that I disagree with a few of them; even some that are pretty important.
It seems that most software experts simply misunderstand how software
development works. Maybe because they are not really programmers, but
are instead book authors and conference speakers.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;La Vénus à la fourrure (2013) by Roman Polanski&quot; src=&quot;/images/2019/07/la-venus-a-la-fourrure.jpg&quot; longdesc=&quot;#4ef642ba&quot; /&gt;&lt;figcaption id=&quot;4ef642ba&quot;&gt;La Vénus à la fourrure (2013) by Roman Polanski&lt;/figcaption&gt;&lt;/figure&gt;

&lt;!-- ************************************************************** --&gt;
&lt;p&gt;Robert Martin
(&lt;a href=&quot;https://twitter.com/unclebobmartin&quot;&gt;@unclebobmartin&lt;/a&gt;)
in &lt;a href=&quot;http://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html&quot;&gt;The Cycles Of TDD&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If the changes you make to the production code, pursuant to a test,
  make that test pass, but would not make other unwritten tests pass,
  then you are likely making the production code too specific.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;red&quot;&gt;I disagree&lt;/span&gt;.
This statement goes against the very philosophy of testing: “a passing test
is a &lt;em&gt;weak&lt;/em&gt; test.” Unfortunately, a traditional understanding of testing
is quite the opposite: tests &lt;em&gt;must pass&lt;/em&gt; to make us happy. Thus, if we
keep thinking about how to make our future tests pass we will shoot
ourselves in the foot: tests will pass and the code quality will go down.
Instead, we must design our code in a way that makes it easy to break with
the future tests. The code must help its tests to break it! Because
a test that is easy to make “red” is a good test. A test that is always
“green” is a useless test. Uncle Bob, I’m sure, is aware of that.&lt;/p&gt;

&lt;!-- ************************************************************** --&gt;
&lt;p&gt;James Shore
(&lt;a href=&quot;https://twitter.com/jamesshore&quot;&gt;@jamesshore&lt;/a&gt;)
in &lt;a href=&quot;http://www.jamesshore.com/Blog/Red-Green-Refactor.html&quot;&gt;Red-Green-Refactor&lt;/a&gt;
(Nov 2005):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You’ll run through several cycles very quickly, then find yourself
  slowing down and spending more time on refactoring.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;red&quot;&gt;I disagree&lt;/span&gt;.
I have nothing against the first two steps: 1) the test is “red” because
it doesn’t pass, and 2) the test is “green” when the code is fixed and
passes. I disagree that refactoring is a responsibility of the person
who fixes the test. If the code needs refactoring, it’s a &lt;em&gt;bug&lt;/em&gt;, just
like any other bug, either functional or design. It has to be reported,
assigned and paid for. We must not do any code modifications, no matter
how good our intentions are, if they are not required &lt;em&gt;and paid for&lt;/em&gt;. Refactoring
after fixing the test is a frivolous violation of management and coordination
structure in a project.&lt;/p&gt;

&lt;!-- ************************************************************** --&gt;
&lt;p&gt;Robert Martin
(&lt;a href=&quot;https://twitter.com/unclebobmartin&quot;&gt;@unclebobmartin&lt;/a&gt;)
in &lt;a href=&quot;https://8thlight.com/blog/uncle-bob/2014/04/30/When-tdd-does-not-work.html&quot;&gt;When TDD doesn’t work&lt;/a&gt;
(April 2014):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You don’t have to write tests for Test Doubles because
  the actual unit tests and the production code are
  the tests for those pieces of code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;red&quot;&gt;I disagree&lt;/span&gt;.
Test Doubles (also known as
&lt;a href=&quot;/2014/09/23/built-in-fake-objects.html&quot;&gt;fake objects&lt;/a&gt;)
are the tools that help us find our where the code is broken. If the tool
is unreliable, how can we test our code against it? This reminds me of an old
joke where a patient comes to the doctor and says “Help me doc, my body hurts anywhere
I touch it with my finger!”, and the doctor answers
“It’s just your finger — it’s broken!” A very similar situation occurs here:
If we test our production objects with broken Test Doubles, they will all look
broken.&lt;/p&gt;

&lt;!-- ************************************************************** --&gt;
&lt;p&gt;David Heinemeier Hansson
(&lt;a href=&quot;https://twitter.com/dhh&quot;&gt;@dhh&lt;/a&gt;)
in &lt;a href=&quot;https://signalvnoise.com/posts/3159-testing-like-the-tsa&quot;&gt;Testing like the TSA&lt;/a&gt;
(April 2012):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Code-to-test ratios above 1:2 is a smell, above 1:3 is a stink.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;red&quot;&gt;I disagree&lt;/span&gt;.
I don’t know exactly what units of measurement were used to compare the
“code” and the “test”, but I can only assume Lines-of-Code. I was curious and
decided to calculate this ratio in a few projects of mine. First, I tried
&lt;a href=&quot;https://github.com/jcabi/jcabi-github&quot;&gt;jcabi-github&lt;/a&gt;,
an immutable GitHub Java API client. The numbers were:
9.8K LoC in production classes,
6.2K in built-in fake classes, and
16.2K in test classes.
Thus, the ratio was 9.8 to 22.4, which meant 1:2.3. Somewhere between
a “smell” and a “stink”, according to David. Then I calculated the ratio
for a few other projects of mine:
&lt;a href=&quot;https://github.com/jcabi/jcabi-http&quot;&gt;jcabi-http&lt;/a&gt; (1:1),
&lt;a href=&quot;https://github.com/yegor256/xembly&quot;&gt;xembly&lt;/a&gt; (1:0.92),
&lt;a href=&quot;https://github.com/yegor256/takes&quot;&gt;takes&lt;/a&gt; (1:0.91), and
&lt;a href=&quot;https://github.com/yegor256/rultor&quot;&gt;rultor&lt;/a&gt; (1:0.6). It seems that the higher
the ratio the higher my &lt;em&gt;confidence&lt;/em&gt; in the product’s quality. Thus, I don’t think that
it’s a smell or a stink. Instead, in a yummy-scented product the amount
of test code is a few times larger than its production counterpart.&lt;/p&gt;

&lt;!-- ************************************************************** --&gt;
&lt;p&gt;Kent Beck
(&lt;a href=&quot;https://twitter.com/kentbeck&quot;&gt;@kentbeck&lt;/a&gt;)
in
&lt;a href=&quot;http://stackoverflow.com/questions/153234/how-deep-are-your-unit-tests/153565#153565&quot;&gt;How deep are your unit tests?&lt;/a&gt;
(Sep 2008):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I get paid for code that works, not for tests.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;red&quot;&gt;I disagree&lt;/span&gt;.
Tests are not a separate product which either we are paid for or not.
Tests are part of the code. An instrument of its development, maintenance
and validation. Tests are similar to, say, file names. We don’t write
our code naming all the files &lt;code&gt;1.java&lt;/code&gt;, &lt;code&gt;2.java&lt;/code&gt;, &lt;code&gt;234.java&lt;/code&gt;, and then
say: “Now you pay me so that I can rename them properly.” That would be weird,
right? That’s how the statement “I’m not paid for writing tests” sounds
to me: weird. Do we really have to be paid to name files correctly? We just
do it, because it’s convenient for us. Because proper self-descriptive
file names make our code more readable and maintainable. It’s impossible to
imagine a modern maintainable code base without tests. I would actually
suggest changing that phrase to: “I get paid for code that is tested, not
just for code.”&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What do you do if a customer says: &amp;quot;I won&amp;#39;t pay for unit tests&amp;quot;? &lt;a href=&quot;https://twitter.com/hashtag/codeahead?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#codeahead&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1150321038674354176?ref_src=twsrc%5Etfw&quot;&gt;July 14, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;I will keep updating this post. If you know a “good” article about TDD,
please send it &lt;a href=&quot;mailto:tdd@yegor256.com&quot;&gt;my way&lt;/a&gt;; maybe I’ll find
something interesting to quote from it.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="testing" /><summary type="html">While I was working with a previous article about Test-Driven Development (TDD) I read many blog posts and a few books on the subject and found out that I disagree with a few of them; even some that are pretty important. It seems that most software experts simply misunderstand how software development works. Maybe because they are not really programmers, but are instead book authors and conference speakers.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/07/la-venus-a-la-fourrure.jpg" /></entry><entry><title type="html">SyncEm: Thread-Safe Decorators in Ruby</title><link href="https://www.yegor256.com/2019/06/26/syncem.html" rel="alternate" type="text/html" title="SyncEm: Thread-Safe Decorators in Ruby" /><published>2019-06-26T00:00:00+00:00</published><updated>2019-06-26T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/06/26/syncem</id><content type="html" xml:base="https://www.yegor256.com/2019/06/26/syncem.html">&lt;p&gt;I wrote some time ago about thread-safety in OOP and how it can
be achieved with &lt;a href=&quot;/2017/01/17/synchronized-decorators.html&quot;&gt;decorators&lt;/a&gt;.
It was also said that it’s very important to make sure objects are thread-safe
(&lt;a href=&quot;/2018/11/06/ruby-threads.html&quot;&gt;in Ruby&lt;/a&gt; and
&lt;a href=&quot;/2018/03/27/how-to-test-thread-safety.html&quot;&gt;in Java&lt;/a&gt;),
especially in web apps, which are multi-threaded (well, in most
cases anyway). Well, here is &lt;a href=&quot;https://github.com/yegor256/syncem&quot;&gt;SyncEm&lt;/a&gt;,
a primitive Ruby gem which makes the above possible with a single decorator.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Look at this simple Ruby web app, which increments the internal counter
on every web click:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Front&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:visits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Visits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/*&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;increment&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Your visit is no.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Front&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In order to count visits it uses class &lt;code&gt;Visits&lt;/code&gt;, which may be
defined this way (it keeps the counter in a file):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Visits&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;idx.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;idx.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;idx.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_i&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is not thread-safe. Try to run this app and you will see that,
if you make many concurrent HTTP requests to the front page,
the counter will not always return consecutive numbers.&lt;/p&gt;

&lt;p&gt;To make it thread-safe you can use &lt;a href=&quot;https://github.com/yegor256/syncem&quot;&gt;SyncEm&lt;/a&gt;,
a small Ruby gem, which I created just a few months ago. Here is how:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;syncem&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Front&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:visits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SyncEm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Visits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Same as above&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here we just &lt;em&gt;decorate&lt;/em&gt; the object with a thread-safe decorator, which
intercepts all calls to all methods of an object and make them all
synchronized with a single encapsulated semaphore:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SyncEm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Visits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This mechanism will only work in Ruby or similar
&lt;a href=&quot;https://en.wikipedia.org/wiki/Interpreted_language&quot;&gt;interpreted&lt;/a&gt; languages.
I would not be able to do the same in Java or C++. But in Ruby, Python,
PHP, JavaScript and many others, similar decorators may be very useful.&lt;/p&gt;

&lt;p&gt;I’m using it in &lt;a href=&quot;https://github.com/zold-io/wts.zold.io&quot;&gt;this web app&lt;/a&gt;, for example.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="ruby" /><summary type="html">I wrote some time ago about thread-safety in OOP and how it can be achieved with decorators. It was also said that it’s very important to make sure objects are thread-safe (in Ruby and in Java), especially in web apps, which are multi-threaded (well, in most cases anyway). Well, here is SyncEm, a primitive Ruby gem which makes the above possible with a single decorator.</summary></entry></feed>