<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="https://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2019-12-29T05:42:11+00:00</updated><id>https://www.yegor256.com/rss.xml</id><title type="html">Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><entry><title type="html">Altruism Kills!</title><link href="https://www.yegor256.com/2019/12/24/altruism-kills.html" rel="alternate" type="text/html" title="Altruism Kills!" /><published>2019-12-24T00:00:00+00:00</published><updated>2019-12-24T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/12/24/altruism-kills</id><content type="html" xml:base="https://www.yegor256.com/2019/12/24/altruism-kills.html">&lt;p&gt;Altruism means selflessly giving others more than you take back, while egoism means
selfishly taking more than you return. Modern theories of management
and social life tell us that altruism means prosperity for the society
and success to the project. In my book
&lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt; I claim the opposite: altruism hurts the
society and kills projects.
I truly believe that any group activity eventually collapses if it
encourages altruistic behavior among its members, be it a project, a company,
or a family.
This is why one of the core principles of
Zerocracy is &lt;a href=&quot;https://www.youtube.com/watch?v=vXUwE3FGfpg&quot;&gt;#NoAltruism&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Love Liza (2002) by Todd Louiso&quot; src=&quot;/images/2019/12/love-liza.jpg&quot; longdesc=&quot;#c756447c&quot; /&gt;&lt;figcaption id=&quot;c756447c&quot;&gt;Love Liza (2002) by Todd Louiso&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Have you ever heard about the &lt;a href=&quot;https://en.wikipedia.org/wiki/Equity_theory&quot;&gt;Equity Theory&lt;/a&gt;?
J. Stacy Adams, the inventor of it, was sure that
“employees seek to maintain equity between the inputs that
they bring to a job and the outcomes that they receive from it
against the perceived inputs and outcomes of others.”
In other words, we feel motivated to contribute only when we
know that we take back an &lt;em&gt;equal&lt;/em&gt; amount of benefits.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Modern leadership is not about giving and taking, but about sharing and helping? I don’t buy this.
&lt;/aside&gt;

&lt;p&gt;You may say that &lt;a href=&quot;https://en.wikipedia.org/wiki/Transactional_leadership&quot;&gt;transactional management&lt;/a&gt;
is in the past and modern
teams are all about &lt;em&gt;transformational laissez-faire leadership&lt;/em&gt;, where
we don’t do primitive piecework trade, but rather
share common goals, &lt;del&gt;kiss&lt;/del&gt; inspire each other, and
contribute enthusiastically. You may say that
modern leadership is not about giving and taking,
but about sharing and helping.&lt;/p&gt;

&lt;p&gt;I don’t buy this.&lt;/p&gt;

&lt;p&gt;By the way, neither do Anders Skogstad et al. in their article
&lt;a href=&quot;https://www.researchgate.net/publication/6547331_The_Destructiveness_of_Laissez-Faire_Leadership_Behavior&quot;&gt;&lt;em&gt;The Destructiveness of Laissez-Faire Leadership Behavior&lt;/em&gt;&lt;/a&gt;
where they call it a counterproductive leadership style
associated with a stressful environment characterized
by high levels of role stress and interpersonal conflicts;
nor do Abdul Qayyum Chaudhry et al. in their study
&lt;a href=&quot;https://www.semanticscholar.org/paper/Impact-of-Transactional-and-Laissez-Faire-Style-on-Chaudhry-Javed/d7b2d986581910b5e1ce44899353cb1a2cb656a9&quot;&gt;&lt;em&gt;Impact of Transactional and Laissez Faire Leadership Style on Motivation&lt;/em&gt;&lt;/a&gt;,
where they confirm that workers are more motivated in those banks
where transaction leadership style is used.
Neither does Gary Yukl in his critical article
&lt;a href=&quot;https://www.semanticscholar.org/paper/An-evaluation-of-conceptual-weaknesses-in-and-Yukl/15adc8f497ed75ef4468e2b202864b5443d3f9d3&quot;&gt;&lt;em&gt;An Evaluation of the Conceptual Weaknesses in Transformational and Charismatic Leadership Theories&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No matter what we call it, a transactional management or
an inspirational leadership, team work is always about an &lt;em&gt;exchange&lt;/em&gt; of
value: 1) team members give their time and skills, and 2) the team pays them back,
either with cash, or appreciation, or a good office atmosphere.&lt;/p&gt;

&lt;p&gt;There are two possible extreme attitudes: 1) the &lt;em&gt;altruistic&lt;/em&gt; one, when programmers
contribute and expect absolutely nothing back, and 2) an &lt;em&gt;egoistic&lt;/em&gt; one, when
programmers don’t contribute at all, but expect their salaries to grow
every year &lt;del&gt;(also known as software outsourcing)&lt;/del&gt;.&lt;/p&gt;

&lt;p&gt;Ever heard about the Fail Fast vs Fail Safe dichotomy? It is
&lt;a href=&quot;http://martinfowler.com/ieeeSoftware/failFast.pdf&quot;&gt;well known&lt;/a&gt; that
any process survives better if it is designed to Fail Fast, revealing internal
problems as soon as possible, instead of being Fail Safe and concealing defects
in an attempt to survive. Even though Fail Fast feels more dangerous, it
leads to higher quality, no matter where we apply it, whether in management or
software design.&lt;/p&gt;

&lt;p&gt;If the team doesn’t reward its members correctly, they (according to the Equity
Theory) won’t contribute properly. If the team doesn’t reward correctly, it’s
a defect in the system. Just like a bug in source code, this defect in
the motivational system can either be 1) concealed (Fail Safe) or 2) revealed (Fail Fast).&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Encouraging team members to contribute altruistically means concealing management defects
&lt;/aside&gt;

&lt;p&gt;Encouraging team members to contribute altruistically means concealing the defect.
Programmers will keep working, slowly losing their motivation over a long
period of time. The quality of the project will degrade and nobody will
understand why it’s happening. The team will fall apart, losing its best
players one by one. They will burn out without even understanding why. Eventually,
the project will die for no obvious reason, while the key failure factor
was the inability to discover the defect due to the very
altruism of the programmers.&lt;/p&gt;

&lt;p&gt;On the other hand, if every programmer acts egoistically and demands
the project to pay them more than they deserve, the business will feel
the problem very soon — simply by running out of money. Egoistic programmers
reveal the defect in the motivational system and make it necessary for
the business to fix it somehow. Either by introducing measurable KPIs,
or by making requirements more strict and demanding, or maybe by checking
the quality of work more attentively. Something will be done immediately,
in order to save the business from bankruptcy. And the measures which will
be taken will help the project to survive and become &lt;em&gt;stronger&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Thus, by letting the team pay us less than we deserve, we kill the team.
On the other hand, by letting the team pay us more than we deserve,
we help the team understand its issues faster and, because of that, become
stronger and survive.&lt;/p&gt;

&lt;p&gt;If you are a manager I have a suggestion for you. Fire those who are ready
to work overtime without any compensation. They are the trouble makers. Instead,
work with those who are not afraid of putting their own interests on the
table and demanding what’s theirs. They will make you stronger, … if you manage
to configure your project to deal with their demands correctly. If you don’t,
you will lose the money, the project, and your reputation. But you will
learn something.&lt;/p&gt;

&lt;p&gt;If you are a programmer, I guess you already understand what to do. Demand
as much as you can and deliver as little as possible. This is how you teach
your manager to manage projects and help the business understand and fix
problems faster.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">Altruism means selflessly giving others more than you take back, while egoism means selfishly taking more than you return. Modern theories of management and social life tell us that altruism means prosperity for the society and success to the project. In my book Code Ahead I claim the opposite: altruism hurts the society and kills projects. I truly believe that any group activity eventually collapses if it encourages altruistic behavior among its members, be it a project, a company, or a family. This is why one of the core principles of Zerocracy is #NoAltruism.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/12/love-liza.jpg" /></entry><entry><title type="html">Does Code Review Involve Testing?</title><link href="https://www.yegor256.com/2019/12/03/testing-in-code-review.html" rel="alternate" type="text/html" title="Does Code Review Involve Testing?" /><published>2019-12-03T00:00:00+00:00</published><updated>2019-12-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/12/03/testing-in-code-review</id><content type="html" xml:base="https://www.yegor256.com/2019/12/03/testing-in-code-review.html">&lt;p&gt;When you review a pull/merge request from someone, do you check out
the branch and run the build? I usually don’t, but
&lt;a href=&quot;https://exceptionnotfound.net/should-code-review-include-manual-testing-depends-2/&quot;&gt;some people do&lt;/a&gt;.
Their obvious reason is: running a build, or even testing the product manually,
helps find more important errors. Just looking at the source code may not
reveal all visual defects recently introduced to the HTML/CSS, for example.
It’s better to check out the branch, start Apache, open the site in Chrome,
and see what’s broken. Then, make a screenshot, attach it to the pull request,
and return it back to the author. But I disagree with this, and here is why.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Why Women Kill (2019) by Marc Cherry&quot; src=&quot;/images/2019/12/why-women-kill.jpg&quot; longdesc=&quot;#c9ce840f&quot; /&gt;&lt;figcaption id=&quot;c9ce840f&quot;&gt;Why Women Kill (2019) by Marc Cherry&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The discussion is not new, check
&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/344618/does-code-review-typically-involve-uat-qa-testing&quot;&gt;this&lt;/a&gt;
and &lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/95363/should-code-reviewers-test-as-part-of-the-review&quot;&gt;this&lt;/a&gt;
on SO. However, it seems that all the answers there miss the key point.&lt;/p&gt;

&lt;p&gt;As we all know, there are two &lt;em&gt;conflicting roles&lt;/em&gt; in any software project:
constructors and destructors, also known as programmers and testers.
Programmers add new features and fix bugs. Their result is the amount of
functionality created: the more, the better. While testers are breaking
the product and reporting bugs, doing anything they can to prove that it’s
not yet ready to be shipped to the customer. At some point of time the
team (or the management) decides that the fight is over and the product can be
delivered.&lt;/p&gt;

&lt;p&gt;Thanks to this essential conflict &lt;em&gt;quality&lt;/em&gt; is achieved.&lt;/p&gt;

&lt;p&gt;Programmers finish their part of the fight when the code passes the
&lt;em&gt;merge pipeline&lt;/em&gt;: the changes are made at their laptops, unit tests pass
locally, static analysis doesn’t complain, the build is clean,
and the branch is merged to the trunk. This is where programmers stop
and get their bonuses.&lt;/p&gt;

&lt;p&gt;Testers finish their part of the fight when they manage to find a new defect
in the product deployed to the staging or production environment: the
bug is found, reported, and accepted by the project. This is where
testers stop and get their bonuses.&lt;/p&gt;

&lt;p&gt;This is obvious. If it’s not, you may want to read
&lt;a href=&quot;/2014/08/22/art-of-software-testing.html&quot;&gt;&lt;em&gt;The Art of Software Testing&lt;/em&gt;&lt;/a&gt; by Glenford Myers
or
&lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt; by Yegor Bugayenko. You may also want
to watch &lt;a href=&quot;https://www.youtube.com/watch?v=jZitXMQaXvE&quot;&gt;this video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, where is the place for a code reviewer in this conflict?&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;The objective of a merge pipeline is to protect the code repository from programmers.
&lt;/aside&gt;

&lt;p&gt;I believe code review is part of the merge pipeline, together with unit
tests, static analyzers, linters, coverage control tools, mutation
testers, and everything else the project may want to put in there, in order
to make the life of programmers more difficult and the quality of
the source code higher. The objective of a merge pipeline is to protect
the code repository from programmers.&lt;/p&gt;

&lt;p&gt;Code reviewers are no different than linters or static analyzers: They are
blocking the branches with bad code from getting into the trunk. When they
block, they give their reasons. Their job is done (similar to linters) when
they manage to find a problem in the branch and &lt;em&gt;explain&lt;/em&gt; it. A linter, when
it rejects a pull request, says exactly where the problem is, which line,
and how it can be fixed. This is what a good code reviewer must do:
find a problematic line, explain the problem, and suggest a solution.&lt;/p&gt;

&lt;p&gt;This is what code reviewers must be paid for: completed reviews.&lt;/p&gt;

&lt;p&gt;What is a completed review? Does “Everything is OK” sound like a completed
review? For a linter — yes; for a code reviewer — no. This one is much better:
“I found three problems, explained them, and they were either debated or fixed.”
This is how the job description of a code reviewer may sound: Find the three
most critical problems, explain them, and make sure they are either fixed
or correctly argued.&lt;/p&gt;

&lt;p&gt;How reviewers find these three problems — that’s up to them. They may
do visual inspections of the code or run the build. However, they will still
be paid when they manage to find problems and make sure the author of the
code understands them and either fixes them or explains why they are not
fixable (or not problems). A visual inspection of the code is fast, while
checking the branch out and running the build is a much more time-consuming
operation. Moreover, a bug found after running the build locally is very
difficult to explain in the code review format. The discussion with the
author of the branch will take longer, which means more time to complete
the code review, which means lower effectiveness of the code reviewer.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;An effective, responsible and greedy code reviewer doesn’t explain to the author of the code what is wrong.
&lt;/aside&gt;

&lt;p&gt;My point is that smart code reviewers don’t do that, because it’s not efficient.
Pay attention, not because they don’t care, but because they know a better
way to contribute to the project. Let’s face it, when the branch in front
of us is passing all automated checks like linters and unit tests, and yet still
has some bugs which we can reproduce only by executing the code, something
is not right with our automated tests. An effective, responsible and greedy
code reviewer will not explain to the author of the code what is wrong. Instead,
a new bug will be created, to blame the merge pipeline for being too weak.
And, of course, this new bug will be rewarded.&lt;/p&gt;

&lt;p&gt;Thus, as a code reviewer, you can work with the branch locally, test it
and report your findings to the author. But this will be against your personal
interests and not beneficial for the project. Instead, you should complain
to the project about the low quality of the automated tests and put the
review on hold. When the complaint is resolved, the tests get stronger, you
get back to the review, which will be rejected by the merge pipeline, not by you.&lt;/p&gt;

&lt;p&gt;In this case, everybody wins: the pipeline gets stronger, you earn an extra
bonus for the reported bug, and the review is rejected with a very specific
&lt;em&gt;reproducible&lt;/em&gt; reason.&lt;/p&gt;

&lt;p&gt;P.S. The idea of this blog post was suggested by &lt;a href=&quot;https://twitter.com/rsoesemann&quot;&gt;Robert Sösemann&lt;/a&gt;.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><summary type="html">When you review a pull/merge request from someone, do you check out the branch and run the build? I usually don’t, but some people do. Their obvious reason is: running a build, or even testing the product manually, helps find more important errors. Just looking at the source code may not reveal all visual defects recently introduced to the HTML/CSS, for example. It’s better to check out the branch, start Apache, open the site in Chrome, and see what’s broken. Then, make a screenshot, attach it to the pull request, and return it back to the author. But I disagree with this, and here is why.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/12/why-women-kill.jpg" /></entry><entry><title type="html">How Much Cohesion Is Enough?</title><link href="https://www.yegor256.com/2019/11/19/how-much-cohesion-is-enough.html" rel="alternate" type="text/html" title="How Much Cohesion Is Enough?" /><published>2019-11-19T00:00:00+00:00</published><updated>2019-11-19T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/11/19/how-much-cohesion-is-enough</id><content type="html" xml:base="https://www.yegor256.com/2019/11/19/how-much-cohesion-is-enough.html">&lt;p&gt;Which one is better: &lt;code&gt;books.del(42)&lt;/code&gt; or &lt;code&gt;books.book(42).del()&lt;/code&gt;?
I do both and I rarely can tell which one is better. The first option
is shorter, while the second one is more object-oriented. The first
option is more difficult to extend, while the second one is more
verbose and requires more lines of code, which means a higher chance
of making mistakes. Which one do you prefer?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Irréversible (2002) by Gaspar Noé&quot; src=&quot;/images/2019/11/irreversible.jpg&quot; longdesc=&quot;#3c79fdd0&quot; /&gt;&lt;figcaption id=&quot;3c79fdd0&quot;&gt;Irréversible (2002) by Gaspar Noé&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Either one will work, of course, but the question is which design
is more object-oriented? It seems to depend on the size of the
object &lt;code&gt;books&lt;/code&gt;. If it’s small, there’s no need to get the book first, we can
just delete it right there:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, if it’s larger, it’s better to get the &lt;code&gt;book&lt;/code&gt; first:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Here!&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Here!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Is there an explicit hard line between these two? Is there
a &lt;a href=&quot;/2017/12/19/srp-is-hoax.html&quot;&gt;strict rule&lt;/a&gt;
or maybe the ambiguous question “Is this class large enough already?”
should be answered every time by a vote?&lt;/p&gt;

&lt;p&gt;Let’s try to give two extreme answers:
1) never large enough, and 2) always large enough.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If a class is &lt;em&gt;never&lt;/em&gt; ready for extracting any parts of it
and turning them into new objects, we will end up with a very big
class, with many attributes, methods, and long lists of arguments
in almost all of them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If a class is &lt;em&gt;always&lt;/em&gt; good enough for extractions,
we will end up with &lt;a href=&quot;/2017/02/28/too-many-classes.html&quot;&gt;many small classes&lt;/a&gt;,
methods with almost no
arguments, and … a better object-oriented design.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The common denominator is &lt;a href=&quot;https://en.wikipedia.org/wiki/Cohesion_%28computer_science%29&quot;&gt;&lt;em&gt;cohesion&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Highly cohesive classes include attributes and methods that are related to
each other, while non-cohesive classes include whatever their developers
decided to add, even though some elements may not really belong together.
The first answer will give us a class with a very low cohesion, while
the second one will produce a large amount of highly cohesive small
classes.&lt;/p&gt;

&lt;p&gt;Thus, the second option is better? Yes, it is. Smaller classes,
higher cohesion, … but more opportunities to lose focus and spread
functionality around too many places. “All methods in one object”
is a much more popular design, even though it’s less cohesive, exactly
because it’s easier to create: just put everything in one place and
call it a day. Later, of course, maintainability problems will show up.&lt;/p&gt;

&lt;p&gt;The bottom line is that there is no exact distinction between the right and
the wrong design in this case. We just have to do our best to keep classes highly
cohesive by decreasing the amount of methods in each of them. If there are
just a few methods, no need to extract the &lt;code&gt;Book&lt;/code&gt;, but once the amount of methods
gets bigger, the &lt;code&gt;Book&lt;/code&gt; is a perfect candidate for a new entity to
define.&lt;/p&gt;

&lt;p&gt;How many methods is OK?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/104406/&quot;&gt;Nobody knows&lt;/a&gt;,
but I would suggest you question the cohesion of your class once you see
more than seven methods or more than four attributes. Also, start thinking
about refactoring when any of your methods (except constructors) accepts more than
two arguments.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Which design is better? &lt;a href=&quot;https://twitter.com/hashtag/elegantobjects?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#elegantobjects&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1198599871495835649?ref_src=twsrc%5Etfw&quot;&gt;November 24, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><summary type="html">Which one is better: books.del(42) or books.book(42).del()? I do both and I rarely can tell which one is better. The first option is shorter, while the second one is more object-oriented. The first option is more difficult to extend, while the second one is more verbose and requires more lines of code, which means a higher chance of making mistakes. Which one do you prefer?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/11/irreversible.jpg" /></entry><entry><title type="html">Revolutionary Evolution</title><link href="https://www.yegor256.com/2019/11/05/revolutionary-evolution.html" rel="alternate" type="text/html" title="Revolutionary Evolution" /><published>2019-11-05T00:00:00+00:00</published><updated>2019-11-05T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/11/05/revolutionary-evolution</id><content type="html" xml:base="https://www.yegor256.com/2019/11/05/revolutionary-evolution.html">&lt;p&gt;Here is the question I keep hearing almost every time I &lt;a href=&quot;/talks.html&quot;&gt;speak&lt;/a&gt; at
a conference about object-oriented programming and my
&lt;a href=&quot;/2014/09/10/anti-patterns-in-oop.html&quot;&gt;non-traditional&lt;/a&gt;
understanding of it: “How do I convince the whole team to start doing everything so differently?”
(asked &lt;a href=&quot;https://www.yegor256.com/2016/06/27/singletons-must-die.html#comment-4637223953&quot;&gt;here&lt;/a&gt;
just recently). Indeed, it’s easy to change your coding habits
and your software design if you are alone. What do you do if you are a member
of a larger team where everybody is very happy with the Spring Framework
and procedural programming? How do you change &lt;em&gt;their&lt;/em&gt; coding habits?
An even better question is: How do I not get fired while doing it?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;War, Inc. (2008) by Joshua Seftel&quot; src=&quot;/images/2019/11/war-inc.jpg&quot; longdesc=&quot;#1890f8f3&quot; /&gt;&lt;figcaption id=&quot;1890f8f3&quot;&gt;War, Inc. (2008) by Joshua Seftel&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;TL;DR You can’t win alone, you need a gang; assemble it.&lt;/p&gt;

&lt;p&gt;I remember a few years ago I joined a Java team as an architect and my boss
told me that the team had very talented programmers, but they needed
some help. He also told me that the architecture was great, but it needed
to be improved to become even better. And he also told me that I was there
to make changes, which they were looking forward to.&lt;/p&gt;

&lt;p&gt;In just a few weeks I realized that the reality was very different. Most of those
30 programmers were actually junior and could barely tell the difference
between an object method and a static one. I also found out that there
was no architecture at all, just a collection of &lt;code&gt;.java&lt;/code&gt; files created by
different people at different times. And, of course, it became obvious
that no matter how hard I tried, my ideas wouldn’t be accepted, simply
because they sounded too scary to those “talented” people.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Most programmers do what everybody else does, it’s safer.
&lt;/aside&gt;

&lt;p&gt;Seriously, if I had been one of those programmers, sitting there for a few
years, writing some Java code and collecting paychecks
&lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;twice a month&lt;/a&gt;, would
I be glad to meet some guy telling me that I had been very wrong for the last
few years and now it’s time to re-write everything? No matter how much
sense this guy would be making, I would simply sabotage him to protect myself.
No matter how much we declare the value of individualism and independent
thinking, most people are very social and dependent on the community around
them. In other words, they do what everybody else does. It’s safer.&lt;/p&gt;

&lt;p&gt;Those 30 people were not any better. They were going with the flow, using
&lt;a href=&quot;https://spring.io&quot;&gt;Spring&lt;/a&gt;, and &lt;a href=&quot;https://blog.mybatis.org/&quot;&gt;MyBatis&lt;/a&gt;,
and &lt;a href=&quot;/2016/06/27/singletons-must-die.html&quot;&gt;Singletons&lt;/a&gt;,
and &lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters&lt;/a&gt;,
and &lt;a href=&quot;/2014/06/09/objects-should-be-immutable.html&quot;&gt;setters&lt;/a&gt;,
and &lt;a href=&quot;/2014/09/10/anti-patterns-in-oop.html&quot;&gt;everything else&lt;/a&gt; we,
&lt;a href=&quot;https://www.elegantobjects.org&quot;&gt;real OOP programmers&lt;/a&gt;, hate so much.
But I had to do something about it,
that is what I was paid for. However, just telling them that starting today we
should get rid of Spring because it’s &lt;a href=&quot;/2016/12/13/mvc-vs-oop.html&quot;&gt;anti-OOP&lt;/a&gt;
would mean only one thing for me: a termination of my contract, sooner or later.&lt;/p&gt;

&lt;p&gt;Such a &lt;em&gt;revolution&lt;/em&gt; would be a serious threat, both for programmers and for
the product. First, it would put most programmers back in junior positions, forcing them
to learn new paradigms from scratch, while they want to keep
enjoying their “senior developer” job titles and salaries. Second,
radical architectural changes always jeopardize the stability of
the existing software.&lt;/p&gt;

&lt;p&gt;This is what I did:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;First, I picked the youngest and the most talented ones (at the same time). I talked
to all of them and found out who had the highest potential. Pay attention,
I picked not the best, but the ones I believed were most interested in learning
and growing professionally. No surprise, they were the youngest (career-wise, not by age). It was
obvious that they didn’t have enough professional mentoring and no growth
strategy. It was Spring, what growth can we talk about, right?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Second, I unofficially became their mentor. This is what junior and ambitious
engineers need most: a teacher. Someone, who can show them the learning
path and the direction to new knowledge. My mentorship was simply about
reviewing the code they wrote and telling them what was wrong, supporting
my criticism with my own blog posts and many other articles/books I could find
about “good” software design.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Third, I organized regular weekly lectures for the entire team. I was spending
an hour every Monday speaking in front of them and explaining why
NULL &lt;a href=&quot;/2014/05/13/why-null-is-bad.html&quot;&gt;is bad&lt;/a&gt;,
unit tests &lt;a href=&quot;/2017/03/24/tdd-that-works.html&quot;&gt;are good&lt;/a&gt;,
and so on. Everybody was free to attend. No surprise,
my “students” were always attending.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fourth, I was refactoring the code base at some critical places and asking
my “students” to review my pull requests. These small challenging tasks gave us good
material to debate and united our sub-team even better. My ultimate goal
was to assemble a gang who agreed with me. Reviewing each others code
was a perfect method for this.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In just a few months it became obvious for everybody that the entire team
was not that solid anymore. We had the mainstream majority and the true-OOP minority
gathered around me. The status quo started to shake. The minority were
not happy about the architecture and were not afraid anymore to say so. The
architecture was still bad, but it was not “our” architecture anymore. It was
something we inherited from the past and we were committed
to changing it … eventually.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Don’t wait until your boss changes your title, start building a team of supporters.
&lt;/aside&gt;

&lt;p&gt;My first and primary objective was not to fix the architecture, but to
build a &lt;em&gt;coalition&lt;/em&gt; of supporters, and it was achieved.
I didn’t manage to get the majority though.
There were only 7 people in my gang. But this size was enough to change the
direction of the entire team of 30 programmers. Others passively
joined us later.&lt;/p&gt;

&lt;p&gt;I left that project in less than a year (I wasn’t fired). However, when I was leaving, it was
heading in the right direction: test coverage was growing, objects were
becoming immutable, new DTOs were not being created,
and so on. Spring Framework was still there, though.&lt;/p&gt;

&lt;p&gt;You can do exactly the same in your team, even if your position is still
a “junior” developer. Don’t wait until your boss changes your title, start
mentoring people around you and building a team of supporters. When it gets
big enough, the changes will start happening even without your will.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What is the best argument to convince a team?&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1201034995336450049?ref_src=twsrc%5Etfw&quot;&gt;December 1, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="architect" /><summary type="html">Here is the question I keep hearing almost every time I speak at a conference about object-oriented programming and my non-traditional understanding of it: “How do I convince the whole team to start doing everything so differently?” (asked here just recently). Indeed, it’s easy to change your coding habits and your software design if you are alone. What do you do if you are a member of a larger team where everybody is very happy with the Spring Framework and procedural programming? How do you change their coding habits? An even better question is: How do I not get fired while doing it?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/11/war-inc.jpg" /></entry><entry><title type="html">Software Quality Award, 2020</title><link href="https://www.yegor256.com/2019/11/03/award-2020.html" rel="alternate" type="text/html" title="Software Quality Award, 2020" /><published>2019-11-03T00:00:00+00:00</published><updated>2019-11-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/11/03/award-2020</id><content type="html" xml:base="https://www.yegor256.com/2019/11/03/award-2020.html">&lt;figure class=&quot;badge&quot;&gt;&lt;img src=&quot;/images/andreea/quality-award.svg&quot; style=&quot;width:300px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;This is the &lt;em&gt;sixth&lt;/em&gt; year of the
&lt;a href=&quot;/award.html&quot;&gt;Software Quality Award&lt;/a&gt;. The maximum prize
is still the same—&lt;strong&gt;$4,096&lt;/strong&gt;.
The rules are still the same. Read on.
Previous years are here:
&lt;a href=&quot;/2015/04/16/award.html&quot;&gt;2015&lt;/a&gt;,
&lt;a href=&quot;/2015/10/17/award-2016.html&quot;&gt;2016&lt;/a&gt;,
&lt;a href=&quot;/2016/10/23/award-2017.html&quot;&gt;2017&lt;/a&gt;,
&lt;a href=&quot;/2017/10/24/award-2018.html&quot;&gt;2018&lt;/a&gt;,
&lt;a href=&quot;/2018/09/30/award-2019.html&quot;&gt;2019&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here is &lt;a href=&quot;https://docs.google.com/forms/d/1d7-zopzlhDFkVEhxOOYFePCmRbycLGM9O9NFWVDhMaU&quot;&gt;&lt;strong&gt;the form&lt;/strong&gt;&lt;/a&gt;
to fill out.&lt;/p&gt;

&lt;p&gt;Important! Starting this years rewards are given as donations
to a Zerocracy project. This means, that you will have to have
a project in Zerocracy, where you will get the money. You will then
be able to get that money for yourself via micro-tasks.&lt;/p&gt;

&lt;p&gt;Rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;One person can submit only one project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Submissions are accepted until September 1, 2020.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will check the commit history to make sure you’re the main contributor to the project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I reserve the right to reject any submission without explanation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All submissions will be published on this page (including rejected ones).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Results will be announced October 15, 2020 on this page and by email (or maybe a bit later).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The best project will receive $4,096
(I may split this amount among a few projects and may give away a smaller amount!).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Final decisions will be made by me and are not negotiable
(although I may invite other people to help me make the right decision).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Winners that received any cash prizes in previous years can’t submit again.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=Z70PMGaxGhY&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/Z70PMGaxGhY/mqdefault.jpg&quot; alt=&quot;YouTube video #Z70PMGaxGhY&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;How to win $4096 in the next year Quality Award? (webinar #29);
        1 November 2017.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;Each project must be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Open source (in GitHub).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At least 4,096 lines of code (&lt;a href=&quot;https://www.npmjs.com/package/cloc&quot;&gt;&lt;code&gt;cloc&lt;/code&gt;&lt;/a&gt; without any arguments)
&lt;em&gt;and&lt;/em&gt; at least 16,384 &lt;a href=&quot;/2014/11/14/hits-of-code.html&quot;&gt;hits-of-code&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At least one year old (the age of the first commit).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Object-oriented (that’s the only thing I understand).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best project is selected using this &lt;a href=&quot;/2015/06/08/deadly-sins-software-project.html&quot;&gt;criteria&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What doesn’t matter:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Popularity. Even if nobody is using your
product, it is still eligible for this award. I don’t care about
popularity; quality is the key.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Programming language. I believe that any language, used correctly,
can be applied to design a high-quality product.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Buzz and trends. Even if your project is yet another parser of command
line arguments, it’s still eligible for the award. I don’t care about
your marketing position; quality is all.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the way, if you want to sponsor this award and increase the bonus,
&lt;a href=&quot;mailto:me@yegor256.com&quot;&gt;email me&lt;/a&gt;.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="award" /><summary type="html">This is the sixth year of the Software Quality Award. The maximum prize is still the same—$4,096. The rules are still the same. Read on. Previous years are here: 2015, 2016, 2017, 2018, 2019.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/andreea/quality-award.png" /></entry><entry><title type="html">SQL as a Service</title><link href="https://www.yegor256.com/2019/10/29/sql-as-a-service.html" rel="alternate" type="text/html" title="SQL as a Service" /><published>2019-10-29T00:00:00+00:00</published><updated>2019-10-29T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/10/29/sql-as-a-service</id><content type="html" xml:base="https://www.yegor256.com/2019/10/29/sql-as-a-service.html">&lt;p&gt;I’ve been thinking about this since 2007, somewhere around the time
&lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;S3&lt;/a&gt;
was &lt;a href=&quot;https://en.wikipedia.org/wiki/Amazon_Web_Services&quot;&gt;launched&lt;/a&gt; by Amazon.
I even tried to implement it a few times, but failed right after the
design phase. I’ve heard about a startup, which tried to do it too,
but also &lt;a href=&quot;https://en.wikipedia.org/wiki/Xeround&quot;&gt;failed&lt;/a&gt;. I’m still not sure
whether it’s possible to do, but it could definitely become a best seller in
the market of cloud data management. Wait, you may say, what about
Google Cloud SQL, AWS RDS, Microsoft Azure, Heroku PostgreSQL,
and &lt;a href=&quot;https://en.wikipedia.org/wiki/Cloud_database&quot;&gt;many others&lt;/a&gt;?
They are not even close to what I mean.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;La Dolce Vita (1960) by Federico Fellini&quot; src=&quot;/images/2019/10/la-dolce-vita.jpg&quot; longdesc=&quot;#97793a6e&quot; /&gt;&lt;figcaption id=&quot;97793a6e&quot;&gt;La Dolce Vita (1960) by Federico Fellini&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let me give you an analogy. Say you want to store a piece of binary data in the cloud. I have two
solutions for you. The first one is a hosted server
with &lt;a href=&quot;https://en.wikipedia.org/wiki/File_Transfer_Protocol&quot;&gt;FTP&lt;/a&gt;. You pay
me $5 per month, I give you FTP access to the server, which has a disk of 100Gb. You
can upload your files there and download back. Works just fine.
And I have a second option, which is &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;AWS S3&lt;/a&gt;.
You can also upload and download
your data, but via their &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/Welcome.html&quot;&gt;API&lt;/a&gt;.
And you &lt;a href=&quot;https://aws.amazon.com/s3/pricing/&quot;&gt;pay&lt;/a&gt; for each API request,
each byte hosted, and each byte transferred, instead of a monthly fee.
Which one would you chose?&lt;/p&gt;

&lt;p&gt;Obviously, you would go with S3. Why? What is the fundamental difference
between these two? The key difference is in their &lt;a href=&quot;https://en.wikipedia.org/wiki/Service-level_agreement&quot;&gt;SLAs&lt;/a&gt;:
The first one with an FTP is a &lt;em&gt;server&lt;/em&gt;, the second one is a &lt;em&gt;service&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An FTP server provider guarantees you the availability of computational resources (CPU, disk, bandwidth, etc.),
while S3 guarantees you the availability of the data. If the disk on the
FTP server crashes it will be replaced in a timely manner, but the
data will be lost. If the disk gets full, you will be able to order
an additional server, but it’s your responsibility not to forget. If the
disk space is not used, you still pay $5 per month. And so on.&lt;/p&gt;

&lt;p&gt;AWS S3 was such a breakthrough in the market, more than ten years ago, precisely
because of this difference. They added a new &lt;em&gt;service layer&lt;/em&gt; on top of the good
old &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_hosting_service&quot;&gt;web hosting&lt;/a&gt;
we were all used to. The idea remained the same—it’s still data
in the cloud, which we upload and download—but the SLA was different. We didn’t
need to worry anymore about disk overflow, paying too much for unused space,
regular backups, SSH terminals, and many more things. They just gave us a simple API and
a promise that the data was there and was safe.&lt;/p&gt;

&lt;p&gt;It’s 2019 now and we still don’t have the same for relational data. No matter
which provider you choose, all they do is give you a machine (or a cluster)
with MySQL or PostgreSQL installed (or their own version of them) and
charge you per hour of uptime. They still give you the “good old FTP” without
an additional service layer on top of it.&lt;/p&gt;

&lt;p&gt;This is what I would expect a &lt;em&gt;true&lt;/em&gt; relational-data-in-the-cloud SLA to sound like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Auto-scale&lt;/strong&gt;.
Don’t make us worry about the amount of resources required to host
the data. Just charge more for larger data sets and make sure
our requests come back in a predictable amount of time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pay-per-data&lt;/strong&gt;.
Make us pay for each SQL request, each byte stored, and
each byte transferred. How many servers and disks are required to host
it all—that must not be of our concern.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Restricted SQL&lt;/strong&gt;.
The majority of commands in
&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/sql-syntax.html&quot;&gt;MySQL&lt;/a&gt; or
&lt;a href=&quot;https://www.postgresql.org/docs/12/sql.html&quot;&gt;PostgreSQL&lt;/a&gt; dialects are
not required by the majority of projects. Just give us
&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; and call it a day.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Indexes&lt;/strong&gt;.
Create them automatically, using the statistics of the SQL queries
we are making.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Schema Versioning&lt;/strong&gt;.
Make it possible to update the schema via something similar to
&lt;a href=&quot;https://www.liquibase.org/&quot;&gt;Liquibase&lt;/a&gt;: we create a new &lt;code&gt;ALTER TABLE&lt;/code&gt; or &lt;code&gt;CREATE TABLE&lt;/code&gt; script
and it gets applied to the existing database.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Snapshots and Rollbacks&lt;/strong&gt;.
Make it possible to make a snapshot of the data, apply a new schema
version, and then rollback to one of the previously made snapshots if something
is wrong.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Is it really so hard to implement?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="pets" /><summary type="html">I’ve been thinking about this since 2007, somewhere around the time S3 was launched by Amazon. I even tried to implement it a few times, but failed right after the design phase. I’ve heard about a startup, which tried to do it too, but also failed. I’m still not sure whether it’s possible to do, but it could definitely become a best seller in the market of cloud data management. Wait, you may say, what about Google Cloud SQL, AWS RDS, Microsoft Azure, Heroku PostgreSQL, and many others? They are not even close to what I mean.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/10/la-dolce-vita.jpg" /></entry><entry><title type="html">Date/Time Printing Can Be Elegant Too</title><link href="https://www.yegor256.com/2019/09/27/parsing-and-printing.html" rel="alternate" type="text/html" title="Date/Time Printing Can Be Elegant Too" /><published>2019-09-27T00:00:00+00:00</published><updated>2019-09-27T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/27/parsing-and-printing</id><content type="html" xml:base="https://www.yegor256.com/2019/09/27/parsing-and-printing.html">&lt;p&gt;I owe my &lt;a href=&quot;https://stackoverflow.com/users/187141/yegor256&quot;&gt;pretty high&lt;/a&gt;
StackOverflow reputation to &lt;a href=&quot;https://stackoverflow.com/questions/3914404&quot;&gt;this question&lt;/a&gt;
in particular, which I asked a few years ago: How do you print an
&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; date in Java?
It managed to collect a lot of upvotes since then and 20+ answers, including
&lt;a href=&quot;https://stackoverflow.com/a/14274358/187141&quot;&gt;my own one&lt;/a&gt;. Seriously,
why didn’t Java, such a rich ecosystem, have a built-in out-of-the-box &lt;em&gt;simple&lt;/em&gt;
solution for this primitive task? I believe this is because the designers
of the Java SDK were 1) smart enough not to create a &lt;code&gt;print()&lt;/code&gt; method right in the
class &lt;code&gt;Date&lt;/code&gt;, and 2) not smart enough to give us an extendable set of classes
and interfaces to parse and print dates in an elegant way.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Fargo, Season 2 (2014) by Noah Hawley&quot; src=&quot;/images/2019/09/fargo-2.jpg&quot; longdesc=&quot;#5f920637&quot; /&gt;&lt;figcaption id=&quot;5f920637&quot;&gt;Fargo, Season 2 (2014) by Noah Hawley&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;There are basically three ways to split the responsibility
of parsing and printing in JDK (to my knowledge):&lt;/p&gt;

&lt;h2 id=&quot;dto--utility-class&quot;&gt;DTO + Utility Class&lt;/h2&gt;

&lt;p&gt;The first one is when &lt;em&gt;something&lt;/em&gt; is responsible for printing and parsing
while the object is just a data holder.
There is a class &lt;code&gt;SimpleDateFormat&lt;/code&gt;, which
has to be configured first, with the right time zone and the formatting pattern.
Then it has to be used to print:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm&amp;#39;Z&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTC&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To parse it back, there is the method &lt;code&gt;parse()&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2007-12-03T10:15Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s a classic combination of a
&lt;a href=&quot;/2016/07/06/data-transfer-object.html&quot;&gt;DTO&lt;/a&gt;
and a
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;utility class&lt;/a&gt;.
The DTO is the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;
object and the utility class is the &lt;code&gt;SimpleDateFormat&lt;/code&gt;. The date-object
&lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;exposes&lt;/a&gt;
all required data attributes through a number of
&lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters&lt;/a&gt; and the utility
class prints the date. The date-object has no influence on this process.
It’s not actually an object, but merely a data container.
This is not object-oriented programming at all.&lt;/p&gt;

&lt;h2 id=&quot;the-object&quot;&gt;The Object&lt;/h2&gt;

&lt;p&gt;Java 8 introduced the class &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;
with the method &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;,
which returns time in
&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO-8601&lt;/a&gt; format:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Instant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To parse it back there is a static method
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;
in the same class &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instant&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Instant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;2007-12-03T10:15:30Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This approach looks more object-oriented, but
the problem here is that it’s impossible to modify the printing
pattern in any way (for example, remove the milliseconds or
change the format entirely). Moreover, the method &lt;code&gt;parse()&lt;/code&gt; is
&lt;a href=&quot;/2017/11/14/static-factory-methods.html&quot;&gt;static&lt;/a&gt;,
which means that there can be no polymorphism—we can’t change the
logic of parsing either. We also can’t change the printing logic,
since &lt;code&gt;Instant&lt;/code&gt; is a final class, not an interface.&lt;/p&gt;

&lt;p&gt;This design sounds OK if all we need is ISO 8601 date/time strings.
The moment we decide to extend it in some way, we are in trouble.&lt;/p&gt;

&lt;h2 id=&quot;the-ugly-mix&quot;&gt;The Ugly Mix&lt;/h2&gt;

&lt;p&gt;There is also
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;
in &lt;a href=&quot;/2017/11/07/five-new-java-features.html&quot;&gt;Java 8&lt;/a&gt;,
which introduces the third way of dealing with date/time objects.
To print a date to a &lt;code&gt;String&lt;/code&gt; we make an instance of the “formatter” and
pass it to the time-object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZoneId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTC&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DateTimeFormatter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTimeFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss&amp;#39;Z&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To parse back, we have to send the &lt;code&gt;formatter&lt;/code&gt; to the static method
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;
together with the text to parse:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;quot;2007-12-03T10:15:30Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;How do they communicate, &lt;code&gt;LocalDateTime&lt;/code&gt; and &lt;code&gt;DateTimeFormatter&lt;/code&gt;?
The time-object is a
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/TemporalAccessor.html&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;,
with a method &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/TemporalAccessor.html#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt;
allowing anyone to extract whatever is inside. In other words, again, a
&lt;a href=&quot;/2016/07/06/data-transfer-object.html&quot;&gt;DTO&lt;/a&gt;.
The formatter is still a
&lt;a href=&quot;/2014/05/05/oop-alternative-to-utility-classes.html&quot;&gt;utility class&lt;/a&gt; (not even an interface),
which expects the DTO to arrive, extracts what’s inside, and prints.&lt;/p&gt;

&lt;p&gt;How do they parse? The method
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;
reads the template, and builds and returns another
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/temporal/TemporalAccessor.html&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;
DTO.&lt;/p&gt;

&lt;p&gt;What about encapsulation? “Not this time,” JDK designers say.&lt;/p&gt;

&lt;h2 id=&quot;the-right-way&quot;&gt;The Right Way&lt;/h2&gt;

&lt;p&gt;Here is how I would design it instead. First, I would make a generic
immutable &lt;code&gt;Template&lt;/code&gt; with this interface:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It would be used like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm&amp;#39;Z&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2007&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ss&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// returns &amp;quot;2007-12-03T10:15Z&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This template internally decides how to print the data coming in,
depending on the encapsulated pattern. Here is how the &lt;code&gt;Date&lt;/code&gt; would be
able to print itself:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ss&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is how parsing would work
(it’s a &lt;a href=&quot;/2015/05/07/ctors-must-be-code-free.html&quot;&gt;bad idea&lt;/a&gt;
in general to put code into the constructor, but for this experiment it’s OK):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hours&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;minutes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ss&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s say we want to print time as “13-е января 2019 года” (it’s in Russian).
How we would do this? We don’t create a new &lt;code&gt;Template&lt;/code&gt;, we
&lt;a href=&quot;/2015/02/26/composable-decorators.html&quot;&gt;decorate&lt;/a&gt; the
existing one, a few times. First, we make an instance of what we have:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd-е MMMM yyyy-го года&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This one will print something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;12-е MMMM 2019-го года&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code&gt;Date&lt;/code&gt; doesn’t send the value of &lt;code&gt;MMMM&lt;/code&gt; into it, that’s why it doesn’t
replace the text correctly. We have to decorate it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RussianTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;RussianTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;января&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;февраля&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// etc...&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MMMM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, to get a Russian date from a &lt;code&gt;Date&lt;/code&gt; object we do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RussianTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd-е MMMM yyyy-го года&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s say we want to print the date in a different time zone. We create another
decorator, which intercepts the call with the &lt;code&gt;&quot;HH&quot;&lt;/code&gt; and deducts (or adds)
the time difference:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TimezoneTemplate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;TimezoneTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HH&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MM&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This code will print Moscow (UTC+3) time in Russian:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimezoneTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RussianTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dd-е MMMM yyyy-го года&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can decorate as much as we need, making the &lt;code&gt;Template&lt;/code&gt; as powerful
as it needs to be. The elegance of this approach is that the class
&lt;code&gt;Date&lt;/code&gt; is completely decoupled from the &lt;code&gt;Template&lt;/code&gt;, which makes them
both replaceable and polymorphic.&lt;/p&gt;

&lt;p&gt;Maybe someone will be interested in creating an open source
date and time printing and parsing library for Java with these
principles in mind?&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><category term="java" /><summary type="html">I owe my pretty high StackOverflow reputation to this question in particular, which I asked a few years ago: How do you print an ISO 8601 date in Java? It managed to collect a lot of upvotes since then and 20+ answers, including my own one. Seriously, why didn’t Java, such a rich ecosystem, have a built-in out-of-the-box simple solution for this primitive task? I believe this is because the designers of the Java SDK were 1) smart enough not to create a print() method right in the class Date, and 2) not smart enough to give us an extendable set of classes and interfaces to parse and print dates in an elegant way.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/fargo-2.jpg" /></entry><entry><title type="html">Be Unhappy to Be Happy</title><link href="https://www.yegor256.com/2019/09/17/be-unhappy-to-be-happy.html" rel="alternate" type="text/html" title="Be Unhappy to Be Happy" /><published>2019-09-17T00:00:00+00:00</published><updated>2019-09-17T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/17/be-unhappy-to-be-happy</id><content type="html" xml:base="https://www.yegor256.com/2019/09/17/be-unhappy-to-be-happy.html">&lt;p&gt;At the very end of one of my &lt;a href=&quot;https://www.youtube.com/watch?v=m5mPtC7LYiY&quot;&gt;recent meetups&lt;/a&gt; I was asked a question:
“Are you a happy person?” I mumbled something about being happy from time to time,
but later gave this question more thought. Am I happy? Not really. Well,
sometimes. What makes me happy? And why are &lt;a href=&quot;https://www.livescience.com/61525-why-are-people-unhappy.html&quot;&gt;so many of us&lt;/a&gt;
unhappy so often?
It seems that there is an answer, and a recipe for happiness.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Yip Man (2008) by Wilson Yip&quot; src=&quot;/images/2019/09/yip-man.jpg&quot; longdesc=&quot;#41b216d4&quot; /&gt;&lt;figcaption id=&quot;41b216d4&quot;&gt;Yip Man (2008) by Wilson Yip&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“A well-paid job, house, car, family are the ultimate possessions
of anyone’s life. But &lt;em&gt;despite&lt;/em&gt; having everything why is the happiness missing?”
Debika Chakraborty asks &lt;a href=&quot;https://www.lifealth.com/mind-body-and-soul/happiness/why-despite-having-everything-we-are-not-happy-dc/27095/&quot;&gt;here&lt;/a&gt;.
I think that happiness is missing not despite us having everything, but &lt;em&gt;thanks&lt;/em&gt; to that.&lt;/p&gt;

&lt;p&gt;Happiness, according to &lt;a href=&quot;https://en.wikiquote.org/wiki/The_Antichrist&quot;&gt;Nietzsche&lt;/a&gt;,
is “the feeling that power increases — that a resistance is overcome.”
Therefore, in order to be happy, we must have some issues to deal with. It’s not enough to possess those
cars, houses and well-paid jobs. We need to overcome the obstacles first.
Happiness is simply impossible without a struggle being won.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;To be happy, we constantly need a new problem to solve, a trouble to get rid of, or an enemy to destroy.
&lt;/aside&gt;

&lt;p&gt;To be happy, we constantly need a new problem to solve, a trouble to get rid of, or an enemy
to destroy, if you wish. What kind of enemy it might be—depends.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Aristotle&quot;&gt;Aristotle&lt;/a&gt;,
for example, &lt;a href=&quot;https://www.wsj.com/articles/aristotles-pursuit-of-happiness-11548950094&quot;&gt;according to&lt;/a&gt;
Edith Hall, believed that “happiness comes from a &lt;em&gt;continuous&lt;/em&gt; effort
to become the best possible version of yourself,” which is
the war with yourself, “the worst enemy you can meet,” as
&lt;a href=&quot;https://www.goodreads.com/quotes/331586-but-the-worst-enemy-you-can-meet-will-always-be&quot;&gt;Zarathustra&lt;/a&gt; once said.
On top of that, there are, of course, other foes all around us, including poverty, lack of skills,
health issues, annoying colleagues, or
&lt;a href=&quot;/2018/08/14/seventy-percent.html&quot;&gt;cheating partners&lt;/a&gt;.
To be happy we need some of these things.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bertrand_Russell&quot;&gt;Bertrand Russell&lt;/a&gt;, in his book
&lt;em&gt;The Conquest of Happiness&lt;/em&gt;, &lt;a href=&quot;https://en.wikiquote.org/wiki/The_Conquest_of_Happiness&quot;&gt;suggested&lt;/a&gt;
that “to be without some of the things you want is an indispensable part of happiness.”
However, the modern world, and especially the tech part of it, &lt;em&gt;gives&lt;/em&gt; us almost
anything and everything we may wish for, including the cars, houses, healthy
food, information, electric scooters, safety, lifetime employment and retirement plans.
We’ve got nothing to &lt;em&gt;worry&lt;/em&gt; about and … we are unhappy because of that.&lt;/p&gt;

&lt;p&gt;The key word here is “worry” not “give.” Happiness doesn’t really depend on
how rich or poor we are, as studies &lt;a href=&quot;http://content.time.com/time/magazine/article/0,9171,2019628,00.html&quot;&gt;confirm&lt;/a&gt;
(well, above a certain level). Instead, it depends on how &lt;em&gt;easily&lt;/em&gt; we get what we want.
The more we &lt;em&gt;worry&lt;/em&gt; and the less life &lt;em&gt;gives&lt;/em&gt; us for free, the more happy we are …
provided we achieve what we want.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ernest_Hemingway&quot;&gt;Ernest Hemingway&lt;/a&gt; in
&lt;em&gt;The Garden of Eden&lt;/em&gt;
&lt;a href=&quot;https://www.goodreads.com/quotes/2981-happiness-in-intelligent-people-is-the-rarest-thing-i-know&quot;&gt;said&lt;/a&gt;
that “happiness in intelligent people is the rarest thing I know.”
This is because most “intelligent” people nowadays possess all those things
mentioned above and don’t need to struggle much in order to get them.
The smarter we are, the easier it is for us &lt;em&gt;to achieve&lt;/em&gt;: find a well-paid job
and buy a new iPhone.&lt;/p&gt;

&lt;p&gt;We &lt;del&gt;intelligent&lt;/del&gt; tech people, don’t struggle enough.&lt;/p&gt;

&lt;p&gt;Life doesn’t challenge us as much as we need. We don’t even need to have special talents
these days to be decently paid: You read &lt;a href=&quot;https://amzn.to/2O1MBIg&quot;&gt;&lt;em&gt;JavaScript in 24 Hours&lt;/em&gt;&lt;/a&gt; and a new iPhone
is yours. The market is &lt;a href=&quot;https://fullscale.io/the-talent-shortage-of-software-developers-in-2019/&quot;&gt;in deficit&lt;/a&gt;
now and the demand is &lt;a href=&quot;https://www.techrepublic.com/article/cio-jury-83-of-cios-struggle-to-find-tech-talent/&quot;&gt;much higher&lt;/a&gt;
than the supply of coding hands. Moreover, most managers are
&lt;a href=&quot;/2017/08/01/how-to-manage-a-manager.html&quot;&gt;incapable&lt;/a&gt; of
demanding above-average performance from us. This may look like a perfect life,
but in a long run we may end up with problems
larger than unhappiness or depression—read what happened to the poor mice in the
&lt;a href=&quot;https://curiosity.com/topics/universe-25-began-as-a-mice-paradise-but-ended-as-a-nightmare-curiosity/&quot;&gt;Universe 25&lt;/a&gt;
experiment.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Tech people don’t struggle enough, life doesn’t challenge us as much as we need.
&lt;/aside&gt;

&lt;p&gt;What is the solution?
Listen to what &lt;a href=&quot;https://en.wikipedia.org/wiki/Francis_T._McAndrew&quot;&gt;Frank T. McAndrew&lt;/a&gt;
&lt;a href=&quot;https://www.theguardian.com/commentisfree/2016/aug/17/psychology-happiness-contentment-humans-aspire-goals-accomplish-evolution&quot;&gt;says&lt;/a&gt;:
“Dissatisfaction with the present and dreams of the future are what keep us motivated,”
meaning that happiness comes to those who
1) are permanently dissatisfied with current results and
2) act to achieve more.&lt;/p&gt;

&lt;p&gt;Ergo, the recipe of happiness is: resent, overcome, repeat.&lt;/p&gt;

&lt;p&gt;But what to resent? Well this may be
your laziness, your fears, your absence of Oracle certification, your
low StackOverflow &lt;a href=&quot;/2017/02/14/stackoverflow-is-your-tool.html&quot;&gt;reputation&lt;/a&gt;,
or no paychecks from the Apple Store (do you have
your own revenue-generating app there?)&lt;/p&gt;

&lt;p&gt;Once the obstacle is overcome, repeat.&lt;/p&gt;

&lt;p&gt;Stay unhappy. To be happy.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What makes you happy? &lt;a href=&quot;https://twitter.com/hashtag/happiness?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#happiness&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1173239049697529859?ref_src=twsrc%5Etfw&quot;&gt;September 15, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="mood" /><category term="psychology" /><summary type="html">At the very end of one of my recent meetups I was asked a question: “Are you a happy person?” I mumbled something about being happy from time to time, but later gave this question more thought. Am I happy? Not really. Well, sometimes. What makes me happy? And why are so many of us unhappy so often? It seems that there is an answer, and a recipe for happiness.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/yip-man.jpg" /></entry><entry><title type="html">How to Motivate Kids to Code</title><link href="https://www.yegor256.com/2019/09/10/how-to-motivate-kids-to-code.html" rel="alternate" type="text/html" title="How to Motivate Kids to Code" /><published>2019-09-10T00:00:00+00:00</published><updated>2019-09-10T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/10/how-to-motivate-kids-to-code</id><content type="html" xml:base="https://www.yegor256.com/2019/09/10/how-to-motivate-kids-to-code.html">&lt;p&gt;I got an email a few days ago. “I’m not a programmer. I’m a mom of two
kids: 9 and 14. They both seem to be interested in computers, but they
mostly play games. What would you recommend I do to help them make
a career in tech?” I’m not an expert in parenting, but I’m getting similar
requests rather often. It’s great to see that &lt;em&gt;some&lt;/em&gt; people realize
the difference between playing GTA and Java coding. It’s very sad to see
that they don’t know how to motivate their kids. I don’t know either,
but I can try to make a guess.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Hackers (1995) by Iain Softley&quot; src=&quot;/images/2019/09/hackers.jpg&quot; longdesc=&quot;#e5752167&quot; /&gt;&lt;figcaption id=&quot;e5752167&quot;&gt;Hackers (1995) by Iain Softley&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I can’t speak for everyone, but for me studying for the sake of “learning
new things” is not fun at all. I don’t enjoy the process of becoming smarter.
I enjoy &lt;em&gt;building&lt;/em&gt; things. If I need to learn something new in order to make
new things happen, I will do it and I will enjoy learning, because it leads
to practical results: new things.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Studying for the sake of learning new things is not fun at all.
&lt;/aside&gt;

&lt;p&gt;For example, &lt;a href=&quot;https://kotlinlang.org/&quot;&gt;Kotlin&lt;/a&gt; has been on the market for a few years already. It’s
a new programming language. I do realize that it may eventually replace
Java and so I need to learn it. But I can’t imagine myself reading documentation
and studying it for days. It’s super boring. Because it leads nowhere.
Well, it leads to me knowing how to code in Kotlin, but what’s the point if
I can code in Java already? In order to learn Kotlin I need a new project, which
I will then write in Kotlin. I will learn the language while &lt;em&gt;using&lt;/em&gt; it.&lt;/p&gt;

&lt;p&gt;My point is that in order to motivate myself to learn Kotlin you need to give me a
goal, which I will achieve &lt;em&gt;after&lt;/em&gt; I’ve learned Kotlin while &lt;em&gt;using&lt;/em&gt; this new knowledge to get there.
Maybe, and most probably, your kids may need something similar: a &lt;em&gt;tangible&lt;/em&gt;
motivator. Something they will see in front of them, which will make them
happy when they get there, after they learn those boring Java and Kotlin languages.
What could such a prize look like for a nine-year-old?&lt;/p&gt;

&lt;p&gt;Well, how about one of these (maybe not all of them apply to all ages,
but you get the idea):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make an iPhone mobile game and publish it on the Apple Store?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you create a blog for me?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make an online shop to sell my homemade cookies?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make an app to help me track my gym exercise results?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you win $1,000 in the next hackathon?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you get an Oracle Java certificate?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you find a security breach in your school’s website?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can you make a robot which cleans the floor?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Actually, that’s exactly how I learned everything I know about computers.
I started programming when I was around 10 years old. I’ve always had a task in front of me and it was
always something interesting to do for myself and the people around me.
In other words, I’ve always had my eyes on the prize.
The majority of my projects are not alive anymore, especially the ones
I created when I was a kid and a student (and I feel so sad about that).
However, the outcome is obvious: I’m in the tech industry now and I can code in Java.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Your job, as their parents, is to help them identify the right goals—this is where kids usually fail.
&lt;/aside&gt;

&lt;p&gt;So don’t expect your kids to enjoy studying. Expect them to be interested
in &lt;em&gt;building&lt;/em&gt; things and making &lt;del&gt;money&lt;/del&gt; profit. Your job, as their parents, is
to help them &lt;em&gt;identify&lt;/em&gt; the right goals—this is where kids usually fail because they
don’t have enough experience to judge what’s more achievable and which are the largest risks.
I remember trying to create a robot which was supposed to speak like a human.
I was 13 years old. Obviously, I needed help at that time: someone had to tell
me that this goal was not really achievable and doing something
simpler and more practical would be a better application of my efforts.&lt;/p&gt;

&lt;p&gt;Don’t &lt;a href=&quot;/2015/09/22/micromanagement.html&quot;&gt;micromanage&lt;/a&gt;
your kids by telling them what to learn, how many hours a day to study,
which schools to attend, and which books to read. Instead, do what good
managers do with their employees: set objectives and make sure everybody knows what
the rewards and punishment are.&lt;/p&gt;

&lt;p&gt;Something similar is what your kids need from you. Measure their progress and help
them find adequately complex and interesting goals. On top of that, make sure
they understand what the benefits will be when the goals are achieved and … well,
you have to find a way to punish them for failures. Don’t punish them
for being stupid or lazy. The only thing that deserves punishment is
breaking the promise to achieve the results.&lt;/p&gt;

&lt;p&gt;A promise made to themselves, of course.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Your boss says you have to learn and use a new framework, you answer: &lt;a href=&quot;https://twitter.com/hashtag/motivation?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#motivation&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1183280977935773696?ref_src=twsrc%5Etfw&quot;&gt;October 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="career" /><summary type="html">I got an email a few days ago. “I’m not a programmer. I’m a mom of two kids: 9 and 14. They both seem to be interested in computers, but they mostly play games. What would you recommend I do to help them make a career in tech?” I’m not an expert in parenting, but I’m getting similar requests rather often. It’s great to see that some people realize the difference between playing GTA and Java coding. It’s very sad to see that they don’t know how to motivate their kids. I don’t know either, but I can try to make a guess.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/hackers.jpg" /></entry><entry><title type="html">Daily Stand-up Injection of Guilt</title><link href="https://www.yegor256.com/2019/09/03/injection-of-guilt.html" rel="alternate" type="text/html" title="Daily Stand-up Injection of Guilt" /><published>2019-09-03T00:00:00+00:00</published><updated>2019-09-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/09/03/injection-of-guilt</id><content type="html" xml:base="https://www.yegor256.com/2019/09/03/injection-of-guilt.html">&lt;p&gt;A few years ago I wrote a &lt;a href=&quot;/2015/01/08/morning-standup-meetings.html&quot;&gt;blog post&lt;/a&gt;
about the daily stand-up meetings many software
teams are doing regularly. Since then, the article has been getting comments
from both sides. Readers either
1) &lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-4586377932&quot;&gt;strongly agree&lt;/a&gt;
with me or
2) &lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-2021779372&quot;&gt;accuse me&lt;/a&gt;
of having no idea what morning stand-ups are for.&lt;/p&gt;

&lt;p&gt;My point was: only weak managers need such meetings to coordinate
the team, while strong ones use more formal instruments to
organize the flow of information. However, as
&lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-3516161968&quot;&gt;someone noted&lt;/a&gt;,
morning meetings are not supposed to be used by managers to coordinate anyone,
but “to discuss progress, impediments and to plan.”
I’m not buying it.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Barfuss (2005) by Til Schweiger&quot; src=&quot;/images/2019/09/barfuss.jpg&quot; longdesc=&quot;#1be2c198&quot; /&gt;&lt;figcaption id=&quot;1be2c198&quot;&gt;Barfuss (2005) by Til Schweiger&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Let’s put the manager aside, since many of you
&lt;a href=&quot;https://www.yegor256.com/2015/01/08/morning-standup-meetings.html#comment-2021783252&quot;&gt;believe&lt;/a&gt;
that “it’s a team that delivers a product,” not a manager. Even though I’m not buying this either,
let’s imagine a team that doesn’t need a
&lt;a href=&quot;/2016/05/24/who-is-project-manager.html&quot;&gt;manager&lt;/a&gt; and can perfectly
coordinate the work on its own. Even in this case I still ask the same question:
why do we need to stand up and talk face-to-face in order “to discuss progress
and impediments”? Why can’t we do this in writing, in a chat,
by email, or even via a phone call? Well,
&lt;a href=&quot;/2016/08/23/communication-maturity.html&quot;&gt;ideally&lt;/a&gt;
we should use tickets,
&lt;a href=&quot;/2014/10/07/stop-chatting-start-coding.html&quot;&gt;of course&lt;/a&gt;.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Why can’t we do this in writing, in a chat, by email, or even via a phone call?
&lt;/aside&gt;

&lt;p&gt;Why do “planning for the next day” and “discussing progress” need to be done
personally in a standing-up circle instead of digitally? Why can’t we update
each other about progress via an email letter, a status board,
or an Excel spreadsheet? Why can’t planning be done in a software tool, which
the market is full of? What’s wrong with registering impediments as tickets,
prioritizing, assigning, and resolving them one by one?&lt;/p&gt;

&lt;p&gt;Nothing. All of this can and should be done online. That’s what computers
were invented for. Everybody realizes that. However, Agile adepts
&lt;a href=&quot;https://www.mountaingoatsoftware.com/agile/scrum/meetings/daily-scrum&quot;&gt;strongly&lt;/a&gt;
believe in face-to-face meetings, including this daily scrum ceremony. Why?&lt;/p&gt;

&lt;p&gt;As I said in
&lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt;, my recently published book,
the only reasonable explanation I have is that
the group needs this ritual in order to stay &lt;em&gt;united&lt;/em&gt;. And I meant the group
with a weak and incompetent &lt;del&gt;manager&lt;/del&gt; management.&lt;/p&gt;

&lt;p&gt;A strong and professional management keeps the group together and makes it achieve
the goal through 1) &lt;em&gt;explicitly-defined&lt;/em&gt; personal objectives
and 2) &lt;em&gt;non-ambiguous&lt;/em&gt; motivational instruments. Simply put,
at every moment of time everybody knows exactly what they have to do in order to get
&lt;del&gt;money&lt;/del&gt; what they are there for.&lt;/p&gt;

&lt;p&gt;However, &lt;em&gt;most&lt;/em&gt; software groups don’t have such great management, for many
reasons. Thanks to how Agile has been diminishing project management for
years, replacing it with leadership and “team work,” many of the potentially good
managers have lost their motivation to work as such. Needless to say, talent
among managers is as rare as it is among programmers, dentists, or interior designers.
Moreover, great management does not tolerate mediocrity and makes mistakes visible, which, of course,
the majority is always against—it will do everything possible to sabotage this.
In most software teams an attempt to manage effectively, defining objectives
explicitly and motivating by results, will most likely lead to a dismissal
of such a courageous manager.&lt;/p&gt;

&lt;p&gt;As a result, most programmers neither have personal objectives nor motivational instruments:
they stay in the office &lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;from nine till five&lt;/a&gt;
and get a raise every few years only by switching company. And they have
supervisors, mentors, coaches, leaders, you name it, … instead of managers.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;Programmers, lined up every morning and forced to explain themselves, inevitably feel guilty.
&lt;/aside&gt;

&lt;p&gt;Thus, how is it possible to keep the group together and make sure programmers
at least pretend to be working, if they have no personal responsibilities,
their motivation is close to zero, and they can’t be discharged because the
cost of recruiting new ones is extremely high? Moreover, new ones will behave exactly
the same, simply because this is the most effective behavior for them, when the management
is weak (or absent). What instrument can be employed to &lt;em&gt;make&lt;/em&gt; them work?&lt;/p&gt;

&lt;p&gt;Guilt.&lt;/p&gt;

&lt;p&gt;This emotion is one of a few fundamental ones. Most people feel it after
harming someone and will try to avoid it. Programmers, lined up every morning
and forced to explain themselves, inevitably feel guilty: for mistakes,
for impediments, for lack of progress, for their dress, for their accent,
for many other things. It doesn’t matter what they feel guilty for; what is
important is to &lt;em&gt;regularly&lt;/em&gt; make them feel ashamed of letting other people down,
even if they don’t. The emotion kicks in when the group is listening and
an individual is speaking, even if there is no real harm done to the group by the
speaking individual. &lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt; quotes a number
of academic papers confirming that, but there is no need to have a PhD
in psychology in order to understand how vulnerable and scary the position
of someone speaking in front of a group can be (I can confirm that too as a
&lt;a href=&quot;/talks.html&quot;&gt;regular&lt;/a&gt; public speaker). Guilt kicks in and the programmer
feels that his or her actions may cause or have already caused problems to others.
The programmer gets back to the computer and starts working hard, without
any objectives or motivation. Except to not let &lt;del&gt;mommy&lt;/del&gt; others down!&lt;/p&gt;

&lt;p&gt;To the contrary, a strong and competent management employs formal reward-and-punishment mechanisms
in order to align the personal objectives of each team member with the business
goals the team is trying to achieve. Here are a few examples of such a mechanism
(rewards and punishment mixed together):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each successful deployment you get $120&lt;/li&gt;
  &lt;li&gt;When this unit test is fixed you get $200&lt;/li&gt;
  &lt;li&gt;Every time the server is down for 5+ minutes you lose $500&lt;/li&gt;
  &lt;li&gt;You &lt;a href=&quot;/2016/03/01/how-we-interview-programmers.html&quot;&gt;interview&lt;/a&gt; a new Java programmer and get $100&lt;/li&gt;
  &lt;li&gt;You get $75 for each critical bug you can find&lt;/li&gt;
  &lt;li&gt;If you don’t fix this ticket in 3 days, you won’t be paid for it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to put such an obvious and explicit motivational system in place
the management has to be pretty smart and strong. Moreover, it will require a lot
of work to do and may lead to serious problems with the team, since, as was
mentioned above, the mediocre majority will try to sabotage it.&lt;/p&gt;

&lt;p&gt;Meetings, especially morning stand-ups, are a “perfect” substitute, because
they make it possible to humiliate programmers regularly, triggering their
innate guilt emotion, which sends these or similar signals to their brains:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t stop working, you will disappoint &lt;del&gt;your mom&lt;/del&gt; the team!&lt;/li&gt;
  &lt;li&gt;Don’t open Facebook, it upsets everybody!&lt;/li&gt;
  &lt;li&gt;Work on this ticket, we rely on you!&lt;/li&gt;
  &lt;li&gt;Deploy it faster, don’t let us down!&lt;/li&gt;
  &lt;li&gt;Be a good boy/girl, don’t keep us waiting!&lt;/li&gt;
  &lt;li&gt;If you don’t fix it now, you will be ashamed tomorrow morning!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every morning stand-up meeting is a refreshment of guilt every programmer
needs in order to stay “motivated” and “engaged.” This is the real
reason why they are “more effective” than digital and formal
flows of information.&lt;/p&gt;

&lt;p&gt;Maybe some time in the future we will find a way to deliver guilt
in a small pill that every programmer will have to swallow in the morning.
Until such a pill is invented, keep doing morning stand-ups.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Who needs regular status meetings? &lt;a href=&quot;https://twitter.com/hashtag/codeahead?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#codeahead&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1170661449854803968?ref_src=twsrc%5Etfw&quot;&gt;September 8, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="management" /><category term="agile" /><summary type="html">A few years ago I wrote a blog post about the daily stand-up meetings many software teams are doing regularly. Since then, the article has been getting comments from both sides. Readers either 1) strongly agree with me or 2) accuse me of having no idea what morning stand-ups are for. My point was: only weak managers need such meetings to coordinate the team, while strong ones use more formal instruments to organize the flow of information. However, as someone noted, morning meetings are not supposed to be used by managers to coordinate anyone, but “to discuss progress, impediments and to plan.” I’m not buying it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/09/barfuss.jpg" /></entry></feed>